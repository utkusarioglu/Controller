{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/c_controller.ts","webpack:///./src/t_controller.ts","webpack:///./src/controller.ts","webpack:///./node_modules/@utkusarioglu/resolver/index.js","webpack:///./node_modules/@utkusarioglu/starel-globals/index.js","webpack:///./src/base_controller.ts","webpack:///./node_modules/events/events.js","webpack:///./src/m_controller.ts","webpack:///./src/m_controller_events.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","C_Controller","AllServices","GraceTime","E_AlreadyDefined","E_CalledBeforeDeclaration","E_NoScopeSelected","join","E_MultipleRequestsBeforeResponse","E_ForcedDynamic","e_Scope","e_ServiceGroup","M_Controller","M_ControllerEvents","Controller","namespace","this","set_GlobalNamespace","scope","responding_namespace","talk","group","Standard","responding_channel","Separator","Dialogue","instruction_code","Resolution","produce_UniqueInstructionCode","is_StaticResponder","_forced_dynamic_service","_static_content_archive","sniff","dynamic_transmission","request_DynamicTransmission","set_PromisifiedStaticContent","static_transmisson","console","warn","Time","Date","getTime","Promise","resolve","recipient_namespace","get_Scopes","request","_controller_global_namespace","response_func","is_static","_static_responders","push","forEach","active_scope","respond","get_DialogueArchive","get_ServedChannels","channel","static_content","then","transmission","pave","LastDynamicTime","Static","log","delay","announce","indexOf","get_AnnouncementArchive","subcribed_namespace","listen","callback","subscribe","test_callback","action_callback","count","current_count","wait","wait_set","wait_Some","local_namespace","_controller_local_namespace","create_LocalNamespace","keys","_local_controllers","global_namespace","_global_namespaces","BaseController","Local","list","_global_controller","length","Error","Global","e","default","M_State","_channel","_id","Math","random","toString","slice","_states","throw_OverloadError","C_State","E_VarNotDefined","subs","get_Var","JSON","parse","stringify","entries","set_Var","is_empty","_tracking_enabled","get_Channel","Channel","Namespace","split","Id","get_Id","Variable","Value","copy_Var","_track_stack","E_TrackingOff","map","filter","e_filterMode","And","find","reduce","Or","assign_Property","E_PropertyRequired","Expression","assign_Class","E_ChOverload","Array","isArray","get_Vars","State","a","pop","is_Object","has_Function","String","toProperCase","replace","charAt","toUpperCase","substr","toLowerCase","minify","chop","RegExp","match","RI","Path","Root","Directory","Monologue","Extension","Function","window","_state","get_GlobalNamespace","set_Vars","remove_State","M_Namespace","_global_namespace","C_Namespace","get_GlobalNamespaceStack","produce_Stack","check_NamespaceInput","get_LocalNamespace","_local_namespace","get_LocalNamespaceStack","set_LocalNamespace","has_LocalNamespace","E_NoEmpty","NamespaceSeparator","Parent","extender_class","produce_ClassExpression","getOwnPropertyNames","getOwnPropertyDescriptor","u","with","super","initialize_State","set_ResolutionInstruction","is_ResolutionInstruction","get_State","extract_ExpressionTrail_FromResolutionInstruction","set_ExpressionTrail","extract_ArgumentPool_fromResolutionInstruction","set_ArgumentPool","produce_set_ExpressionStack_FromExpressionTrail","produce_ExpressionTrail_FromExpressionStack","C_Resolver","EXPRESSION_SEPARATOR","produce_ExpressionStack_FromExpressionTrail","set_ExpressionStack","get_ExpressionStack","get_ArgumentPool","Last","First","During","splice","extract_ExpressionType","e_expressionType","Key","extract_MethodName","INSTANTIATION_INDICATOR","Instantiate","METHOD_INDICATOR","Method","RulesVarName","E_NonPotentAttempt","E_NonStringType","E_DoesNotCarry","E_DepthInconsistent","E_TooDeep","E_TooShallow","E_MinTrailDepthLimit","DISABLED_PHRASE","Null","Other","Undefined","VariableType","ResolutionInstruction","e_typeDefinition","C_BootState","ClassReady","ListenReady","TalkReady","ModulesReady","DependencyReady","ServerReady","TestReady","ModuleInstalled","LibraryAdded","C_StartupTalk","run_Listen","run_Talk","run_Requests","run_Modules","run_Server","run_Tests","send_Archive","add_Archive","MinTrailDepth","MaxTrailDepth","Recursion","set_Resolution","set_Passage","is_DisabledPassage","get_MaxResolutionDepth","get_MinResolutionDepth","produce_ResolutionDepth","get_EntryPoint","build_Items","check_ItemType","build_Resolution","build_Array","build_Object","concatenate_Items","constructor","check_ResolutionDepth","get_Sources","retrieve_ResolutionRules","produce_ExecutionStepStack","check_ExpressionAvailability","build_Arguments","DoesNotCarry","every","retrieve_ItemTypeArray","concatenate_Objects","Resolver","controller_scope","_monologue_emitter","EventEmitter","setMaxListeners","_dialogue_emitter","_announcement_archive","_dialogue_archive","_controller_scope","sender_namespace","service_id","create_RandomServiceId","request_channel","response_channel","request_packet","Sender","Recipient","Talk","Scope","reject","once","response_packet","archive_Dialogue","emit","responder_namespace","response_callback","listen_channel","on","requested_return_content","serve_packet","Content","catch","error","Meta","Elapsed","Request","Response","eventNames","expression_trail","announcement_channel","announcement_packet","do_announcement","archive_Announcement","setTimeout","total_count","once_callback_function","error_content","all","wait_event","Listen","Test","Call","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","ownKeys","getOwnPropertySymbols","concat","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","emitter","onceWrapper","arguments","fired","removeListener","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","getMaxListeners","doError","er","err","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","index","spliceOne","off","removeAllListeners","rawListeners","_controller","subscription_list","_subscriptions","dependencies_list","_dependencies","reception_list","_receptions","_announcements","reception","services_list","_services","set_Controller","announce_ToAllServices","get_Controller","register_Dependencies","register_Subscriptions","register_Announcements","register_Services","subscription","dependency","Members","data","announcement","service","sequence_steps","manager_namespace","step_promise_stack","steps_promise_sequence","step","resolve_step_promise","List","start_message","step_talk","active_step_promise_stack","resolution_instruction","library_source_namespace"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { t_controllerGenericObj } from \"./t_controller\";\r\n\r\nexport const C_Controller: t_controllerGenericObj = {\r\n\r\n    /** Namespace to use when a controller wants to talk to all services */\r\n    AllServices: \"App\",\r\n\r\n    /** The duration that is allowed to pass between sequence events. can\r\n     * be removed later on*/\r\n    GraceTime: 20,\r\n\r\n    E_AlreadyDefined: \"Controller already defined\",\r\n    E_CalledBeforeDeclaration: \"Controller called before declaration\",\r\n    E_NoScopeSelected: [\"There is a problem with the scopes. \",\r\n        \"It may be due to undefiend LocalNamespace \",\r\n        \"if the code is expected to work in local scope\"].join(''),\r\n    E_MultipleRequestsBeforeResponse: \"Multiple requests for the content was placed before the promise was resolved\",\r\n    E_ForcedDynamic: \"All services are forced to be dynamic\",\r\n}\r\n","/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport { BaseController } from \"./base_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstructionNoArgs,\r\n    t_resolutionInstruction,\r\n} from \"@utkusarioglu/resolver\";\r\n\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n/*\r\n * ========================================================================== Boundary 1 =========\r\n *\r\n *\tSTAND INS\r\n *\r\n * ===============================================================================================\r\n */\r\n\r\n/**\r\n * Number used as unix epoch\r\n * */\r\nexport type t_epoch = number\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\tSCOPE\r\n */\r\n\r\n/**\r\n * Legal scopes for the controller\r\n * \r\n * Local only emits to local namespace (if defined)\r\n * Global emits to global namespace\r\n * LocalAndGlobal emits to both\r\n * */\r\nexport enum e_Scope {\r\n    Local = 1,\r\n    Global = 10,\r\n    LocalAndGlobal = 11,\r\n}\r\n\r\n/**\r\n * All legal values of e_Scope\r\n * */\r\nexport type t_scope = e_Scope;\r\n\r\n/**\r\n * Only single scope allowed\r\n * */\r\nexport type t_singleScope = e_Scope.Local | e_Scope.Global;\r\n\r\n\r\n\r\n/**\r\n * Contains specifications for the transmission error\r\n * */\r\nexport type t_error = {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Alias for string to denote channel\r\n * */\r\nexport type t_channel = string;\r\n\r\n/**\r\n * Alias for string to denote the unique service id\r\n * */\r\nexport type t_serviceId = string\r\n\r\n/**\r\n * Stores specifications required for the wait method to run\r\n * */\r\nexport type t_waitSet = {\r\n    /** Namespace of the target that is being waited*/\r\n    Namespace: t_namespace,\r\n    /** the resolution to listen to */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** callback function to determine if the emit from the awaited meets the requirements*/\r\n    Test?: (transmission: t_transmission) => boolean,\r\n    /** callback to be executed once the awaited passes the test*/\r\n    Call?: (transmission: t_transmission) => any,\r\n}\r\n\r\n/**\r\n * Alias for any to denote the content transmitted via t_transmission\r\n * */\r\nexport type t_transmissionContent = any;\r\n\r\n\r\n/**\r\n * Contains keys that are expected to be transmitted by controller methods\r\n * */\r\nexport type t_transmission = {\r\n    /** namespace of the sender*/\r\n    Sender: t_namespace,\r\n    /** namespace of the recipient*/\r\n    Recipient: t_namespace,\r\n    /** Redundant info for ease of access, concatenating:\r\n     * 1- recipient namespace  \r\n     * 2- method or announcement separator (whichever applies)\r\n     * 3- service group\r\n     * 4- id separator (if applies)\r\n     * 5- id (if applies)\r\n     * */\r\n    Channel?: t_channel,\r\n    /** denotes the service group in service transmissions */\r\n    Group?: e_ServiceGroup,\r\n    /** Listening resolution involved with the transmission */\r\n    Listen?: t_resolutionInstructionNoArgs,\r\n    /** Talking that is involved with the transmission*/\r\n    Talk?: t_resolutionInstruction,\r\n    /** transmission content that is created by the responder */\r\n    Content?: t_transmissionContent,\r\n    /** Error content if an error occured*/\r\n    Error?: t_error,\r\n    /** Unique request code*/\r\n    Id?: t_serviceId,\r\n    /** epoch when the transmission occured */\r\n    Time: t_epoch,\r\n    Static: boolean,\r\n    LastDynamicTime?: t_epoch,\r\n    Scope: e_Scope,\r\n}\r\n\r\n\r\n/**\r\n * Datatype for instructing multiple waits followed by a call\r\n * */\r\nexport type t_dependency_group = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_singleScope,\r\n    /** Dependency members to be waited*/\r\n    Members: t_waitSet[];\r\n    /** Callback function to be executed once all the dependencies become available*/\r\n    Call: (value: any) => Promise<any>,\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel\r\n * */\r\nexport type t_subscription = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** The namespace that is being subscribed to*/\r\n    Namespace: t_namespace,\r\n    /** Resolution that is being subscribed at */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** Callback function to be executed when the subscription emits*/\r\n    Call: (value: any) => any,\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel followed by a call whose \r\n * return is emitted to the requester\r\n * */\r\nexport type t_service = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace that is expected to respond to the request*/\r\n    Namespace: t_namespace,\r\n    /** Specific method that is being requested*/\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** Callback function to be executed on the response transmission*/\r\n    Call: (value: any) => any,\r\n    /** Whelther the service is static */\r\n    Static?: boolean,\r\n    /** Service group */\r\n    Group: e_ServiceGroup,\r\n}\r\n\r\n/**\r\n * Datatype for announcing a listening channel to which multiple clases can independently \r\n * send data towards, which will independently handled by the call function\r\n * */\r\nexport type t_reception = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace that is accepting the admissions */\r\n    Namespace?: t_namespace,\r\n    /** Announcement resolution */\r\n    Talk: t_resolutionInstruction,\r\n    /** Listening resolution */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** function that will be called when another node emits to the channel (namespace + . + method) */\r\n    Call: (value: any) => any,\r\n}\r\n\r\n/**\r\n * Datatype for instructing emit of data to a certain channel without any \r\n * following listening activity by the emitter\r\n * */\r\nexport type t_announcement = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace of the announcer*/\r\n    Namespace: t_namespace,\r\n    /** the resolution that will be processed by the target */\r\n    Talk: any,\r\n}\r\n\r\nexport enum e_ServiceGroup {\r\n    Standard,\r\n}\r\n\r\n/**\r\n * Data structure for Controller class static content archive\r\n * */\r\nexport type t_staticContentArchive = {\r\n    [channel: string]: {\r\n        [unique_request_code: string]: t_transmission\r\n    }\r\n}\r\n\r\n/**\r\n * Stores local controllers\r\n * */\r\nexport type t_localControllerStack = {\r\n    [namespace: string]: BaseController\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Defines the properties necessary for executing one step\r\n * */\r\nexport type t_sequenceStep = {\r\n    /** Console mesage for the start of the step if enabled */\r\n    StartMessage?: string,\r\n    /** Console mesage for the end of the step if enabled */\r\n    EndMessage?: string,\r\n    /** Instruction to be listened to for determining the services' completion of the step */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** List of namespaces that are required to complete the step */\r\n    List: t_namespace[],\r\n    /** Instruction to announce to listening services that the step execution is shall \r\n     * be carried out. Some steps may not require a talk as the execution starts through \r\n     * some other method */\r\n    Talk?: t_resolutionInstructionNoArgs,\r\n}\r\n\r\n/**\r\n * Generic mapping object for Controller\r\n * */\r\nexport type t_controllerGenericObj = { [key: string]: any }","\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tIMPORTS\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/*\r\n *\tDEPENDENCIES\r\n */\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport \"@utkusarioglu/starel-globals\";\r\nimport { BaseController } from \"./base_controller\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_instructionCode\r\n} from \"@utkusarioglu/resolver\";\r\nimport {\r\n    t_scope,\r\n    t_singleScope,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    t_staticContentArchive,\r\n    e_Scope,\r\n    t_localControllerStack,\r\n    t_channel,\r\n    t_epoch\n} from \"./t_controller\";\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tEXPORTS\r\n *\r\n * ============================================================================\r\n */\r\n\r\nexport { M_Controller } from \"./m_controller\";\r\nexport { M_ControllerEvents } from \"./m_controller_events\";\r\nexport {\r\n    e_Scope,\r\n    t_transmission,\r\n    t_subscription,\r\n    t_sequenceStep,\r\n    t_dependency_group,\r\n    t_service,\r\n    t_reception,\r\n    t_channel,\r\n    t_waitSet,\r\n} from \"./t_controller\";\r\nexport { C_Controller } from \"./c_controller\";\r\n\r\n\r\n\r\n/**\r\n * Establishes local and global event emitters,\r\n * Stores the history of exchanges\r\n *\r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport class Controller {\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tINSTANTIATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n    /** Provides BaseController functionality for global scope*/\r\n    private static _global_controller = new BaseController(e_Scope.Global);\r\n\r\n    /** Provides BaseContoller functionality for local scopes*/\r\n    private static _local_controllers: t_localControllerStack = {};\r\n\r\n    /** List of registered classes*/\r\n    private static _global_namespaces: t_namespace[] = [];\r\n\r\n    /** Global namespace for this controller instance*/\r\n    private _controller_global_namespace!: t_namespace;\r\n\r\n    /** Local namespace for this controller instance*/\r\n    private _controller_local_namespace!: t_namespace;\r\n\r\n    /** Holds the static content for every responder */\r\n    private static _static_content_archive: t_staticContentArchive = {};\r\n\r\n    /** Channels that respond statically */\r\n    private static _static_responders: t_namespace[] = [];\r\n\r\n    /** Boolean that states whether the static content archive will be ignored */\r\n    private static _forced_dynamic_service: boolean = false;\r\n\r\n    /**\r\n     * Establishes local and global event emitters,\r\n     * Stores the history of exchanges\r\n     * \r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    constructor(namespace: t_namespace) {\r\n\r\n        this.set_GlobalNamespace(namespace);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\tRequest and Respond functions together form the \"service\" feature.\r\n *\t{@link A_Controller} class introduces include_Services method for registering responses\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from a certain channel, expects a .then response\r\n     * If the responding channel is registered the group as static, static response will\r\n     * be served\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param responding_namespace t_namespace for the recipient\r\n     * @param talk t_resolution that will be processed by the responding class\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    request(\r\n        scope: t_singleScope,\r\n        responding_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n\r\n        const responding_channel = responding_namespace + Separator.Dialogue + group;\r\n        const instruction_code = Resolution.produce_UniqueInstructionCode(talk);\r\n\r\n        if (Controller.is_StaticResponder(responding_channel) &&\r\n            !Controller._forced_dynamic_service) {\r\n\r\n            return Controller._static_content_archive.sniff(\r\n                [\r\n                    responding_channel,\r\n                    instruction_code,\r\n                ],\r\n                () => {\r\n\r\n                    const dynamic_transmission = this.request_DynamicTransmission(\r\n                        scope,\r\n                        responding_namespace,\r\n                        talk,\r\n                        group,\r\n                    )\r\n\r\n                    Controller.set_PromisifiedStaticContent(\r\n                        responding_channel,\r\n                        instruction_code,\r\n                        dynamic_transmission\r\n                    ); \r\n\r\n                    return dynamic_transmission;\r\n                },\r\n                (static_transmisson: t_transmission) => {\r\n\r\n                    console.warn(\"Serving static content\");\r\n\r\n                    static_transmisson.Time = (new Date()).getTime();\r\n                    return Promise.resolve(static_transmisson)\r\n                }\r\n            ); // sniff\r\n\r\n        } else {\r\n\r\n            return this.request_DynamicTransmission(\r\n                scope,\r\n                responding_namespace,\r\n                talk,\r\n                group,\r\n            );\r\n\r\n        } // if is_static_responder\r\n    }\r\n\r\n    /**\r\n     * Requests dynamic transmission from related scopes\r\n     * \r\n     * @param scope\r\n     * @param recipient_namespace\r\n     * @param talk\r\n     * @param group\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private request_DynamicTransmission(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n        return this\r\n            .get_Scopes(scope)[0]\r\n            .request(scope, this._controller_global_namespace, recipient_namespace, talk, group);\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for registering responses\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param response_func (t_transmission) => Promise that will process the request\r\n     * @param is_static: if true, the created response will be saved for the controller for \r\n     * speedy re-response in future requests, if false, the response callback will be called \r\n     * everytime the same request is made\r\n     * @param group defines the set of methods that is available for the response. Used for\r\n     * Responding to differing security clearances\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    respond(\r\n        scope: t_scope,\r\n        response_func: (t_transmission: t_transmission) => Promise<any>,\r\n        is_static: boolean = true,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): void {\r\n\r\n        if (is_static) {\r\n            Controller._static_responders.push(\r\n                this._controller_global_namespace + \r\n                Separator.Dialogue + \r\n                group\r\n            );\r\n        }\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.respond(\r\n                this._controller_global_namespace,\r\n                response_func,\r\n                group,\r\n                scope,\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for DIALOGUE\r\n */ \r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_DialogueArchive(scope: t_singleScope): object {\r\n        return this.get_Scopes(scope)[0].get_DialogueArchive();\r\n    }\r\n\r\n    /**\r\n     * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_ServedChannels(scope: t_singleScope): (string | symbol)[] {\r\n        return this.get_Scopes(scope)[0].get_ServedChannels();\r\n    }\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tHANDLE STATIC SERVICE\r\n */\r\n\r\n    /**\r\n     * Resolves the transmission promise, corrects the time of the transmission\r\n     * Saves the content as static for the given channel and code\r\n     * Warning: content served will remain to be dynamic until the promise is resolved\r\n     * \r\n     * @param channel\r\n     * @param instruction_code\r\n     * @param static_content\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static set_PromisifiedStaticContent(\r\n        channel: t_channel,\r\n        instruction_code: t_instructionCode,\r\n        static_content: Promise<t_transmission>\r\n    ): void {\r\n        static_content\r\n            .then((transmission: t_transmission) => {\r\n\r\n                Controller._static_content_archive.pave(\r\n                    [\r\n                        channel,\r\n                        instruction_code,\r\n                    ],\r\n                    () => {\r\n                        console.warn(C_Controller.E_MultipleRequestsBeforeResponse);\r\n                    },\r\n                    () => {\r\n\r\n                        transmission.LastDynamicTime = transmission.Time;\r\n                        transmission.Time = 0;\r\n                        transmission.Static = true;\r\n\r\n                        return transmission\r\n                    }\r\n                )\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns all channels that registered static service\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_AllStaticChannels(): t_namespace[] {\r\n        return Controller._static_responders;\r\n    }\r\n\r\n    /**\r\n     * Returns all the static content that is currently archived\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_AllStaticContent(): t_staticContentArchive {\r\n        return Controller._static_content_archive;\r\n    }\r\n\r\n    /**\r\n     * Clears the static content archive, forcing re-build\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static flush_StaticContentArchive(): void {\r\n        Controller._static_content_archive = {};\r\n    }\r\n\r\n    /**\r\n     * Forces all services to remain dynamic despit what the service provider intends\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static force_AllDynamicService(): void {\r\n        console.log(C_Controller.E_ForcedDynamic);\r\n        Controller._forced_dynamic_service = true;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tThese methods emit or listen to a certain channel but they do not expect the\r\n *\tother side to take any kind of action.\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *   TALK\r\n *   \r\n *   These emit locally or globally\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param recipient_namespace the namespace that is the primary target for the announcement\r\n     * @param talk the talk resolution for the announcement\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    announce(\r\n        scope: t_scope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.announce(\r\n                scope as t_singleScope,\r\n                this._controller_global_namespace,\r\n                recipient_namespace,\r\n                talk,\r\n                delay,\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns true if the specified channel is registered as a static responder\r\n     * \r\n     * @param channel\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static is_StaticResponder(channel: t_channel): boolean {\r\n        return this._static_responders.indexOf(channel) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the entire list of announcements since app start\r\n     * */\r\n    get_AnnouncementArchive(scope: t_singleScope): object[] {\r\n        return this.get_Scopes(scope)[0].get_AnnouncementArchive();\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n *\t\r\n *\tThese listen globally or locally\r\n */\r\n\r\n    /**\r\n     * Listens during the run of the app, it may take internal action \r\n     * but the emitter talker will not be notified of this\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param subcribed_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs that will be monitored\r\n     * @param callback: (t_transmission) => void action to take when there is chatter\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    subscribe(\r\n        scope: t_scope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.subscribe(\r\n                scope as t_singleScope,\r\n                subcribed_namespace,\r\n                listen,\r\n                callback);\r\n        });\r\n    }\r\n     \r\n    /**\r\n     * \r\n     *  Similar to subscribe, listens to a specific channel but does not respond to the source,\r\n     *  Unlike subscribe, wait quits listening after a certain number of occurences of the channel, default = 1\r\n     * \r\n     * @param scope Local or global\r\n     * @oaram recipient_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs used for monitoring\r\n     * @param test_callback callback for determining whether the channel signal meets the wait criteria\r\n     * @param action_callback: callback to execute if the test callbak returns true\r\n     * @param count number of times wait function will wait for the test callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    wait(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => { return true },\r\n        action_callback: (transmission: t_transmission) => void = () => { },\r\n        count: number = 1,\r\n        current_count: number = count\r\n    ): Promise<any> {\r\n        const wait_response = this.get_Scopes(scope)[0].wait(\r\n            scope,\r\n            this._controller_global_namespace,\r\n            recipient_namespace,\r\n            listen,\r\n            test_callback,\r\n            action_callback,\r\n            count,\r\n            current_count\r\n        );\r\n\r\n        return wait_response;\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param wait_set: instructions for the wait conditions\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    wait_Some(\r\n        scope: t_singleScope,\r\n        wait_set: t_waitSet[]\r\n    ): Promise<any> {\r\n        return this.get_Scopes(scope)[0].wait_Some(scope, this._controller_global_namespace, wait_set);\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tHANDLE\r\n *\t\r\n *\tGetters, Setters, Checkers and Manipulators\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tHANDLE NAMESPACE\r\n *\t\r\n *\tMethods involved with getting and setting global and local namespaces for the instance\r\n */\r\n\r\n    /**\r\n     * Sets the namespace used for listening and emitting to local\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    set_LocalNamespace(local_namespace: t_namespace): this {\r\n        this._controller_local_namespace = local_namespace;\r\n        this.create_LocalNamespace(local_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the local namespace that the class emits and listens to\r\n     * */\r\n    get_LocalNamespace(): t_namespace {\r\n        return this._controller_local_namespace;\r\n    }\r\n\r\n    /**\r\n     * Gets the entire list of registered local namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_LocalNamespaces(): t_namespace[] {\r\n        return Object.keys(Controller._local_controllers);\r\n        //return Controller._namespaces;\r\n    }\r\n\r\n    /**\r\n     * Sets the global namespace for this instance\r\n     * \r\n     * @param global_namespace as t_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    set_GlobalNamespace(global_namespace: t_namespace): this {\r\n        this._controller_global_namespace = global_namespace;\r\n        Controller._global_namespaces.push(global_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the namespace that the class is registered as\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_GlobalNamespace(): t_namespace {\r\n        return this._controller_global_namespace;\r\n    }\r\n\r\n    /**\r\n     * Returns all the controller registered global namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_GlobalNamespaces(): t_namespace[] {\r\n        return Controller._global_namespaces;\r\n    }\r\n\r\n    /**\r\n     * Creates a local namespace with the given name\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private create_LocalNamespace(local_namespace: t_namespace): void {\r\n        Controller._local_controllers\r\n            .pave([local_namespace],\r\n                () => {\r\n                    //console.warn(`${local_namespace} already exists`)\r\n                },\r\n                () => {\r\n                    return new BaseController(e_Scope.Local);\r\n                }\r\n            )\r\n        //Controller._local_controllers[local_namespace] = \r\n    }\r\n\r\n    /**\r\n     * Deletes the local namespace\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private destroy_LocalNamespace(local_namespace: t_namespace): void {\r\n        delete Controller._local_controllers[local_namespace];\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tHANDLE SCOPE\r\n */\r\n\r\n    /**\r\n     * Returns an array of Basecontrollers for the given scope value\r\n     * \r\n     * @param scope: number that defines the scopes \r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private get_Scopes(scope: t_scope | t_singleScope): BaseController[] {\r\n\r\n        let list: BaseController[] = [];\r\n\r\n        if (scope & 1) {\r\n            if (this._controller_local_namespace)\r\n                list.push(Controller._local_controllers[this._controller_local_namespace]);\r\n        }\r\n\r\n        if (scope & 2) {\r\n            list.push(Controller._global_controller);\r\n        }\r\n\r\n        if (list.length < 1) {\r\n            throw new Error(C_Controller.E_NoScopeSelected)\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Returns all currently defined local controllers\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_LocalControllerStack(): t_localControllerStack {\r\n        return Controller._local_controllers;\r\n    }\r\n}\r\n\r\n\r\n\r\n","!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=6)}([function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),r(2),r(3),r(4);const n=r(1),o=r(5);var i=r(6);t.M_State=i.M_State;class s{constructor(e=\"Generic\",t=null){this._channel=e,this._id=t||Math.random().toString().slice(2),s._states.pave([this._channel,this._id],()=>{this.throw_OverloadError()},()=>({}))}get_Var(e){return s._states.sniff([this._channel,this._id],()=>{console.log(n.C_State.E_VarNotDefined.subs(this._channel,this._id))},t=>t.sniff(e,()=>{},e=>e))}set_Var(e,t){return s._states[this._channel][this._id].pave(e,()=>t,()=>t),this}copy_Var(e){const t=this.get_Var(e);return t?JSON.parse(JSON.stringify(t)):void 0}has_Var(e){return s._states[this._channel][this._id].sniff(e,()=>!1,()=>!0)}set_Vars(e){return Object.entries(e).forEach(([e,t])=>{this.set_Var(e,t)}),this}get_Vars(){return s._states[this._channel][this._id]}static get_AllStates(e=!0){if(e){let e={};return Object.entries(this._states).forEach(([t,r])=>{const n=Object.keys(r);n.length<2?e[t]=r[n[0]]:e[t]=r}),e}return s._states}get_Id(){return this._id}get_Channel(){return this._channel}remove_State(){delete s._states[this._channel][this._id],s._states[this._channel].is_empty()&&delete s._states[this._channel]}static remove_AllStates(){s._states={}}track_Variable(e,t,r=(()=>!0)){if(!s._tracking_enabled)return;const n=this.get_Channel(),o={Time:(new Date).getTime(),Channel:n,Namespace:n.split(\":\")[0].split(\"?\")[0],Id:this.get_Id(),Variable:e,Value:void 0===t?this.copy_Var(e):t};r(o)&&s._track_stack.push(o)}static track_Variable(e,t,r){if(!s._tracking_enabled)return;const n={Time:(new Date).getTime(),Channel:e,Namespace:e.split(\":\")[0].split(\"?\")[0],Id:\"-\",Variable:t,Value:r};s._track_stack.push(n)}static get_AllTrackRecords(){return s._tracking_enabled?s._track_stack:n.C_State.E_TrackingOff}static get_AllTrackedChannels(){return s._tracking_enabled?s._track_stack.map(e=>e.Channel).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_AllTrackedNamespaces(){return s._tracking_enabled?s._track_stack.map(e=>e.Namespace).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_SomeTrackRecords(e,t=!0,r=o.e_filterMode.And){if(!s._tracking_enabled)return n.C_State.E_TrackingOff;let i=s._track_stack.filter(t=>{const n=e.sniff(\"Time\",()=>!0,([e,r])=>(void 0===e||t.Time>=e)&&(void 0===r||t.Time<=r)),i=e.sniff(\"Channels\",()=>!0,e=>void 0!==e.find(e=>t.Channel===e)||0===e.length),s=e.sniff(\"Namespaces\",()=>!0,e=>void 0!==e.find(e=>t.Namespace===e)||0===e.length);return[n,i,e.sniff(\"Variables\",()=>!0,e=>void 0!==e.find(e=>t.Variable===e)||0===e.length),e.sniff(\"Call\",()=>!0,e=>e(t)),s].reduce((e,t)=>{switch(e=void 0===e||e,r){case o.e_filterMode.And:return e&&t;case o.e_filterMode.Or:return e||t}})});return t&&(i=i.map(e=>(delete e.Channel,delete e.Time,delete e.Id,e))),i}set_OptionalProperties(e,t){return e.forEach(e=>{this.assign_Property(e,t)}),this}set_RequiredProperties(e,t){return e.forEach(e=>{if(!this.assign_Property(e,t))throw new Error(n.C_State.E_PropertyRequired.subs(e))}),this}assign_Property(e,t){let r=e.split(Separator.Expression).slice(-1)[0];return t.sniff(r,()=>!1,()=>(this.set_Var(e,t[r]),!0))}set_OptionalClasses(e,t){return Object.keys(e).forEach(r=>{this.assign_Class(e,r,t)}),this}set_RequiredClasses(e,t){return Object.keys(e).forEach(r=>{if(!this.assign_Class(e,r,t))throw new Error(n.C_State.E_PropertyRequired.subs(r))}),this}throw_OverloadError(e=[\"empty\"]){throw new Error(n.C_State.E_ChOverload.subs(this._channel,this._id,JSON.stringify(e)))}assign_Class(e,t,r){let n=t.split(Separator.Expression),o=n.slice(-1)[0];if(r.hasOwnProperty(o)){const i=Array.isArray(r[o])?r[o]:[r[o]];return this.get_Vars().pave(n,()=>{this.throw_OverloadError(n)},()=>i.map(r=>new e[t](r))),!0}return!1}}t.State=s,s._states={},s._track_stack=[],s._tracking_enabled=!0},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_State={E_VarNotDefined:\"Instance %0/%1 is not defined\",E_TrackingOff:\"Tracking Disabled\",E_PropertyRequired:\"Property '%0' is required\",E_ChOverload:\"Channel overload occured at: %0.%1\\n%2\",E_AlreadyDefined:\"State already defined\",E_CalledBeforeDeclaration:\"State called before declaration\"}},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var o=this,i=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);i<s.length;i++){var a=s[i];if(void 0===o[a])return t(o);o=o[a]}return r(o)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var o=Array.isArray(e)?e:e.split(n.Separator.Expression),i=o.pop(),s=this,a=function(e){if(void 0===e[i])return e[i]=r()||{},!0;var n=t();return n&&(e[i]=n),!1};if(!(o.length>0))return a(s);s.sniff(o,(function(){for(var e=0,t=o;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),String.prototype.toProperCase=function(){return this.replace(/\\w\\S*/g,e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase())},String.prototype.minify=function(){return this.replace(/\\s/g,\"\")},String.prototype.chop=function(e=50){const t=new RegExp(`.{1,${e}}`,\"g\");return this.match(t)||[]},String.prototype.subs=function(...e){return e.reduce((e,t,r)=>e.replace(`%${r}`,t),this)}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";(function(e,r){Object.defineProperty(t,\"__esModule\",{value:!0}),e.RI=\"RI\",console.log(\"ri should be available\"),e.Path={Root:r},e.Separator={Directory:\"/\",Expression:\".\",Id:\"-\",Dialogue:\"?\",Monologue:\":\",Namespace:\"/\",Extension:\".\"}}).call(this,r(1),\"/\")},function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.And=0]=\"And\",e[e.Or=1]=\"Or\"}(t.e_filterMode||(t.e_filterMode={}))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(0),o=r(1);t.M_State=class{initialize_State(e){if(void 0!==this._state)throw new Error(o.C_State.E_AlreadyDefined);const t=this.get_GlobalNamespace();return this._state=new n.State(t),void 0!==e&&this._state.set_Vars(e),this}get_State(){if(!(this._state instanceof n.State))throw new Error(o.C_State.E_CalledBeforeDeclaration);return this._state}remove_State(){this._state.remove_State()}}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);t.M_Namespace=n.M_Namespace},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2),o=function(){function e(){}return e.prototype.get_GlobalNamespace=function(){if(!this._global_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._global_namespace},e.prototype.get_GlobalNamespaceStack=function(){var e=this.get_GlobalNamespace();return this.produce_Stack(e)},e.prototype.set_GlobalNamespace=function(e){if(void 0!==this._global_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);return this.check_NamespaceInput(e),this._global_namespace=e,this},e.prototype.get_LocalNamespace=function(){if(!this._local_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._local_namespace},e.prototype.get_LocalNamespaceStack=function(){var e=this.get_LocalNamespace();return this.produce_Stack(e)},e.prototype.set_LocalNamespace=function(e){if(this._local_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);this.check_NamespaceInput(e),this._local_namespace=e},e.prototype.has_LocalNamespace=function(){return void 0!==this._local_namespace&&null!==this._local_namespace},e.prototype.check_NamespaceInput=function(e){if(void 0===e||0===e.length)throw new Error(n.C_Namespace.E_NoEmpty)},e.prototype.produce_Stack=function(e){return e.split(n.C_Namespace.NamespaceSeparator)},e}();t.M_Namespace=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Namespace={E_AlreadyDefined:\"%1 Namespace already defined\",E_CalledBeforeDeclaration:\"%1 Namespace called before declaration\",E_NoEmpty:\"%1 Namespace declaration cannot be empty\",NamespaceSeparator:\"/\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parent=e=>new n(e);class n{constructor(e){this.extender_class=e||class{}}with(...e){return e.reduce((e,t)=>n.produce_ClassExpression(t)(e),this.extender_class)}static produce_ClassExpression(e){return t=>{const r=class extends t{};return Object.getOwnPropertyNames(e.prototype).forEach(t=>{r.prototype.hasOwnProperty(t)||Object.defineProperty(r.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t))}),r}}}}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(2),o=r(1),i=r(0),s=r(4),a=r(5);class u extends(n.Parent().with(o.M_Namespace,i.M_State)){constructor(e){return super(),this.set_GlobalNamespace(\"App/Common/Resolver/Resolution\"),this.initialize_State(),this.set_ResolutionInstruction(e),this}set_ResolutionInstruction(e){if(!u.is_ResolutionInstruction(e)){const t=JSON.stringify(e);throw new Error(`Illegal resolution Instruction:\\n${t}`)}this.get_State().set_Var(\"ResolutionInstruction\",e);const t=u.extract_ExpressionTrail_FromResolutionInstruction(e);this.set_ExpressionTrail(t);const r=u.extract_ArgumentPool_fromResolutionInstruction(e);return this.set_ArgumentPool(r),this}get_ResolutionInstruction(){return this.get_State().get_Var(\"ResolutionInstruction\")}static is_ResolutionInstruction(e){return e[0]===RI&&e.length>1}static produce_UniqueInstructionCode(e){return JSON.stringify(e)}set_ExpressionTrail(e){if(\"\"===e)throw new Error(\"ExpressionTrail cannot be empty\");return this.get_State().set_Var(\"ExpressionTrail\",e),this.produce_set_ExpressionStack_FromExpressionTrail(e),this}get_ExpressionTrail(){return this.get_State().get_Var(\"ExpressionTrail\")}produce_set_ExpressionTrail_FromExpressionStack(e){const t=u.produce_ExpressionTrail_FromExpressionStack(e);this.set_ExpressionTrail(t)}static produce_ExpressionTrail_FromExpressionStack(e){return e.join(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ExpressionTrail_FromResolutionInstruction(e){return e[1]}set_ExpressionStack(e){return this.get_State().set_Var(\"ExpressionStack\",e),this}get_ExpressionStack(){return this.get_State().get_Var(\"ExpressionStack\")}produce_set_ExpressionStack_FromExpressionTrail(e){const t=u.produce_ExpressionStack_FromExpressionTrail(e);this.set_ExpressionStack(t)}static produce_ExpressionStack_FromExpressionTrail(e){return e.split(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ArgumentPool_fromResolutionInstruction(e){return e.length>2?e.slice(2-e.length):[]}set_ArgumentPool(e){this.get_State().set_Var(\"ArgumentPool\",e)}get_ArgumentPool(){return this.get_State().get_Var(\"ArgumentPool\")}produce_ExecutionStepStack(e){let t=0,r=this.get_ExpressionStack(),n=this.get_ArgumentPool();e.hasOwnProperty(\"Last\")&&(r=[...r,...e.Last]),e.hasOwnProperty(\"First\")&&(t+=e.First.length,r=[...e.First,...r]),e.hasOwnProperty(\"During\")&&r.map((o,i)=>{const s=i+t;if(e.During[s]){const t=e.During[s],o=r.splice(i,1,t);n.splice(i,0,o)}});let o=0;return r.map(e=>{const t=u.extract_ExpressionType(e);if(t!==a.e_expressionType.Key){const r=n[o++]||[];return[t,u.extract_MethodName(e),r]}return[t,e]})}static extract_ExpressionType(e){return e.slice(0,4)===this.INSTANTIATION_INDICATOR?a.e_expressionType.Instantiate:e.slice(-2)===this.METHOD_INDICATOR?a.e_expressionType.Method:a.e_expressionType.Key}static extract_MethodName(e){return e.replace(this.INSTANTIATION_INDICATOR,\"\").replace(this.METHOD_INDICATOR,\"\")}produce_ResolutionDepth(){return this.get_ExpressionStack().length}}t.Resolution=u,u.METHOD_INDICATOR=\"()\",u.INSTANTIATION_INDICATOR=\"new \"},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Resolver={RulesVarName:\"RESOLUTION_RULES\",E_NonPotentAttempt:\"Attempt to enable string that isn't a disabled passage\",E_NonStringType:\"Non-string type given to enable_Passage\",E_DoesNotCarry:\"Base does not carry expression '%1'\\n\",E_DepthInconsistent:\"MinDepth cannot be larger than MaxDepth\",E_TooDeep:\"Resolution is deeper than the max allowed depth\",E_TooShallow:\"Resolution is shallower than the min allowed depth\",E_MinTrailDepthLimit:\"min trail depth cannot be smaller than 1\",DISABLED_PHRASE:\"<<DISABLED>>\",EXPRESSION_SEPARATOR:\".\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.Instantiate=0]=\"Instantiate\",e[e.Method=1]=\"Method\",e[e.Key=2]=\"Key\"}(t.e_expressionType||(t.e_expressionType={})),function(e){e[e.Null=0]=\"Null\",e[e.Object=1]=\"Object\",e[e.Array=2]=\"Array\",e[e.Other=3]=\"Other\",e[e.Undefined=4]=\"Undefined\",e[e.VariableType=5]=\"VariableType\",e[e.Resolution=6]=\"Resolution\",e[e.ResolutionInstruction=7]=\"ResolutionInstruction\"}(t.e_typeDefinition||(t.e_typeDefinition={}))},function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0}),r(8);const n=r(0),o=r(1),i=r(2),s=r(3),a=r(4),u=r(5);e.RI=\"RI\",e.C_BootState={ClassReady:[RI,\"class_ready\"],ListenReady:[RI,\"listen_ready\"],TalkReady:[RI,\"talk_ready\"],ModulesReady:[RI,\"modules_ready\"],DependencyReady:[RI,\"dependency_ready\"],ServerReady:[RI,\"server_ready\"],TestReady:[RI,\"test_ready\"],ModuleInstalled:[RI,\"module_installed\"],LibraryAdded:[RI,\"LibraryAdded\"]},e.C_StartupTalk={run_Listen:[RI,\"run_listen\"],run_Talk:[RI,\"run_talk\"],run_Requests:[RI,\"run_requests\"],run_Modules:[RI,\"run_modules\"],run_Server:[RI,\"run_server\"],run_Tests:[RI,\"run_tests\"],send_Archive:[RI,\"send_Archive\"],add_Archive:[RI,\"add_Archive()\"]};var c=r(3);t.Resolution=c.Resolution;class l extends(i.Parent().with(n.M_State,o.M_Namespace)){constructor(e){super(),this.set_GlobalNamespace(e).initialize_State({MinTrailDepth:1,MaxTrailDepth:100,Recursion:!1})}get_EntryPoint(){return this.get_State().get_Var(\"EntryPoint\")}set_ExpressionTrail(e){const t=[RI,e];return this.set_Resolution(new s.Resolution(t)),this}set_ExpressionStack(e){const t=[RI,s.Resolution.produce_ExpressionTrail_FromExpressionStack(e)];return this.set_Resolution(new s.Resolution(t)),this}set_ResolutionInstruction(e){return this.set_Resolution(new s.Resolution(e)),this}set_Resolution(e){return this.set_Passage(e),this}remove_Resolution(){}set_Passage(e){return this.get_State().set_Var(\"EntryPoint\",e),this}static disable_Passage(e){return a.C_Resolver.DISABLED_PHRASE+JSON.stringify(e)}static enable_Passage(e){const t=a.C_Resolver.DISABLED_PHRASE;if(this.is_DisabledPassage(e))return JSON.parse(e.slice(t.length));throw new Error(a.C_Resolver.E_NonStringType+\"\\n\"+JSON.stringify(e))}static is_DisabledPassage(e){const t=a.C_Resolver.DISABLED_PHRASE;return\"string\"==typeof e&&e.slice(0,t.length)===t}set_Sources(e){return this.get_State().set_Var(\"Sources\",e),this}get_Sources(){return this.get_State().get_Var(\"Sources\")}set_MaxResolutionDepth(e){return this.get_State().set_Var(\"MaxTrailDepth\",e),this}get_MaxResolutionDepth(){return this.get_State().get_Var(\"MaxTrailDepth\")}set_MinResolutionDepth(e){if(e<1)throw new Error(a.C_Resolver.E_MinTrailDepthLimit);return this.get_State().set_Var(\"MinTrailDepth\",e),this}get_MinResolutionDepth(){return this.get_State().get_Var(\"MinTrailDepth\")}check_ResolutionDepth(e){const t=this.get_MaxResolutionDepth(),r=this.get_MinResolutionDepth();let n=[];if(r>t&&n.push(a.C_Resolver.E_DepthInconsistent),e.produce_ResolutionDepth()>=t&&n.push(a.C_Resolver.E_TooDeep),e.produce_ResolutionDepth()<r&&n.push(a.C_Resolver.E_TooShallow),0!==n.length)throw new Error(n.join(\"\\n\")+JSON.stringify(e))}set_Recursion(e){return this.get_State().set_Var(\"Recursion\",e),this}get_Recursion(){return this.get_State().get_Var(\"Recursion\")}produce_Resolute(){const e=this.get_EntryPoint(),t=this.build_Items(e);return this.remove_State(),t}build_Items(e){switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:e=new s.Resolution(e);case u.e_typeDefinition.Resolution:return this.build_Resolution(e);case u.e_typeDefinition.Array:return this.build_Array(e);case u.e_typeDefinition.Object:return this.build_Object(e);default:return e}}build_Array(e){if(e.length>0){const t=e.map(e=>this.build_Items(e));return l.concatenate_Items(t)}}build_Object(e){let t={};return\"function\"==typeof e||\"Promise\"===e.constructor.name?t=e:Object.entries(e).forEach(([e,r])=>{switch(l.check_ItemType(r)){case u.e_typeDefinition.ResolutionInstruction:const n=new s.Resolution(r);t[e]=this.build_Resolution(n);break;case u.e_typeDefinition.Array:t[e]=this.build_Array(r);break;case u.e_typeDefinition.Object:t[e]=this.build_Object(r);break;default:t[e]=r}}),t}build_Resolution(e){this.check_ResolutionDepth(e);let t=this.get_Sources();const r=this.retrieve_ResolutionRules(e),n=e.produce_ExecutionStepStack(r);return n.forEach(e=>{const r=e[1],o=e[0];if(this.check_ExpressionAvailability(t,r,n),o===u.e_expressionType.Key)t=t[r];else{const n=this.build_Arguments(e[2]);t=o===u.e_expressionType.Instantiate?new t[r](...n):t[r](...n)}}),this.build_Items(t)}check_ExpressionAvailability(e,t,r){void 0===e[t]&&console.warn(a.C_Resolver.DoesNotCarry.replace(\"%1\",t),r)}build_Arguments(e){return void 0!==e?e.map(e=>{switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:const t=new s.Resolution(e);return this.build_Resolution(t);case u.e_typeDefinition.Object:return this.build_Object(e);case u.e_typeDefinition.Array:return this.build_Array(e);default:return e}}):[]}static check_ItemType(e){return null===e?u.e_typeDefinition.Null:void 0===e?u.e_typeDefinition.Undefined:e instanceof s.Resolution?u.e_typeDefinition.Resolution:s.Resolution.is_ResolutionInstruction(e)?u.e_typeDefinition.ResolutionInstruction:Array.isArray(e)?u.e_typeDefinition.Array:e.is_Object()?u.e_typeDefinition.Object:u.e_typeDefinition.Other}static retrieve_ItemTypeArray(e){const t=l.check_ItemType(e[0]);return e.every(e=>t===l.check_ItemType(e))?t:u.e_typeDefinition.VariableType}static concatenate_Items(e){let t={};switch(l.retrieve_ItemTypeArray(e)){case u.e_typeDefinition.Object:t=l.concatenate_Objects(e);break;case u.e_typeDefinition.Array:break;default:t=e}return t}static concatenate_Objects(e){let t={};return e.reduce((e,r)=>(Object.keys(r).forEach(n=>{let o=r[n],i=e.sniff(n);switch(l.check_ItemType(o)){case u.e_typeDefinition.Array:t[n]=[...i?e[n]:[],...o];break;case u.e_typeDefinition.Object:t[n]=i?l.concatenate_Items([e[n],o]):o;break;default:t[n]=i?e[n]+o:o}}),t))}retrieve_ResolutionRules(e){const t=this.get_Sources(),r=e.get_ExpressionStack()[0],n=a.C_Resolver.RulesVarName;return t.sniff([s.Resolution.extract_MethodName(r),n],()=>({}),e=>e)}}t.Resolver=l}).call(this,r(7))},function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var o=this,i=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);i<s.length;i++){var a=s[i];if(void 0===o[a])return t(o);o=o[a]}return r(o)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var o=Array.isArray(e)?e:e.split(n.Separator.Expression),i=o.pop(),s=this,a=function(e){if(void 0===e[i])return e[i]=r()||{},!0;var n=t();return n&&(e[i]=n),!1};if(!(o.length>0))return a(s);s.sniff(o,(function(){for(var e=0,t=o;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))}]));\r\n//# sourceMappingURL=index.js.map","!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0}),e.Path={Root:\"SET THIS IN INDEX.JS\"},e.Separator={Directory:\"/\",Expression:\".\",Id:\"-\",Dialogue:\"?\",Monologue:\":\",Namespace:\"/\",Extension:\".\"}}).call(this,n(1))},function(e,t){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n}]));\r\n//# sourceMappingURL=index.js.map","\r\n/*\r\n *\tCOMMON CLASSES\r\n */ \r\nimport { EventEmitter } from \"events\";\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_serviceId,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    e_Scope,\r\n    t_singleScope,\r\n    t_channel,\r\n    t_epoch,\r\n} from \"./t_controller\";\r\n\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_expressionTrail\r\n} from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n\r\n/**\r\n * Extends event emitter to include specific send and receive functions for a single scope.\r\n * Controller class introduces local and global scopes using this class\r\n * \r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport class BaseController {\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * =============================================================================\r\n */\r\n\r\n    /** Event emitter for talk and listen use cases*/\r\n    private _monologue_emitter = new EventEmitter().setMaxListeners(20); //this increase may have some speed cost\r\n    /** Event emitter for services*/\r\n    private _dialogue_emitter = new EventEmitter().setMaxListeners(20); //this increase may have some speed cost;\r\n    /** Stores runtime announcements*/\r\n    private _announcement_archive: object[] = [];\r\n    /** Stores runtime requests and responds*/\r\n    private _dialogue_archive: object[] = [];\r\n\r\n    private _controller_scope: t_singleScope; // BaseController doesn't use this, but it's useful for debuging\r\n\r\n/*\r\n *\tThese will be used in future feature expansions\r\n */\r\n    //private static _static_reserve = {};\r\n    //private _open_requests: object[] = [];\r\n    //private _open_annuncements: object[] = [];\r\n    //private _open_subscriptions: object[] = [];\r\n    //private _open_waits: object[] = [];\r\n    //private _open_wait_dependencies: object[] = [];\r\n\r\n    /**\r\n     * Extends event emitter to include specific send and receive functions for a single scope.\r\n     * Controller class introduces local and global scopes using this class\r\n     * \r\n     * @param controller_scope\r\n     * \r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    constructor(controller_scope: t_singleScope) {\r\n        this._controller_scope = controller_scope;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\t2 way data transfer between nodes\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from the given channel\r\n     * \r\n     * @remarks \r\n     * this method is a part of the Controller subsystem.\r\n     * Works in tandem with  {@link BaseController.(serve:instance)}\r\n     * \r\n     * \r\n     * @param sender_namespace namespace of the requesting class\r\n     * @param recipient_namespace namespace that is intended to receive the request\r\n     * @param talk the resolution that the responder will process\r\n     * @param group defines the set of methods that will be used for the service\r\n     * \r\n     * @returns Requested data inside the transmission wrapper object as Promise<t_transmission>\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    request(\r\n        scope: e_Scope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup,\r\n    ): Promise<any> {\r\n\r\n        const service_id: t_serviceId = BaseController.create_RandomServiceId();\r\n        const request_channel: t_channel = recipient_namespace +\r\n            Separator.Dialogue +\r\n            group;\r\n        const response_channel: t_channel = request_channel +\r\n            Separator.Id +\r\n            service_id;\r\n        const request_packet: t_transmission = {\r\n            Channel: response_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Id: service_id,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._dialogue_emitter\r\n                .once((response_channel), (response_packet: t_transmission) => {\r\n\r\n                response_packet.sniff(\"Error\",\r\n                    resolve.bind(null, response_packet),\r\n                    reject.bind(null, response_packet)\r\n                );\r\n\r\n                this.archive_Dialogue(request_packet, response_packet);\r\n            });\r\n\r\n            this._dialogue_emitter.emit(\r\n                request_channel,\r\n                request_packet as t_transmission\r\n            );\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for registering responses\r\n     *\r\n     * @param responder_namespace\r\n     * @param listen the resolution that the respond method will be listening to\r\n     * @param requester_namespace the namespace that is intended to receive the message\r\n     * @param response the callback function that will create the response for the request\r\n     * @param is_static if true, the created response will be saved for the controller for\r\n     * speedy re-response in future requests, if false, the response callback will be called\r\n     * everytime the same request is made\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    respond(\r\n        responder_namespace: t_namespace,\r\n        response_callback: (transmission: t_transmission) => Promise<any>,\r\n        group: e_ServiceGroup,\r\n        scope: e_Scope\r\n    ): void {\r\n\r\n        const listen_channel: t_channel =\r\n            responder_namespace +\r\n            Separator.Dialogue +\r\n            group;\r\n\r\n        this._dialogue_emitter.on(listen_channel,\r\n            (transmission: t_transmission) => {\r\n\r\n                response_callback(transmission)\r\n                    .then((requested_return_content: any) => { \r\n\r\n                        const serve_packet: t_transmission = {\r\n                            Sender: transmission.Recipient,\r\n                            Recipient: transmission.Sender,\r\n                            Talk: transmission.Talk,\r\n                            Content: requested_return_content,\r\n                            Time: (new Date()).getTime(),\r\n                            Static: false,\r\n                            Scope: scope,\r\n                        };\r\n\r\n                        this._dialogue_emitter\r\n                            .emit(transmission.Channel as t_channel, serve_packet)\r\n\r\n                    }) // then\r\n                    .catch((error) => {\r\n                        console.log(\"serve error:\", error)\r\n                    });\r\n\r\n            }); // dialogue emitter\r\n    }\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for DIALOGUE\r\n */\r\n\r\n    /**\r\n     * Archives the given dialogue data\r\n     * \r\n     * @param request_packet\r\n     * @param response_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Dialogue(\r\n        request_packet: t_transmission,\r\n        response_packet: t_transmission\r\n    ): void {\r\n\r\n        this._dialogue_archive.push({\r\n            Meta: {\r\n                Elapsed: (new Date()).getTime() - request_packet.Time,\r\n                State: response_packet.hasOwnProperty(\"Error\")\r\n                    ? \"Fail\"\r\n                    : \"Success\",\r\n            },\r\n            Request: request_packet,\r\n            Response: response_packet,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates a random service Id for the service channel to be unique\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    static create_RandomServiceId(): t_serviceId {\r\n        return Math.random().toString().slice(2);\r\n    }\r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    get_DialogueArchive() {\r\n        return this._dialogue_archive;\r\n    };\r\n    \r\n\r\n    /**\r\n    * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n    * */\r\n    get_ServedChannels() {\r\n        return this._dialogue_emitter.eventNames();\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tTransmission during which the emitter or listener do not acknowledge each other\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tTALK\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param sender_namespace namespace of the class that is making the announcement\r\n     * @param recipient_namespace namespace that is the main subject of the announcement\r\n     * @param talk the content us being transmitted\r\n     * @param scope Scope of the message. Scope does not have any part in emittance, \r\n     * it's required for archiving\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    announce(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(talk);\r\n\r\n        const announcement_channel: string = recipient_namespace +\r\n            Separator.Monologue +\r\n            expression_trail;\r\n\r\n        const announcement_packet: t_transmission = {\r\n            Channel: announcement_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        }\r\n\r\n        const do_announcement = () => {\r\n            this._monologue_emitter.emit(announcement_channel, announcement_packet);\r\n            this.archive_Announcement(sender_namespace, announcement_channel, announcement_packet);\r\n        }\r\n\r\n        if (delay) {\r\n\r\n            if (delay === true) {\r\n                delay = C_Controller.GraceTime;\r\n            }\r\n\r\n            setTimeout(do_announcement, delay as t_epoch);\r\n\r\n        } else {\r\n            do_announcement();\r\n        }\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns entire announcement archive since the start of the app\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    get_AnnouncementArchive(): object[] {\r\n        return this._announcement_archive;\r\n    }\r\n\r\n    /**\r\n     * Archives the given announcement data\r\n     * \r\n     * @param sender_namespace\r\n     * @param announcement_channel\r\n     * @param announcement_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Announcement(\r\n        sender_namespace: t_namespace,\r\n        announcement_channel: t_channel,\r\n        announcement_packet: any = null\r\n    ): void {\r\n\r\n        this._announcement_archive.push({\r\n            Namespace: sender_namespace,\r\n            Channel: announcement_channel,\r\n            Content: announcement_packet,\r\n            Time: (new Date()).getTime(),\r\n        })\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n */\r\n\r\n    /**\r\n     * Listens to the specified channel. The talkers are not notified of who's listening\r\n     * \r\n     * @param sender_namespace: namespace of the class that is listening\r\n     * @param subcribed_namespace the target that is being subscribed to\r\n     * @param listen  resolution that will be listened for\r\n     * @param callback: function that will be executed when there is a new signal at the \r\n     * specified channel\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    subscribe(\r\n        scope: t_singleScope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void,\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(listen);\r\n\r\n        const channel: t_channel = subcribed_namespace +\r\n            Separator.Monologue +\r\n            expression_trail;\r\n\r\n        this._monologue_emitter.on(channel, callback as (transmission: t_transmission) => any);\r\n    }\r\n\r\n    /**\r\n     * \r\n     *  Similar to subscribe, listens to a specific channel but does not respond to the source,\r\n     *  Unlike subscribe, wait quits listening after a certain number of occurences of the \r\n     *  channel, default = 1 also, wait has the built in capacity to check whether the received \r\n     *  emit meets the expected criteria through the test callback\r\n     *\r\n     * @param sender_namespace namespace of the class that is waiting\r\n     * @param recipient_namespace namespace that is being awaited \r\n     * @param listen method or announcement to listen to\r\n     * @param test_callback callback for determining whether the channel signal meets \r\n     * the wait criteria\r\n     * @param action_callback callback to execute if the test callbak returns true\r\n     * @param total_count number of times wait function will wait for the test callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    wait(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => true ,\r\n        action_callback: (transmission: t_transmission) => void = () => { },\r\n        total_count: number = 1,\r\n        current_count: number = total_count,\r\n    ): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const once_callback_function = (transmission: t_transmission) => {\r\n\r\n                if (test_callback(transmission)) {\r\n                    current_count--;\r\n                    resolve(action_callback(transmission));\r\n                } else {\r\n\r\n                    return this\r\n                        .wait(\r\n                            scope,\r\n                            sender_namespace,\r\n                            recipient_namespace,\r\n                            listen,\r\n                            test_callback,\r\n                            action_callback,\r\n                            total_count,\r\n                            current_count\r\n                        );\r\n                }\r\n            } \r\n\r\n            if (current_count > 0) {\r\n\r\n                const expression_trail: t_expressionTrail =\r\n                    Resolution.extract_ExpressionTrail_FromResolutionInstruction(listen);\r\n\r\n                const channel: t_channel = recipient_namespace +\r\n                    Separator.Monologue +\r\n                    expression_trail;\r\n\r\n                return this._monologue_emitter.once(channel, once_callback_function);\r\n            }\r\n\r\n        }) // return new promise\r\n            .catch((error_content: any) => {\r\n                console.error(\"BaseController.wait.Promise.catch:\\n\", error_content);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param sender_namespace: namespace of the class that is waiting\r\n     * @param wait_set: set of wait conditions to be met\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    wait_Some(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        wait_set: t_waitSet[]\r\n    ): Promise<t_transmission[]> {\r\n        return Promise.all(wait_set.map((wait_event: t_waitSet) => {\r\n            return this.wait(\r\n                scope,\r\n                sender_namespace,\r\n                wait_event.Namespace,\r\n                wait_event.Listen,\r\n                wait_event.Test,\r\n                wait_event.Call\r\n            );\r\n        }));\r\n    }\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\r\n/*\r\n *\tCOMMON CLASSES\r\n */\r\nimport { Controller } from \"./controller\";\r\n\r\n/*\r\n *\tMIXINS\r\n */\r\nimport { M_Namespace } from \"@utkusarioglu/namespace\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/**\r\n * Provides autocorrect for M_Controller\r\n * \r\n * @remarks\r\n * Class: M_Controller\r\n * Service: Controller\r\n * */\r\nexport interface M_Controller extends M_Namespace {}\r\n\r\n\r\n\r\n/**\r\n * Provides Controller functionality\r\n * \r\n * @requires M_Namespace\r\n * \r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport abstract class M_Controller {\r\n\r\n    private _controller!: Controller;\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * =============================================================================\r\n */\r\n\r\n    /**\r\n     * Sets or overwrites the controller for the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Controller\r\n     * Service: Controller\r\n     * */\r\n    protected set_Controller(): void {\r\n\r\n        if (this._controller) {\r\n            throw new Error(C_Controller.E_AlreadyDefined)\r\n        }\r\n\r\n        this._controller = new Controller(this.get_GlobalNamespace());\r\n\r\n        if (this.has_LocalNamespace()) {\r\n            this._controller.set_LocalNamespace(this.get_LocalNamespace());\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns the controller for the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Controller\r\n     * Service: Controller\r\n     * */\r\n    protected get_Controller(): Controller {\r\n\r\n        if (!(this._controller instanceof Controller)) {\r\n            throw new Error(C_Controller.E_CalledBeforeDeclaration);\r\n        }\r\n\r\n        return this._controller;\r\n    }\r\n\r\n}","/*\r\n *\tMIXINS\r\n */\r\nimport { M_State } from \"@utkusarioglu/state\";\nimport { M_Namespace, t_namespace } from \"@utkusarioglu/namespace\";\r\nimport { M_Controller } from \"./m_controller\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/*\r\n *\tDATA TYPES\r\n */\r\nimport {\r\n    t_subscription,\r\n    t_reception,\r\n    t_dependency_group,\r\n    t_service,\r\n    t_announcement,\r\n    e_Scope,\r\n    e_ServiceGroup,\r\n    t_transmission,\r\n    t_singleScope,\r\n    t_sequenceStep,\r\n} from \"./t_controller\";\r\nimport {\r\n    t_resolutionInstructionNoArgs,\r\n    t_resolutionInstruction\r\n} from \"@utkusarioglu/resolver\";\r\n\r\n/**\r\n * Provides autocorrect for the class\r\n * \r\n * @requires M_Controller\r\n *\r\n * @remarks\r\n * Class: M_ControllerEvents\r\n * Service: Controller\r\n * */\r\nexport interface M_ControllerEvents extends\r\n    M_State,\r\n    M_Namespace,\r\n    M_Controller\r\n{ }\r\n\r\n\r\n\r\n/**\r\n * Introduces methods for registering subscriptions, dependencies, announcements, and \r\n * services for the extending class Handles the order of operations for the controller \r\n * to run smoothly\r\n * The associated controller needs to be run by the child class \r\n * Global (and if needed, Local) namespaces need to be set before the initializer is run\r\n * Needs @link State function to be defined in the parent to determine the local namespace\r\n * \r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport abstract class M_ControllerEvents {\r\n\r\n/*\r\n *\tLOGS\r\n */\r\n    private _subscriptions!: Array<t_subscription>;\r\n    private _announcements!: Array<t_announcement>;\r\n    private _receptions!: Array<t_reception>; // this isn't emitted, it's only for archiving\r\n    private _dependencies!: Array<t_dependency_group>;\r\n    private _services!: Array<t_service>;\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\t\r\n *\tDeclaration of controls by the instantiating class\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tINCLUDE CONTROLS\r\n */\r\n\r\n    /**\r\n     * Includes the given array items among the subscriptions for the set local \r\n     * or global namespace\r\n     * \r\n     * @param subscription_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    include_Subscriptions(subscription_list: Array<t_subscription>): this {\r\n\r\n        if (!this._subscriptions) {\r\n            this._subscriptions = [];\r\n        }\r\n\r\n        this._subscriptions.push(...subscription_list);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among the dependencies for the set local \r\n     * or global namespace\r\n     * \r\n     * @param dependencies_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    include_Dependencies(dependencies_list: t_dependency_group[]): this {\r\n\r\n        if (!this._dependencies) {\r\n            this._dependencies = [];\r\n        }\r\n\r\n        this._dependencies.push(...dependencies_list);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among announcement and subscriptions.\r\n     * Unlike other methos, this registers 2 different events\r\n     * \r\n     * @param reception_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    include_Receptions(reception_list: t_reception[]): this {\r\n\r\n        if (!this._receptions) {\r\n            this._receptions = [];\r\n        }\r\n\r\n        if (!this._subscriptions) {\r\n            this._subscriptions = [];\r\n        }\r\n\r\n        if (!this._announcements) {\r\n            this._announcements = [];\r\n        }\r\n\r\n        this._receptions.push(...reception_list);\r\n\r\n        reception_list.forEach((reception: t_reception) => {\r\n\r\n            this._subscriptions.push({\r\n                Scope: reception.Scope,\r\n                Namespace: reception.Namespace || this.get_GlobalNamespace(),\r\n                Listen: reception.Listen,\r\n                Call: reception.Call,\r\n            } as t_subscription);\r\n\r\n            this._announcements.push({\r\n                Scope: reception.Scope,\r\n                Namespace: reception.Namespace,\r\n                Talk: reception.Talk,\r\n            } as t_announcement);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among the services for the set local or global namespace\r\n     * \r\n     * @param services_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    include_Services(services_list: t_service[]): this {\r\n\r\n        if (!this._services) {\r\n            this._services = [];\r\n        }\r\n\r\n        this._services.push(...services_list);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tIMPLEMENTATION\r\n *\t\r\n *\tRegistration of controls\r\n *\tAnnouncement of startup states\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tINITIALIZE CONTROLS\r\n */\r\n\r\n    /**\r\n     * Runs listen and talk operations in the order and times that they are supposed to be run\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     * */\r\n    initialize_Controller(): this {\r\n\r\n        this.set_Controller();\r\n\r\n        setTimeout(\r\n            this.announce_ToAllServices.bind(this, C_BootState.ClassReady),\r\n            C_Controller.GraceTime\r\n        );\r\n\r\n        // Listens\r\n        this.get_Controller()\r\n            .wait(\r\n                e_Scope.Global,\r\n                C_Controller.AllServices,\r\n                C_StartupTalk.run_Listen,\r\n                undefined,\r\n                () => {\r\n\r\n                    this.register_Dependencies();\r\n                    this.register_Subscriptions();\r\n\r\n                    this.announce_ToAllServices(C_BootState.ListenReady);\r\n                }\r\n            );\r\n\r\n        // Talks\r\n        this.get_Controller()\r\n            .wait(\r\n                e_Scope.Global,\r\n                C_Controller.AllServices,\r\n                C_StartupTalk.run_Talk,\r\n                undefined,\r\n                () => {\r\n\r\n                    this.register_Announcements();\r\n                    this.register_Services();\r\n\r\n                    this.announce_ToAllServices(C_BootState.TalkReady);\r\n                }\r\n            );\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tREGISTER CONTROLS\r\n *\t\r\n *  These are used by the method {@link initialize_Controller} to register included controls\r\n */\r\n\r\n    /**\r\n     * Excetutes controller for the subscriptions that were registered by the include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     * */\r\n    private register_Subscriptions(): void {\r\n        if (this._subscriptions) {\r\n            this._subscriptions.forEach((subscription: t_subscription) => {\r\n                this.get_Controller().subscribe(\r\n                    subscription.Scope,\r\n                    subscription.Namespace,\r\n                    subscription.Listen,\r\n                    subscription.Call\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the dependencies that were registered by the include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     * */\r\n    private register_Dependencies(): void {\r\n        if (this._dependencies && this._dependencies.length > 0) {\r\n            this._dependencies\r\n                .forEach((dependency: t_dependency_group) => {\r\n                    this.get_Controller().wait_Some(dependency.Scope, dependency.Members)\r\n                        .then(data => {\r\n                            return dependency.Call(data);\r\n                        })\r\n                        .then(this.announce_ToAllServices.bind(this, C_BootState.DependencyReady));\r\n            });\r\n        } else {\r\n            this.announce_ToAllServices(C_BootState.DependencyReady);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the announcements that were registered by the include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     * */\r\n    private register_Announcements(): void {\r\n        if (this._announcements) {\r\n            this._announcements.forEach((announcement: t_announcement) => {\r\n                this.get_Controller().announce(\r\n                    announcement.Scope,\r\n                    announcement.Namespace,\r\n                    announcement.Talk\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the services that were registered by the include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     * */\r\n    private register_Services(): void {\r\n        if (this._services) {\r\n            this._services.forEach((service: t_service) => {\r\n                this.get_Controller().respond(\r\n                    service.Scope,\r\n                    service.Call,\r\n                    service.Static || false,\r\n                    e_ServiceGroup.Standard\r\n                );\r\n            }); \r\n        }\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tMANAGE CONTROLLER SEQUENCES\r\n */\r\n\r\n    /**\r\n     * Executes the provided Controller talks and listens in sequence\r\n     * \r\n     * @param sequence_steps\r\n     * @param scope\r\n     * @param manager_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected manage_ControllerSequence(\r\n        sequence_steps: Array<t_sequenceStep>,\r\n        scope: t_singleScope,\r\n        manager_namespace: t_namespace\r\n    ): Promise<void> {\r\n\r\n        let step_promise_stack: Array<Promise<t_resolutionInstructionNoArgs>> = [];\r\n        let steps_promise_sequence: Promise<void> = Promise.resolve();\r\n\r\n        sequence_steps.forEach((step, index) => {\r\n\r\n            step_promise_stack[index] = new Promise((resolve_step_promise) => {\r\n\r\n                return this.get_Controller().wait(\r\n                    scope,\r\n                    manager_namespace,\r\n                    step.Listen,\r\n                    (transmission: t_transmission) => {\r\n\r\n                        step.List = step.List.filter((value: string) => {\r\n                            return value !== transmission.Sender;\r\n                        });\r\n\r\n                        return step.List.length < 1;\r\n                    },\r\n                    () => {\r\n                        return resolve_step_promise(step.Listen);\r\n                    }\r\n                ) // return this.get_Controller().wait\r\n\r\n            }); // step_promise_stack[index]\r\n\r\n            steps_promise_sequence = steps_promise_sequence\r\n                .then(() => {\r\n\r\n                    step.sniff([\"StartMessage\"], undefined,\r\n                        (start_message: string) => {\r\n                            console.log(start_message)\r\n                        })\r\n\r\n                    step.sniff([\"Talk\"], undefined,\r\n                        (step_talk: t_resolutionInstructionNoArgs) => {\r\n                            this.get_Controller().announce(\r\n                                scope,\r\n                                manager_namespace,\r\n                                step_talk\r\n                            );\r\n                        });\r\n\r\n                    return step_promise_stack.sniff([(index).toString()],\r\n                        () => {\r\n                            throw new Error(`Active step requires ${index} members`)\r\n                        },\r\n                        () => {\r\n                            const active_step_promise_stack =\r\n                                step_promise_stack.slice(0, index + 1);\r\n                            return Promise.all(active_step_promise_stack)\r\n                        })\r\n\r\n                }); // steps_promise_sequence.then\r\n\r\n        }); // sequence_steps.forEach\r\n\r\n        return steps_promise_sequence;\r\n\r\n    }\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tANNOUNCE STATES \r\n */\r\n\r\n    /**\r\n     * Standardized method for announcing to all services\r\n     * \r\n     * @param resolution_instruction\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected announce_ToAllServices(resolution_instruction: t_resolutionInstruction): void {\r\n        this.get_Controller().announce(\r\n            e_Scope.Global,\r\n            C_Controller.AllServices,\r\n            resolution_instruction,\r\n            true\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Standardized method for library adding\r\n     * \r\n     * @param library_source_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected announce_LibraryAdded(library_source_namespace: t_namespace): void {\r\n        this.get_Controller().announce(\r\n            e_Scope.Global,\r\n            C_Controller.AllServices,\r\n            [...C_BootState.LibraryAdded, [library_source_namespace]] as t_resolutionInstruction,\r\n            true\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":""}