{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@utkusarioglu/resolver/index.js","webpack:///./src/c_controller.ts","webpack:///./src/separator_handler.ts","webpack:///./src/controller.ts","webpack:///./src/base_controller.ts","webpack:///./node_modules/events/events.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/t_controller.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","default","a","u","Parent","with","M_Namespace","M_State","super","this","set_GlobalNamespace","initialize_State","set_ResolutionInstruction","is_ResolutionInstruction","JSON","stringify","Error","get_State","set_Var","extract_ExpressionTrail_FromResolutionInstruction","set_ExpressionTrail","extract_ArgumentPool_fromResolutionInstruction","set_ArgumentPool","get_Var","length","produce_set_ExpressionStack_FromExpressionTrail","produce_ExpressionTrail_FromExpressionStack","join","C_Resolver","EXPRESSION_SEPARATOR","produce_ExpressionStack_FromExpressionTrail","set_ExpressionStack","split","slice","get_ExpressionStack","get_ArgumentPool","Last","First","map","During","splice","extract_ExpressionType","e_expressionType","Key","extract_MethodName","INSTANTIATION_INDICATOR","Instantiate","METHOD_INDICATOR","Method","replace","Resolution","extender_class","reduce","produce_ClassExpression","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","_global_namespace","C_Namespace","E_CalledBeforeDeclaration","get_GlobalNamespace","produce_Stack","E_AlreadyDefined","check_NamespaceInput","_local_namespace","get_LocalNamespace","E_NoEmpty","NamespaceSeparator","_channel","_id","Math","random","toString","_states","pave","throw_OverloadError","sniff","console","log","C_State","E_VarNotDefined","subs","parse","entries","keys","set_Separators","Separator","Directory","Expression","Id","Dialogue","Monologue","Namespace","Extension","SEPARATOR","is_empty","_tracking_enabled","get_Channel","Time","Date","getTime","Channel","get_Id","Variable","Value","copy_Var","_track_stack","push","E_TrackingOff","filter","indexOf","e_filterMode","And","find","Or","assign_Property","E_PropertyRequired","assign_Class","E_ChOverload","Array","isArray","get_Vars","State","_state","set_Vars","remove_State","Function","window","pop","is_Object","has_Function","String","toProperCase","charAt","toUpperCase","substr","toLowerCase","minify","chop","RegExp","match","RulesVarName","E_NonPotentAttempt","E_NonStringType","E_DoesNotCarry","E_DepthInconsistent","E_TooDeep","E_TooShallow","E_MinTrailDepthLimit","DISABLED_PHRASE","Null","Other","Undefined","VariableType","ResolutionInstruction","e_typeDefinition","Resolver","MinTrailDepth","MaxTrailDepth","Recursion","set_Resolution","set_Passage","is_DisabledPassage","get_MaxResolutionDepth","get_MinResolutionDepth","produce_ResolutionDepth","get_EntryPoint","build_Items","check_ItemType","build_Resolution","build_Array","build_Object","concatenate_Items","constructor","check_ResolutionDepth","get_Sources","retrieve_ResolutionRules","produce_ExecutionStepStack","check_ExpressionAvailability","build_Arguments","warn","DoesNotCarry","every","retrieve_ItemTypeArray","concatenate_Objects","RI","C_Controller","AllServices","GraceTime","E_NoScopeSelected","E_MultipleRequestsBeforeResponse","E_ForcedDynamic","C_BootState","ClassReady","ListenReady","TalkReady","ModulesReady","DependencyReady","ServerReady","TestReady","ModuleInstalled","LibraryAdded","C_StartupTalk","run_Listen","run_Talk","run_Requests","run_Modules","run_Server","run_Tests","send_Archive","add_Archive","SeparatorHandler","set_Separators_FromGlobal","global","separators","_SEPARATOR","separator_name","Controller","namespace","scope","responding_namespace","talk","group","e_ServiceGroup","Standard","responding_channel","get_Separator","instruction_code","produce_UniqueInstructionCode","is_StaticResponder","_forced_dynamic_service","_static_content_archive","dynamic_transmission","request_DynamicTransmission","set_PromisifiedStaticContent","static_transmisson","Promise","resolve","recipient_namespace","get_Scopes","request","_controller_global_namespace","response_func","is_static","_static_responders","active_scope","respond","get_DialogueArchive","get_ServedChannels","channel","static_content","then","transmission","LastDynamicTime","Static","delay","announce","get_AnnouncementArchive","subcribed_namespace","listen","callback","subscribe","test_callback","action_callback","count","current_count","wait","wait_set","wait_Some","local_namespace","_controller_local_namespace","create_LocalNamespace","_local_controllers","global_namespace","_global_namespaces","BaseController","e_Scope","Local","list","_global_controller","Global","controller_scope","_monologue_emitter","EventEmitter","setMaxListeners","_dialogue_emitter","_announcement_archive","_dialogue_archive","_controller_scope","sender_namespace","service_id","create_RandomServiceId","request_channel","response_channel","request_packet","Sender","Recipient","Talk","Scope","reject","once","response_packet","archive_Dialogue","emit","responder_namespace","response_callback","listen_channel","on","requested_return_content","serve_packet","Content","catch","error","Meta","Elapsed","Request","Response","eventNames","expression_trail","announcement_channel","announcement_packet","do_announcement","archive_Announcement","setTimeout","total_count","once_callback_function","error_content","all","wait_event","Listen","Test","Call","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","ownKeys","getOwnPropertySymbols","concat","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","emitter","onceWrapper","arguments","fired","removeListener","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","getMaxListeners","doError","er","err","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","index","spliceOne","off","removeAllListeners","rawListeners","g"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=6)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(1),i=r(2),o=r(3),s=r(4),a=r(5),u=\"RI\";class c extends(n.Parent().with(i.M_Namespace,o.M_State)){constructor(e){return super(),this.set_GlobalNamespace(\"App/Common/Resolver/Resolution\"),this.initialize_State(),this.set_ResolutionInstruction(e),this}set_ResolutionInstruction(e){if(!c.is_ResolutionInstruction(e)){const t=JSON.stringify(e);throw new Error(`Illegal resolution Instruction:\\n${t}`)}this.get_State().set_Var(\"ResolutionInstruction\",e);const t=c.extract_ExpressionTrail_FromResolutionInstruction(e);this.set_ExpressionTrail(t);const r=c.extract_ArgumentPool_fromResolutionInstruction(e);return this.set_ArgumentPool(r),this}get_ResolutionInstruction(){return this.get_State().get_Var(\"ResolutionInstruction\")}static is_ResolutionInstruction(e){return e[0]===u&&e.length>1}static produce_UniqueInstructionCode(e){return JSON.stringify(e)}set_ExpressionTrail(e){if(\"\"===e)throw new Error(\"ExpressionTrail cannot be empty\");return this.get_State().set_Var(\"ExpressionTrail\",e),this.produce_set_ExpressionStack_FromExpressionTrail(e),this}get_ExpressionTrail(){return this.get_State().get_Var(\"ExpressionTrail\")}produce_set_ExpressionTrail_FromExpressionStack(e){const t=c.produce_ExpressionTrail_FromExpressionStack(e);this.set_ExpressionTrail(t)}static produce_ExpressionTrail_FromExpressionStack(e){return e.join(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ExpressionTrail_FromResolutionInstruction(e){return e[1]}set_ExpressionStack(e){return this.get_State().set_Var(\"ExpressionStack\",e),this}get_ExpressionStack(){return this.get_State().get_Var(\"ExpressionStack\")}produce_set_ExpressionStack_FromExpressionTrail(e){const t=c.produce_ExpressionStack_FromExpressionTrail(e);this.set_ExpressionStack(t)}static produce_ExpressionStack_FromExpressionTrail(e){return e.split(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ArgumentPool_fromResolutionInstruction(e){return e.length>2?e.slice(2-e.length):[]}set_ArgumentPool(e){this.get_State().set_Var(\"ArgumentPool\",e)}get_ArgumentPool(){return this.get_State().get_Var(\"ArgumentPool\")}produce_ExecutionStepStack(e){let t=0,r=this.get_ExpressionStack(),n=this.get_ArgumentPool();e.hasOwnProperty(\"Last\")&&(r=[...r,...e.Last]),e.hasOwnProperty(\"First\")&&(t+=e.First.length,r=[...e.First,...r]),e.hasOwnProperty(\"During\")&&r.map((i,o)=>{const s=o+t;if(e.During[s]){const t=e.During[s],i=r.splice(o,1,t);n.splice(o,0,i)}});let i=0;return r.map(e=>{const t=c.extract_ExpressionType(e);if(t!==a.e_expressionType.Key){const r=n[i++]||[];return[t,c.extract_MethodName(e),r]}return[t,e]})}static extract_ExpressionType(e){return e.slice(0,4)===this.INSTANTIATION_INDICATOR?a.e_expressionType.Instantiate:e.slice(-2)===this.METHOD_INDICATOR?a.e_expressionType.Method:a.e_expressionType.Key}static extract_MethodName(e){return e.replace(this.INSTANTIATION_INDICATOR,\"\").replace(this.METHOD_INDICATOR,\"\")}produce_ResolutionDepth(){return this.get_ExpressionStack().length}}t.Resolution=c,c.METHOD_INDICATOR=\"()\",c.INSTANTIATION_INDICATOR=\"new \"},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);t.Parent=n.Parent},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parent=e=>new n(e);class n{constructor(e){this.extender_class=e||class{}}with(...e){return e.reduce((e,t)=>n.produce_ClassExpression(t)(e),this.extender_class)}static produce_ClassExpression(e){return t=>{const r=class extends t{};return Object.getOwnPropertyNames(e.prototype).forEach(t=>{r.prototype.hasOwnProperty(t)||Object.defineProperty(r.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t))}),r}}}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);t.M_Namespace=n.M_Namespace},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(2);t.M_Namespace=class{get_GlobalNamespace(){if(!this._global_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._global_namespace}get_GlobalNamespaceStack(){const e=this.get_GlobalNamespace();return this.produce_Stack(e)}set_GlobalNamespace(e){if(void 0!==this._global_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);return this.check_NamespaceInput(e),this._global_namespace=e,this}get_LocalNamespace(){if(!this._local_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._local_namespace}get_LocalNamespaceStack(){const e=this.get_LocalNamespace();return this.produce_Stack(e)}set_LocalNamespace(e){if(this._local_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);this.check_NamespaceInput(e),this._local_namespace=e}has_LocalNamespace(){return void 0!==this._local_namespace&&null!==this._local_namespace}check_NamespaceInput(e){if(void 0===e||0===e.length)throw new Error(n.C_Namespace.E_NoEmpty)}produce_Stack(e){return e.split(n.C_Namespace.NamespaceSeparator)}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Namespace={E_AlreadyDefined:\"%1 Namespace already defined\",E_CalledBeforeDeclaration:\"%1 Namespace called before declaration\",E_NoEmpty:\"%1 Namespace declaration cannot be empty\",NamespaceSeparator:\"/\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=2)}([function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0}),r(5),r(6);const n=r(1),i=r(7);class o{constructor(e=\"Generic\",t=null){this._channel=e,this._id=t||Math.random().toString().slice(2),o._states.pave([this._channel,this._id],()=>{this.throw_OverloadError()},()=>({}))}get_Var(e){return o._states.sniff([this._channel,this._id],()=>{console.log(n.C_State.E_VarNotDefined.subs(this._channel,this._id))},t=>t.sniff(e,()=>{},e=>e))}set_Var(e,t){return o._states[this._channel][this._id].pave(e,()=>t,()=>t),this}copy_Var(e){const t=this.get_Var(e);return t?JSON.parse(JSON.stringify(t)):void 0}has_Var(e){return o._states[this._channel][this._id].sniff(e,()=>!1,()=>!0)}set_Vars(e){return Object.entries(e).forEach(([e,t])=>{this.set_Var(e,t)}),this}get_Vars(){return o._states[this._channel][this._id]}static get_AllStates(e=!0){if(e){let e={};return Object.entries(this._states).forEach(([t,r])=>{const n=Object.keys(r);n.length<2?e[t]=r[n[0]]:e[t]=r}),e}return o._states}get_Id(){return this._id}get_Channel(){return this._channel}set_Separators_FromGlobal(){e.hasOwnProperty(\"Separator\")?this.set_Separators(e.Separator):this.set_Separators({Directory:\"/\",Expression:\".\",Id:\"-\",Dialogue:\"?\",Monologue:\":\",Namespace:\"/\",Extension:\".\"})}set_Separators(e){o.SEPARATOR=e}remove_State(){delete o._states[this._channel][this._id],o._states[this._channel].is_empty()&&delete o._states[this._channel]}static remove_AllStates(){o._states={}}track_Variable(e,t,r=(()=>!0)){if(!o._tracking_enabled)return;const n=this.get_Channel(),i={Time:(new Date).getTime(),Channel:n,Namespace:n.split(\":\")[0].split(\"?\")[0],Id:this.get_Id(),Variable:e,Value:void 0===t?this.copy_Var(e):t};r(i)&&o._track_stack.push(i)}static track_Variable(e,t,r){if(!o._tracking_enabled)return;const n={Time:(new Date).getTime(),Channel:e,Namespace:e.split(\":\")[0].split(\"?\")[0],Id:\"-\",Variable:t,Value:r};o._track_stack.push(n)}static get_AllTrackRecords(){return o._tracking_enabled?o._track_stack:n.C_State.E_TrackingOff}static get_AllTrackedChannels(){return o._tracking_enabled?o._track_stack.map(e=>e.Channel).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_AllTrackedNamespaces(){return o._tracking_enabled?o._track_stack.map(e=>e.Namespace).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_SomeTrackRecords(e,t=!0,r=i.e_filterMode.And){if(!o._tracking_enabled)return n.C_State.E_TrackingOff;let s=o._track_stack.filter(t=>{const n=e.sniff(\"Time\",()=>!0,([e,r])=>(void 0===e||t.Time>=e)&&(void 0===r||t.Time<=r)),o=e.sniff(\"Channels\",()=>!0,e=>void 0!==e.find(e=>t.Channel===e)||0===e.length),s=e.sniff(\"Namespaces\",()=>!0,e=>void 0!==e.find(e=>t.Namespace===e)||0===e.length);return[n,o,e.sniff(\"Variables\",()=>!0,e=>void 0!==e.find(e=>t.Variable===e)||0===e.length),e.sniff(\"Call\",()=>!0,e=>e(t)),s].reduce((e,t)=>{switch(e=void 0===e||e,r){case i.e_filterMode.And:return e&&t;case i.e_filterMode.Or:return e||t}})});return t&&(s=s.map(e=>(delete e.Channel,delete e.Time,delete e.Id,e))),s}set_OptionalProperties(e,t){return e.forEach(e=>{this.assign_Property(e,t)}),this}set_RequiredProperties(e,t){return e.forEach(e=>{if(!this.assign_Property(e,t))throw new Error(n.C_State.E_PropertyRequired.subs(e))}),this}assign_Property(e,t){let r=e.split(o.SEPARATOR.Expression).slice(-1)[0];return t.sniff(r,()=>!1,()=>(this.set_Var(e,t[r]),!0))}set_OptionalClasses(e,t){return Object.keys(e).forEach(r=>{this.assign_Class(e,r,t)}),this}set_RequiredClasses(e,t){return Object.keys(e).forEach(r=>{if(!this.assign_Class(e,r,t))throw new Error(n.C_State.E_PropertyRequired.subs(r))}),this}throw_OverloadError(e=[\"empty\"]){throw new Error(n.C_State.E_ChOverload.subs(this._channel,this._id,JSON.stringify(e)))}assign_Class(e,t,r){let n=t.split(o.SEPARATOR.Expression),i=n.slice(-1)[0];if(r.hasOwnProperty(i)){const o=Array.isArray(r[i])?r[i]:[r[i]];return this.get_Vars().pave(n,()=>{this.throw_OverloadError(n)},()=>o.map(r=>new e[t](r))),!0}return!1}}t.State=o,o._states={},o._track_stack=[],o._tracking_enabled=!0}).call(this,r(4))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_State={E_VarNotDefined:\"Instance %0/%1 is not defined\",E_TrackingOff:\"Tracking Disabled\",E_PropertyRequired:\"Property '%0' is required\",E_ChOverload:\"Channel overload occured at: %0.%1\\n%2\",E_AlreadyDefined:\"State already defined\",E_CalledBeforeDeclaration:\"State called before declaration\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3);t.M_State=n.M_State;var i=r(0);t.State=i.State},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(0),i=r(1);t.M_State=class{initialize_State(e){if(void 0!==this._state)throw new Error(i.C_State.E_AlreadyDefined);const t=this.get_GlobalNamespace();return this._state=new n.State(t),void 0!==e&&this._state.set_Vars(e),this}get_State(){if(!(this._state instanceof n.State))throw new Error(i.C_State.E_CalledBeforeDeclaration);return this._state}remove_State(){this._state.remove_State()}}},function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var i=this,o=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);o<s.length;o++){var a=s[o];if(void 0===i[a])return t(i);i=i[a]}return r(i)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var i=Array.isArray(e)?e:e.split(n.Separator.Expression),o=i.pop(),s=this,a=function(e){if(void 0===e[o])return e[o]=r()||{},!0;var n=t();return n&&(e[o]=n),!1};if(!(i.length>0))return a(s);s.sniff(i,(function(){for(var e=0,t=i;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),String.prototype.toProperCase=function(){return this.replace(/\\w\\S*/g,e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase())},String.prototype.minify=function(){return this.replace(/\\s/g,\"\")},String.prototype.chop=function(e=50){const t=new RegExp(`.{1,${e}}`,\"g\");return this.match(t)||[]},String.prototype.subs=function(...e){return e.reduce((e,t,r)=>e.replace(`%${r}`,t),this)}}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.And=0]=\"And\",e[e.Or=1]=\"Or\"}(t.e_filterMode||(t.e_filterMode={}))}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Resolver={RulesVarName:\"RESOLUTION_RULES\",E_NonPotentAttempt:\"Attempt to enable string that isn't a disabled passage\",E_NonStringType:\"Non-string type given to enable_Passage\",E_DoesNotCarry:\"Base does not carry expression '%1'\\n\",E_DepthInconsistent:\"MinDepth cannot be larger than MaxDepth\",E_TooDeep:\"Resolution is deeper than the max allowed depth\",E_TooShallow:\"Resolution is shallower than the min allowed depth\",E_MinTrailDepthLimit:\"min trail depth cannot be smaller than 1\",DISABLED_PHRASE:\"<<DISABLED>>\",EXPRESSION_SEPARATOR:\".\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.Instantiate=0]=\"Instantiate\",e[e.Method=1]=\"Method\",e[e.Key=2]=\"Key\"}(t.e_expressionType||(t.e_expressionType={})),function(e){e[e.Null=0]=\"Null\",e[e.Object=1]=\"Object\",e[e.Array=2]=\"Array\",e[e.Other=3]=\"Other\",e[e.Undefined=4]=\"Undefined\",e[e.VariableType=5]=\"VariableType\",e[e.Resolution=6]=\"Resolution\",e[e.ResolutionInstruction=7]=\"ResolutionInstruction\"}(t.e_typeDefinition||(t.e_typeDefinition={}))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.Resolution=n.Resolution;var i=r(7);t.Resolver=i.Resolver},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),r(8);const n=r(3),i=r(2),o=r(1),s=r(0),a=r(4),u=r(5),c=\"RI\";class l extends(o.Parent().with(n.M_State,i.M_Namespace)){constructor(e){super(),this.set_GlobalNamespace(e).initialize_State({MinTrailDepth:1,MaxTrailDepth:100,Recursion:!1})}get_EntryPoint(){return this.get_State().get_Var(\"EntryPoint\")}set_ExpressionTrail(e){const t=[c,e];return this.set_Resolution(new s.Resolution(t)),this}set_ExpressionStack(e){const t=[c,s.Resolution.produce_ExpressionTrail_FromExpressionStack(e)];return this.set_Resolution(new s.Resolution(t)),this}set_ResolutionInstruction(e){return this.set_Resolution(new s.Resolution(e)),this}set_Resolution(e){return this.set_Passage(e),this}remove_Resolution(){}set_Passage(e){return this.get_State().set_Var(\"EntryPoint\",e),this}static disable_Passage(e){return a.C_Resolver.DISABLED_PHRASE+JSON.stringify(e)}static enable_Passage(e){const t=a.C_Resolver.DISABLED_PHRASE;if(this.is_DisabledPassage(e))return JSON.parse(e.slice(t.length));throw new Error(a.C_Resolver.E_NonStringType+\"\\n\"+JSON.stringify(e))}static is_DisabledPassage(e){const t=a.C_Resolver.DISABLED_PHRASE;return\"string\"==typeof e&&e.slice(0,t.length)===t}set_Sources(e){return this.get_State().set_Var(\"Sources\",e),this}get_Sources(){return this.get_State().get_Var(\"Sources\")}set_MaxResolutionDepth(e){return this.get_State().set_Var(\"MaxTrailDepth\",e),this}get_MaxResolutionDepth(){return this.get_State().get_Var(\"MaxTrailDepth\")}set_MinResolutionDepth(e){if(e<1)throw new Error(a.C_Resolver.E_MinTrailDepthLimit);return this.get_State().set_Var(\"MinTrailDepth\",e),this}get_MinResolutionDepth(){return this.get_State().get_Var(\"MinTrailDepth\")}check_ResolutionDepth(e){const t=this.get_MaxResolutionDepth(),r=this.get_MinResolutionDepth();let n=[];if(r>t&&n.push(a.C_Resolver.E_DepthInconsistent),e.produce_ResolutionDepth()>=t&&n.push(a.C_Resolver.E_TooDeep),e.produce_ResolutionDepth()<r&&n.push(a.C_Resolver.E_TooShallow),0!==n.length)throw new Error(n.join(\"\\n\")+JSON.stringify(e))}set_Recursion(e){return this.get_State().set_Var(\"Recursion\",e),this}get_Recursion(){return this.get_State().get_Var(\"Recursion\")}produce_Resolute(){const e=this.get_EntryPoint(),t=this.build_Items(e);return this.remove_State(),t}build_Items(e){switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:e=new s.Resolution(e);case u.e_typeDefinition.Resolution:return this.build_Resolution(e);case u.e_typeDefinition.Array:return this.build_Array(e);case u.e_typeDefinition.Object:return this.build_Object(e);default:return e}}build_Array(e){if(e.length>0){const t=e.map(e=>this.build_Items(e));return l.concatenate_Items(t)}}build_Object(e){let t={};return\"function\"==typeof e||\"Promise\"===e.constructor.name?t=e:Object.entries(e).forEach(([e,r])=>{switch(l.check_ItemType(r)){case u.e_typeDefinition.ResolutionInstruction:const n=new s.Resolution(r);t[e]=this.build_Resolution(n);break;case u.e_typeDefinition.Array:t[e]=this.build_Array(r);break;case u.e_typeDefinition.Object:t[e]=this.build_Object(r);break;default:t[e]=r}}),t}build_Resolution(e){this.check_ResolutionDepth(e);let t=this.get_Sources();const r=this.retrieve_ResolutionRules(e),n=e.produce_ExecutionStepStack(r);return n.forEach(e=>{const r=e[1],i=e[0];if(this.check_ExpressionAvailability(t,r,n),i===u.e_expressionType.Key)t=t[r];else{const n=this.build_Arguments(e[2]);t=i===u.e_expressionType.Instantiate?new t[r](...n):t[r](...n)}}),this.build_Items(t)}check_ExpressionAvailability(e,t,r){void 0===e[t]&&console.warn(a.C_Resolver.DoesNotCarry.replace(\"%1\",t),r)}build_Arguments(e){return void 0!==e?e.map(e=>{switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:const t=new s.Resolution(e);return this.build_Resolution(t);case u.e_typeDefinition.Object:return this.build_Object(e);case u.e_typeDefinition.Array:return this.build_Array(e);default:return e}}):[]}static check_ItemType(e){return null===e?u.e_typeDefinition.Null:void 0===e?u.e_typeDefinition.Undefined:e instanceof s.Resolution?u.e_typeDefinition.Resolution:s.Resolution.is_ResolutionInstruction(e)?u.e_typeDefinition.ResolutionInstruction:Array.isArray(e)?u.e_typeDefinition.Array:e.is_Object()?u.e_typeDefinition.Object:u.e_typeDefinition.Other}static retrieve_ItemTypeArray(e){const t=l.check_ItemType(e[0]);return e.every(e=>t===l.check_ItemType(e))?t:u.e_typeDefinition.VariableType}static concatenate_Items(e){let t={};switch(l.retrieve_ItemTypeArray(e)){case u.e_typeDefinition.Object:t=l.concatenate_Objects(e);break;case u.e_typeDefinition.Array:break;default:t=e}return t}static concatenate_Objects(e){let t={};return e.reduce((e,r)=>(Object.keys(r).forEach(n=>{let i=r[n],o=e.sniff(n);switch(l.check_ItemType(i)){case u.e_typeDefinition.Array:t[n]=[...o?e[n]:[],...i];break;case u.e_typeDefinition.Object:t[n]=o?l.concatenate_Items([e[n],i]):i;break;default:t[n]=o?e[n]+i:i}}),t))}retrieve_ResolutionRules(e){const t=this.get_Sources(),r=e.get_ExpressionStack()[0],n=a.C_Resolver.RulesVarName;return t.sniff([s.Resolution.extract_MethodName(r),n],()=>({}),e=>e)}}t.Resolver=l},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var i=this,o=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);o<s.length;o++){var a=s[o];if(void 0===i[a])return t(i);i=i[a]}return r(i)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var i=Array.isArray(e)?e:e.split(n.Separator.Expression),o=i.pop(),s=this,a=function(e){if(void 0===e[o])return e[o]=r()||{},!0;var n=t();return n&&(e[o]=n),!1};if(!(i.length>0))return a(s);s.sniff(i,(function(){for(var e=0,t=i;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))}]));\r\n//# sourceMappingURL=index.js.map","import { i_map, t_epoch } from \"./t_controller\";\r\nimport { t_resolutionInstruction, t_resolutionInstructionNoArgs } from \"@utkusarioglu/resolver\";\r\n\r\nconst RI: \"RI\" = \"RI\";\r\n\r\nexport const C_Controller: i_map<string> = {\r\n\r\n    /** Namespace to use when a controller wants to talk to all services */\r\n    AllServices: \"App\",\r\n\r\n    /** The duration that is allowed to pass between sequence events. can\r\n     * be removed later on*/\r\n    // @ts-ignore\r\n    GraceTime: 20,\r\n\r\n    E_AlreadyDefined: \"Controller already defined\",\r\n    E_CalledBeforeDeclaration: \"Controller called before declaration\",\r\n    E_NoScopeSelected: [\"There is a problem with the scopes. \",\r\n        \"It may be due to undefiend LocalNamespace \",\r\n        \"if the code is expected to work in local scope\"].join(''),\r\n    E_MultipleRequestsBeforeResponse: \"Multiple requests for the content was placed before the promise was resolved\",\r\n    E_ForcedDynamic: \"All services are forced to be dynamic\",\r\n}\r\n\r\nexport const C_BootState: i_map<t_resolutionInstructionNoArgs> = {\r\n\r\n    /** Class ready t_methodTrail for controller methods to emit/receive */\r\n    ClassReady: [RI, \"class_ready\"],\r\n\r\n    /** Listen ready t_methodTrail for controller methods to emit/receive */\r\n    ListenReady: [RI, \"listen_ready\"],\r\n\r\n    /** Talk ready t_methodTrail for controller methods to emit/receive */\r\n    TalkReady: [RI, \"talk_ready\"],\r\n\r\n    /** Fires when all modules load its content to the respective classes*/\r\n    ModulesReady: [RI, \"modules_ready\"],\r\n\r\n    /** Fires when the node has received all the dependency related service \r\n     * requests and completely ready for providing service for others\r\n     * */\r\n    DependencyReady: [RI, \"dependency_ready\"],\r\n\r\n    /** Operation ready t_methodTrail for controller methods to emit/receive */\r\n    ServerReady: [RI, \"server_ready\"],\r\n\r\n    /** Test ready t_methodTrail for controller methods to emit/receive */\r\n    TestReady: [RI, \"test_ready\"],\r\n\r\n    ModuleInstalled: [RI, \"module_installed\"],\r\n\r\n    LibraryAdded: [RI, \"LibraryAdded\"],\r\n}\r\n\r\nexport const C_StartupTalk: i_map<t_resolutionInstructionNoArgs> = {\r\n\r\n    /** t_methodTrail for controller manager node to emit for the start of listen\r\n    * methods by all active nodes*/\r\n    run_Listen: [RI, \"run_listen\"],\r\n\r\n    /** t_methodTrail for controller manager node to emit for the start of talk by\r\n     * all active nodes */\r\n    run_Talk: [RI, \"run_talk\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Requests: [RI, \"run_requests\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Modules: [RI, \"run_modules\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Server: [RI, \"run_server\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Tests: [RI, \"run_tests\"],\r\n\r\n    /** Declares other services to send their libraries that are targeted to the sender*/\r\n    send_Archive: [RI, \"send_Archive\"],\r\n\r\n    /** Talk from the library holder to the service that is expecting libraries */\r\n    add_Archive: [RI, \"add_Archive()\"],\r\n    \r\n}\r\n\r\n\r\n","import { i_map } from \"./t_controller\";\r\n\r\n/**\r\n * Handles getting and setting of separator strings\r\n * */\r\nexport abstract class SeparatorHandler {\r\n\r\n    protected static _SEPARATOR: i_map<string>;\r\n\r\n\r\n/*\r\n * ========================================================================== Boundary 1 =========\r\n *\r\n *\tINSTANTIATION\r\n *\r\n * ===============================================================================================\r\n */\r\n    /**\r\n     * Handles setting and getting of separator strings\r\n     * */\r\n    constructor() {\r\n        this.set_Separators_FromGlobal();\r\n    }\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------------------------- Use Case ---------\r\n *\tHANDLE SEPARATORS\r\n */\r\n\r\n    /**\r\n     * Imports separators if they are available globally\r\n     * */\r\n    protected set_Separators_FromGlobal(): void {\r\n        if (global.hasOwnProperty(\"Separator\")) {\r\n            this.set_Separators(\r\n                // @ts-ignore\r\n                global.Separator\r\n            )\r\n        } else {\r\n            this.set_Separators({\r\n                \"Directory\": \"/\",\r\n                \"Expression\": \".\",\r\n                \"Id\": \"-\",\r\n                \"Dialogue\": \"?\",\r\n                \"Monologue\": \":\",\r\n                \"Namespace\": \"/\",\r\n                \"Extension\": \".\"\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets internal separators for Controller class\r\n     * \r\n     * @param separators\r\n     */\r\n    protected set_Separators(separators: i_map<string>): void {\r\n        SeparatorHandler._SEPARATOR = separators;\r\n    }\r\n\r\n    /**\r\n     * Returns the separator string for the specified name\r\n     * \r\n     * @param separator_name\r\n     */\r\n    protected get_Separator(separator_name: string): string {\r\n        return SeparatorHandler._SEPARATOR[separator_name];\r\n    }\r\n}","\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tIMPORTS\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/*\r\n *\tDEPENDENCIES\r\n */\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport { BaseController } from \"./base_controller\";\r\nimport { SeparatorHandler } from \"./separator_handler\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_instructionCode\r\n} from \"@utkusarioglu/resolver\";\r\nimport {\r\n    t_scope,\r\n    t_singleScope,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    t_staticContentArchive,\r\n    e_Scope,\r\n    t_localControllerStack,\r\n    t_channel,\r\n    t_epoch\n} from \"./t_controller\";\r\nimport { i_map } from \"@utkusarioglu/state/t_state\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Establishes local and global event emitters,\r\n * Stores the history of exchanges\r\n *\r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport class Controller extends SeparatorHandler {\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tINSTANTIATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n    /** Provides BaseController functionality for global scope*/\r\n    private static _global_controller = new BaseController(e_Scope.Global);\r\n\r\n    /** Provides BaseContoller functionality for local scopes*/\r\n    private static _local_controllers: t_localControllerStack = {};\r\n\r\n    /** List of registered classes*/\r\n    private static _global_namespaces: t_namespace[] = [];\r\n\r\n    /** Global namespace for this controller instance*/\r\n    private _controller_global_namespace!: t_namespace;\r\n\r\n    /** Local namespace for this controller instance*/\r\n    private _controller_local_namespace!: t_namespace;\r\n\r\n    /** Holds the static content for every responder */\r\n    private static _static_content_archive: t_staticContentArchive = {};\r\n\r\n    /** Channels that respond statically */\r\n    private static _static_responders: t_namespace[] = [];\r\n\r\n    /** Boolean that states whether the static content archive will be ignored */\r\n    private static _forced_dynamic_service: boolean = false;\r\n\r\n    /**\r\n     * Establishes local and global event emitters,\r\n     * Stores the history of exchanges\r\n     * \r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    constructor(namespace: t_namespace) {\r\n        super();\r\n\r\n        this.set_GlobalNamespace(namespace);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\tRequest and Respond functions together form the \"service\" feature.\r\n *\t{@link A_Controller} class introduces include_Services method for registering responses\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from a certain channel, expects a .then response\r\n     * If the responding channel is registered the group as static, static response will\r\n     * be served\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param responding_namespace t_namespace for the recipient\r\n     * @param talk t_resolution that will be processed by the responding class\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    request(\r\n        scope: t_singleScope,\r\n        responding_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n\r\n        const responding_channel = responding_namespace + this.get_Separator(\"Dialogue\") + group;\r\n        const instruction_code = Resolution.produce_UniqueInstructionCode(talk);\r\n\r\n        if (Controller.is_StaticResponder(responding_channel) &&\r\n            !Controller._forced_dynamic_service) {\r\n\r\n            return Controller._static_content_archive.sniff(\r\n                [\r\n                    responding_channel,\r\n                    instruction_code,\r\n                ],\r\n                () => {\r\n\r\n                    const dynamic_transmission = this.request_DynamicTransmission(\r\n                        scope,\r\n                        responding_namespace,\r\n                        talk,\r\n                        group,\r\n                    )\r\n\r\n                    Controller.set_PromisifiedStaticContent(\r\n                        responding_channel,\r\n                        instruction_code,\r\n                        dynamic_transmission\r\n                    ); \r\n\r\n                    return dynamic_transmission;\r\n                },\r\n                (static_transmisson: t_transmission) => {\r\n\r\n                    console.warn(\"Serving static content\");\r\n\r\n                    static_transmisson.Time = (new Date()).getTime();\r\n                    return Promise.resolve(static_transmisson)\r\n                }\r\n            ); // sniff\r\n\r\n        } else {\r\n\r\n            return this.request_DynamicTransmission(\r\n                scope,\r\n                responding_namespace,\r\n                talk,\r\n                group,\r\n            );\r\n\r\n        } // if is_static_responder\r\n    }\r\n\r\n    /**\r\n     * Requests dynamic transmission from related scopes\r\n     * \r\n     * @param scope\r\n     * @param recipient_namespace\r\n     * @param talk\r\n     * @param group\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private request_DynamicTransmission(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n        return this\r\n            .get_Scopes(scope)[0]\r\n            .request(scope, this._controller_global_namespace, recipient_namespace, talk, group);\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for registering responses\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param response_func (t_transmission) => Promise that will process the request\r\n     * @param is_static: if true, the created response will be saved for the controller for \r\n     * speedy re-response in future requests, if false, the response callback will be called \r\n     * everytime the same request is made\r\n     * @param group defines the set of methods that is available for the response. Used for\r\n     * Responding to differing security clearances\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    respond(\r\n        scope: t_scope,\r\n        response_func: (t_transmission: t_transmission) => Promise<any>,\r\n        is_static: boolean = true,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): void {\r\n\r\n        if (is_static) {\r\n            Controller._static_responders.push(\r\n                this._controller_global_namespace + \r\n                this.get_Separator(\"Dialogue\") + \r\n                group\r\n            );\r\n        }\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.respond(\r\n                this._controller_global_namespace,\r\n                response_func,\r\n                group,\r\n                scope,\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for DIALOGUE\r\n */ \r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_DialogueArchive(scope: t_singleScope): object {\r\n        return this.get_Scopes(scope)[0].get_DialogueArchive();\r\n    }\r\n\r\n    /**\r\n     * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_ServedChannels(scope: t_singleScope): (string | symbol)[] {\r\n        return this.get_Scopes(scope)[0].get_ServedChannels();\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE STATIC SERVICE\r\n */\r\n\r\n    /**\r\n     * Resolves the transmission promise, corrects the time of the transmission\r\n     * Saves the content as static for the given channel and code\r\n     * Warning: content served will remain to be dynamic until the promise is resolved\r\n     * \r\n     * @param channel\r\n     * @param instruction_code\r\n     * @param static_content\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static set_PromisifiedStaticContent(\r\n        channel: t_channel,\r\n        instruction_code: t_instructionCode,\r\n        static_content: Promise<t_transmission>\r\n    ): void {\r\n        static_content\r\n            .then((transmission: t_transmission) => {\r\n\r\n                Controller._static_content_archive.pave(\r\n                    [\r\n                        channel,\r\n                        instruction_code,\r\n                    ],\r\n                    () => {\r\n                        console.warn(C_Controller.E_MultipleRequestsBeforeResponse);\r\n                    },\r\n                    () => {\r\n\r\n                        transmission.LastDynamicTime = transmission.Time;\r\n                        transmission.Time = 0;\r\n                        transmission.Static = true;\r\n\r\n                        return transmission\r\n                    }\r\n                )\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns all channels that registered static service\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_AllStaticChannels(): t_namespace[] {\r\n        return Controller._static_responders;\r\n    }\r\n\r\n    /**\r\n     * Returns all the static content that is currently archived\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_AllStaticContent(): t_staticContentArchive {\r\n        return Controller._static_content_archive;\r\n    }\r\n\r\n    /**\r\n     * Clears the static content archive, forcing re-build\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static flush_StaticContentArchive(): void {\r\n        Controller._static_content_archive = {};\r\n    }\r\n\r\n    /**\r\n     * Forces all services to remain dynamic despit what the service provider intends\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static force_AllDynamicService(): void {\r\n        console.log(C_Controller.E_ForcedDynamic);\r\n        Controller._forced_dynamic_service = true;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tThese methods emit or listen to a certain channel but they do not expect the\r\n *\tother side to take any kind of action.\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *   TALK\r\n *   \r\n *   These emit locally or globally\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param recipient_namespace the namespace that is the primary target for the announcement\r\n     * @param talk the talk resolution for the announcement\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    announce(\r\n        scope: t_scope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.announce(\r\n                scope as t_singleScope,\r\n                this._controller_global_namespace,\r\n                recipient_namespace,\r\n                talk,\r\n                delay,\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns true if the specified channel is registered as a static responder\r\n     * \r\n     * @param channel\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static is_StaticResponder(channel: t_channel): boolean {\r\n        return this._static_responders.indexOf(channel) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the entire list of announcements since app start\r\n     * */\r\n    get_AnnouncementArchive(scope: t_singleScope): object[] {\r\n        return this.get_Scopes(scope)[0].get_AnnouncementArchive();\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n *\t\r\n *\tThese listen globally or locally\r\n */\r\n\r\n    /**\r\n     * Listens during the run of the app, it may take internal action \r\n     * but the emitter talker will not be notified of this\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param subcribed_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs that will be monitored\r\n     * @param callback: (t_transmission) => void action to take when there is chatter\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    subscribe(\r\n        scope: t_scope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.subscribe(\r\n                scope as t_singleScope,\r\n                subcribed_namespace,\r\n                listen,\r\n                callback);\r\n        });\r\n    }\r\n     \r\n    /**\r\n     * \r\n     *  Similar to subscribe, listens to a specific channel but does not respond to the source,\r\n     *  Unlike subscribe, wait quits listening after a certain number of occurences of the channel, default = 1\r\n     * \r\n     * @param scope Local or global\r\n     * @oaram recipient_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs used for monitoring\r\n     * @param test_callback callback for determining whether the channel signal meets the wait criteria\r\n     * @param action_callback: callback to execute if the test callbak returns true\r\n     * @param count number of times wait function will wait for the test callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    wait(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => { return true },\r\n        action_callback: (transmission: t_transmission) => void = () => { },\r\n        count: number = 1,\r\n        current_count: number = count\r\n    ): Promise<any> {\r\n        const wait_response = this.get_Scopes(scope)[0].wait(\r\n            scope,\r\n            this._controller_global_namespace,\r\n            recipient_namespace,\r\n            listen,\r\n            test_callback,\r\n            action_callback,\r\n            count,\r\n            current_count\r\n        );\r\n\r\n        return wait_response;\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param wait_set: instructions for the wait conditions\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    wait_Some(\r\n        scope: t_singleScope,\r\n        wait_set: t_waitSet[]\r\n    ): Promise<any> {\r\n        return this.get_Scopes(scope)[0].wait_Some(scope, this._controller_global_namespace, wait_set);\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tHANDLE\r\n *\t\r\n *\tGetters, Setters, Checkers and Manipulators\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE NAMESPACE\r\n *\t\r\n *\tMethods involved with getting and setting global and local namespaces for the instance\r\n */\r\n\r\n    /**\r\n     * Sets the namespace used for listening and emitting to local\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    set_LocalNamespace(local_namespace: t_namespace): this {\r\n        this._controller_local_namespace = local_namespace;\r\n        this.create_LocalNamespace(local_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the local namespace that the class emits and listens to\r\n     * */\r\n    get_LocalNamespace(): t_namespace {\r\n        return this._controller_local_namespace;\r\n    }\r\n\r\n    /**\r\n     * Gets the entire list of registered local namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_LocalNamespaces(): t_namespace[] {\r\n        return Object.keys(Controller._local_controllers);\r\n        //return Controller._namespaces;\r\n    }\r\n\r\n    /**\r\n     * Sets the global namespace for this instance\r\n     * \r\n     * @param global_namespace as t_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    set_GlobalNamespace(global_namespace: t_namespace): this {\r\n        this._controller_global_namespace = global_namespace;\r\n        Controller._global_namespaces.push(global_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the namespace that the class is registered as\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_GlobalNamespace(): t_namespace {\r\n        return this._controller_global_namespace;\r\n    }\r\n\r\n    /**\r\n     * Returns all the controller registered global namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    get_GlobalNamespaces(): t_namespace[] {\r\n        return Controller._global_namespaces;\r\n    }\r\n\r\n    /**\r\n     * Creates a local namespace with the given name\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private create_LocalNamespace(local_namespace: t_namespace): void {\r\n        Controller._local_controllers\r\n            .pave([local_namespace],\r\n                () => {\r\n                    //console.warn(`${local_namespace} already exists`)\r\n                },\r\n                () => {\r\n                    return new BaseController(e_Scope.Local);\r\n                }\r\n            )\r\n        //Controller._local_controllers[local_namespace] = \r\n    }\r\n\r\n    /**\r\n     * Deletes the local namespace\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private destroy_LocalNamespace(local_namespace: t_namespace): void {\r\n        delete Controller._local_controllers[local_namespace];\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE SCOPE\r\n */\r\n\r\n    /**\r\n     * Returns an array of Basecontrollers for the given scope value\r\n     * \r\n     * @param scope: number that defines the scopes \r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private get_Scopes(scope: t_scope | t_singleScope): BaseController[] {\r\n\r\n        let list: BaseController[] = [];\r\n\r\n        if (scope & 1) {\r\n            if (this._controller_local_namespace)\r\n                list.push(Controller._local_controllers[this._controller_local_namespace]);\r\n        }\r\n\r\n        if (scope & 2) {\r\n            list.push(Controller._global_controller);\r\n        }\r\n\r\n        if (list.length < 1) {\r\n            throw new Error(C_Controller.E_NoScopeSelected)\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Returns all currently defined local controllers\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     * */\r\n    static get_LocalControllerStack(): t_localControllerStack {\r\n        return Controller._local_controllers;\r\n    }\r\n}\r\n\r\n\r\n\r\n","\r\n/*\r\n *\tCOMMON CLASSES\r\n */ \r\nimport { EventEmitter } from \"events\";\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"./c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_serviceId,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    e_Scope,\r\n    t_singleScope,\r\n    t_channel,\r\n    t_epoch,\r\n} from \"./t_controller\";\r\n\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_expressionTrail\r\n} from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\nimport { SeparatorHandler } from \"./separator_handler\";\r\n\r\n\r\n\r\n/**\r\n * Extends event emitter to include specific send and receive functions for a single scope.\r\n * Controller class introduces local and global scopes using this class\r\n * \r\n * @remarks\r\n * Service: Controller\r\n * */\r\nexport class BaseController extends SeparatorHandler {\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * =============================================================================\r\n */\r\n\r\n    /** Event emitter for talk and listen use cases*/\r\n    private _monologue_emitter = new EventEmitter().setMaxListeners(20); //this increase may have some speed cost\r\n    /** Event emitter for services*/\r\n    private _dialogue_emitter = new EventEmitter().setMaxListeners(20); //this increase may have some speed cost;\r\n    /** Stores runtime announcements*/\r\n    private _announcement_archive: object[] = [];\r\n    /** Stores runtime requests and responds*/\r\n    private _dialogue_archive: object[] = [];\r\n\r\n    private _controller_scope: t_singleScope; // BaseController doesn't use this, but it's useful for debuging\r\n\r\n/*\r\n *\tThese will be used in future feature expansions\r\n */\r\n    //private static _static_reserve = {};\r\n    //private _open_requests: object[] = [];\r\n    //private _open_annuncements: object[] = [];\r\n    //private _open_subscriptions: object[] = [];\r\n    //private _open_waits: object[] = [];\r\n    //private _open_wait_dependencies: object[] = [];\r\n\r\n    /**\r\n     * Extends event emitter to include specific send and receive functions for a single scope.\r\n     * Controller class introduces local and global scopes using this class\r\n     * \r\n     * @param controller_scope\r\n     * \r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    constructor(controller_scope: t_singleScope) {\r\n        super();\r\n        this._controller_scope = controller_scope;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\t2 way data transfer between nodes\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from the given channel\r\n     * \r\n     * @remarks \r\n     * this method is a part of the Controller subsystem.\r\n     * Works in tandem with  {@link BaseController.(serve:instance)}\r\n     * \r\n     * \r\n     * @param sender_namespace namespace of the requesting class\r\n     * @param recipient_namespace namespace that is intended to receive the request\r\n     * @param talk the resolution that the responder will process\r\n     * @param group defines the set of methods that will be used for the service\r\n     * \r\n     * @returns Requested data inside the transmission wrapper object as Promise<t_transmission>\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    request(\r\n        scope: e_Scope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup,\r\n    ): Promise<any> {\r\n\r\n        const service_id: t_serviceId = BaseController.create_RandomServiceId();\r\n        const request_channel: t_channel = recipient_namespace +\r\n            this.get_Separator(\"Dialogue\") +\r\n            group;\r\n        const response_channel: t_channel = request_channel +\r\n            this.get_Separator(\"Id\") +\r\n            service_id;\r\n        const request_packet: t_transmission = {\r\n            Channel: response_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Id: service_id,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._dialogue_emitter\r\n                .once((response_channel), (response_packet: t_transmission) => {\r\n\r\n                response_packet.sniff(\"Error\",\r\n                    resolve.bind(null, response_packet),\r\n                    reject.bind(null, response_packet)\r\n                );\r\n\r\n                this.archive_Dialogue(request_packet, response_packet);\r\n            });\r\n\r\n            this._dialogue_emitter.emit(\r\n                request_channel,\r\n                request_packet as t_transmission\r\n            );\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for registering responses\r\n     *\r\n     * @param responder_namespace\r\n     * @param listen the resolution that the respond method will be listening to\r\n     * @param requester_namespace the namespace that is intended to receive the message\r\n     * @param response the callback function that will create the response for the request\r\n     * @param is_static if true, the created response will be saved for the controller for\r\n     * speedy re-response in future requests, if false, the response callback will be called\r\n     * everytime the same request is made\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    respond(\r\n        responder_namespace: t_namespace,\r\n        response_callback: (transmission: t_transmission) => Promise<any>,\r\n        group: e_ServiceGroup,\r\n        scope: e_Scope\r\n    ): void {\r\n\r\n        const listen_channel: t_channel =\r\n            responder_namespace +\r\n            this.get_Separator(\"Dialogue\") +\r\n            group;\r\n\r\n        this._dialogue_emitter.on(listen_channel,\r\n            (transmission: t_transmission) => {\r\n\r\n                response_callback(transmission)\r\n                    .then((requested_return_content: any) => { \r\n\r\n                        const serve_packet: t_transmission = {\r\n                            Sender: transmission.Recipient,\r\n                            Recipient: transmission.Sender,\r\n                            Talk: transmission.Talk,\r\n                            Content: requested_return_content,\r\n                            Time: (new Date()).getTime(),\r\n                            Static: false,\r\n                            Scope: scope,\r\n                        };\r\n\r\n                        this._dialogue_emitter\r\n                            .emit(transmission.Channel as t_channel, serve_packet)\r\n\r\n                    }) // then\r\n                    .catch((error) => {\r\n                        console.log(\"serve error:\", error)\r\n                    });\r\n\r\n            }); // dialogue emitter\r\n    }\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for DIALOGUE\r\n */\r\n\r\n    /**\r\n     * Archives the given dialogue data\r\n     * \r\n     * @param request_packet\r\n     * @param response_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Dialogue(\r\n        request_packet: t_transmission,\r\n        response_packet: t_transmission\r\n    ): void {\r\n\r\n        this._dialogue_archive.push({\r\n            Meta: {\r\n                Elapsed: (new Date()).getTime() - request_packet.Time,\r\n                State: response_packet.hasOwnProperty(\"Error\")\r\n                    ? \"Fail\"\r\n                    : \"Success\",\r\n            },\r\n            Request: request_packet,\r\n            Response: response_packet,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates a random service Id for the service channel to be unique\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    static create_RandomServiceId(): t_serviceId {\r\n        return Math.random().toString().slice(2);\r\n    }\r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    get_DialogueArchive() {\r\n        return this._dialogue_archive;\r\n    };\r\n    \r\n\r\n    /**\r\n    * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n    * */\r\n    get_ServedChannels() {\r\n        return this._dialogue_emitter.eventNames();\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================== Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tTransmission during which the emitter or listener do not acknowledge each other\r\n *\r\n * =============================================================================\r\n */\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tTALK\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param sender_namespace namespace of the class that is making the announcement\r\n     * @param recipient_namespace namespace that is the main subject of the announcement\r\n     * @param talk the content us being transmitted\r\n     * @param scope Scope of the message. Scope does not have any part in emittance, \r\n     * it's required for archiving\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    announce(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(talk);\r\n\r\n        const announcement_channel: string = recipient_namespace +\r\n            this.get_Separator(\"Monologue\") +\r\n            expression_trail;\r\n\r\n        const announcement_packet: t_transmission = {\r\n            Channel: announcement_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        }\r\n\r\n        const do_announcement = () => {\r\n            this._monologue_emitter.emit(announcement_channel, announcement_packet);\r\n            this.archive_Announcement(sender_namespace, announcement_channel, announcement_packet);\r\n        }\r\n\r\n        if (delay) {\r\n\r\n            if (delay === true) {\r\n                delay = C_Controller.GraceTime as unknown as t_epoch;\r\n            }\r\n\r\n            setTimeout(do_announcement, delay as t_epoch);\r\n\r\n        } else {\r\n            do_announcement();\r\n        }\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns entire announcement archive since the start of the app\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     * */\r\n    get_AnnouncementArchive(): object[] {\r\n        return this._announcement_archive;\r\n    }\r\n\r\n    /**\r\n     * Archives the given announcement data\r\n     * \r\n     * @param sender_namespace\r\n     * @param announcement_channel\r\n     * @param announcement_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Announcement(\r\n        sender_namespace: t_namespace,\r\n        announcement_channel: t_channel,\r\n        announcement_packet: any = null\r\n    ): void {\r\n\r\n        this._announcement_archive.push({\r\n            Namespace: sender_namespace,\r\n            Channel: announcement_channel,\r\n            Content: announcement_packet,\r\n            Time: (new Date()).getTime(),\r\n        })\r\n    }\r\n\r\n\r\n\r\n/* ---------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n */\r\n\r\n    /**\r\n     * Listens to the specified channel. The talkers are not notified of who's listening\r\n     * \r\n     * @param sender_namespace: namespace of the class that is listening\r\n     * @param subcribed_namespace the target that is being subscribed to\r\n     * @param listen  resolution that will be listened for\r\n     * @param callback: function that will be executed when there is a new signal at the \r\n     * specified channel\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    subscribe(\r\n        scope: t_singleScope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void,\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(listen);\r\n\r\n        const channel: t_channel = subcribed_namespace +\r\n            this.get_Separator(\"Monologue\") +\r\n            expression_trail;\r\n\r\n        this._monologue_emitter.on(channel, callback as (transmission: t_transmission) => any);\r\n    }\r\n\r\n    /**\r\n     * \r\n     *  Similar to subscribe, listens to a specific channel but does not respond to the source,\r\n     *  Unlike subscribe, wait quits listening after a certain number of occurences of the \r\n     *  channel, default = 1 also, wait has the built in capacity to check whether the received \r\n     *  emit meets the expected criteria through the test callback\r\n     *\r\n     * @param sender_namespace namespace of the class that is waiting\r\n     * @param recipient_namespace namespace that is being awaited \r\n     * @param listen method or announcement to listen to\r\n     * @param test_callback callback for determining whether the channel signal meets \r\n     * the wait criteria\r\n     * @param action_callback callback to execute if the test callbak returns true\r\n     * @param total_count number of times wait function will wait for the test callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    wait(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => true ,\r\n        action_callback: (transmission: t_transmission) => void = () => { },\r\n        total_count: number = 1,\r\n        current_count: number = total_count,\r\n    ): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const once_callback_function = (transmission: t_transmission) => {\r\n\r\n                if (test_callback(transmission)) {\r\n                    current_count--;\r\n                    resolve(action_callback(transmission));\r\n                } else {\r\n\r\n                    return this\r\n                        .wait(\r\n                            scope,\r\n                            sender_namespace,\r\n                            recipient_namespace,\r\n                            listen,\r\n                            test_callback,\r\n                            action_callback,\r\n                            total_count,\r\n                            current_count\r\n                        );\r\n                }\r\n            } \r\n\r\n            if (current_count > 0) {\r\n\r\n                const expression_trail: t_expressionTrail =\r\n                    Resolution.extract_ExpressionTrail_FromResolutionInstruction(listen);\r\n\r\n                const channel: t_channel = recipient_namespace +\r\n                    this.get_Separator(\"Monologue\") +\r\n                    expression_trail;\r\n\r\n                return this._monologue_emitter.once(channel, once_callback_function);\r\n            }\r\n\r\n        }) // return new promise\r\n            .catch((error_content: any) => {\r\n                console.error(\"BaseController.wait.Promise.catch:\\n\", error_content);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param sender_namespace: namespace of the class that is waiting\r\n     * @param wait_set: set of wait conditions to be met\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    wait_Some(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        wait_set: t_waitSet[]\r\n    ): Promise<t_transmission[]> {\r\n        return Promise.all(wait_set.map((wait_event: t_waitSet) => {\r\n            return this.wait(\r\n                scope,\r\n                sender_namespace,\r\n                wait_event.Namespace,\r\n                wait_event.Listen,\r\n                wait_event.Test,\r\n                wait_event.Call\r\n            );\r\n        }));\r\n    }\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport { BaseController } from \"./base_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstructionNoArgs,\r\n    t_resolutionInstruction,\r\n} from \"@utkusarioglu/resolver\";\r\n\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n/*\r\n * ========================================================================== Boundary 1 =========\r\n *\r\n *\tSTAND INS\r\n *\r\n * ===============================================================================================\r\n */\r\n\r\n/**\r\n * Number used as unix epoch\r\n * */\r\nexport type t_epoch = number\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\tSCOPE\r\n */\r\n\r\n/**\r\n * Legal scopes for the controller\r\n * \r\n * Local only emits to local namespace (if defined)\r\n * Global emits to global namespace\r\n * LocalAndGlobal emits to both\r\n * */\r\nexport enum e_Scope {\r\n    Local = 1,\r\n    Global = 10,\r\n    LocalAndGlobal = 11,\r\n}\r\n\r\n/**\r\n * All legal values of e_Scope\r\n * */\r\nexport type t_scope = e_Scope;\r\n\r\n/**\r\n * Only single scope allowed\r\n * */\r\nexport type t_singleScope = e_Scope.Local | e_Scope.Global;\r\n\r\n\r\n\r\n/**\r\n * Contains specifications for the transmission error\r\n * */\r\nexport type t_error = {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Alias for string to denote channel\r\n * */\r\nexport type t_channel = string;\r\n\r\n/**\r\n * Alias for string to denote the unique service id\r\n * */\r\nexport type t_serviceId = string\r\n\r\n/**\r\n * Stores specifications required for the wait method to run\r\n * */\r\nexport type t_waitSet = {\r\n    /** Namespace of the target that is being waited*/\r\n    Namespace: t_namespace,\r\n    /** the resolution to listen to */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** callback function to determine if the emit from the awaited meets the requirements*/\r\n    Test?: (transmission: t_transmission) => boolean,\r\n    /** callback to be executed once the awaited passes the test*/\r\n    Call?: (transmission: t_transmission) => any,\r\n}\r\n\r\n/**\r\n * Alias for any to denote the content transmitted via t_transmission\r\n * */\r\nexport type t_transmissionContent = any;\r\n\r\n\r\n/**\r\n * Contains keys that are expected to be transmitted by controller methods\r\n * */\r\nexport type t_transmission = {\r\n    /** namespace of the sender*/\r\n    Sender: t_namespace,\r\n    /** namespace of the recipient*/\r\n    Recipient: t_namespace,\r\n    /** Redundant info for ease of access, concatenating:\r\n     * 1- recipient namespace  \r\n     * 2- method or announcement separator (whichever applies)\r\n     * 3- service group\r\n     * 4- id separator (if applies)\r\n     * 5- id (if applies)\r\n     * */\r\n    Channel?: t_channel,\r\n    /** denotes the service group in service transmissions */\r\n    Group?: e_ServiceGroup,\r\n    /** Listening resolution involved with the transmission */\r\n    Listen?: t_resolutionInstructionNoArgs,\r\n    /** Talking that is involved with the transmission*/\r\n    Talk?: t_resolutionInstruction,\r\n    /** transmission content that is created by the responder */\r\n    Content?: t_transmissionContent,\r\n    /** Error content if an error occured*/\r\n    Error?: t_error,\r\n    /** Unique request code*/\r\n    Id?: t_serviceId,\r\n    /** epoch when the transmission occured */\r\n    Time: t_epoch,\r\n    Static: boolean,\r\n    LastDynamicTime?: t_epoch,\r\n    Scope: e_Scope,\r\n}\r\n\r\n\r\n/**\r\n * Datatype for instructing multiple waits followed by a call\r\n * */\r\nexport type t_dependency_group = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_singleScope,\r\n    /** Dependency members to be waited*/\r\n    Members: t_waitSet[];\r\n    /** Callback function to be executed once all the dependencies become available*/\r\n    Call: (value: any) => Promise<any>,\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel\r\n * */\r\nexport type t_subscription = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** The namespace that is being subscribed to*/\r\n    Namespace: t_namespace,\r\n    /** Resolution that is being subscribed at */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** Callback function to be executed when the subscription emits*/\r\n    Call: (value: any) => any,\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel followed by a call whose \r\n * return is emitted to the requester\r\n * */\r\nexport type t_service = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace that is expected to respond to the request*/\r\n    Namespace: t_namespace,\r\n    /** Specific method that is being requested*/\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** Callback function to be executed on the response transmission*/\r\n    Call: (value: any) => any,\r\n    /** Whelther the service is static */\r\n    Static?: boolean,\r\n    /** Service group */\r\n    Group: e_ServiceGroup,\r\n}\r\n\r\n/**\r\n * Datatype for announcing a listening channel to which multiple clases can independently \r\n * send data towards, which will independently handled by the call function\r\n * */\r\nexport type t_reception = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace that is accepting the admissions */\r\n    Namespace?: t_namespace,\r\n    /** Announcement resolution */\r\n    Talk: t_resolutionInstruction,\r\n    /** Listening resolution */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** function that will be called when another node emits to the channel (namespace + . + method) */\r\n    Call: (value: any) => any,\r\n}\r\n\r\n/**\r\n * Datatype for instructing emit of data to a certain channel without any \r\n * following listening activity by the emitter\r\n * */\r\nexport type t_announcement = {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope,\r\n    /** Namespace of the announcer*/\r\n    Namespace: t_namespace,\r\n    /** the resolution that will be processed by the target */\r\n    Talk: any,\r\n}\r\n\r\nexport enum e_ServiceGroup {\r\n    Standard,\r\n}\r\n\r\n/**\r\n * Data structure for Controller class static content archive\r\n * */\r\nexport type t_staticContentArchive = {\r\n    [channel: string]: {\r\n        [unique_request_code: string]: t_transmission\r\n    }\r\n}\r\n\r\n/**\r\n * Stores local controllers\r\n * */\r\nexport type t_localControllerStack = {\r\n    [namespace: string]: BaseController\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Defines the properties necessary for executing one step\r\n * */\r\nexport type t_sequenceStep = {\r\n    /** Console mesage for the start of the step if enabled */\r\n    StartMessage?: string,\r\n    /** Console mesage for the end of the step if enabled */\r\n    EndMessage?: string,\r\n    /** Instruction to be listened to for determining the services' completion of the step */\r\n    Listen: t_resolutionInstructionNoArgs,\r\n    /** List of namespaces that are required to complete the step */\r\n    List: t_namespace[],\r\n    /** Instruction to announce to listening services that the step execution is shall \r\n     * be carried out. Some steps may not require a talk as the execution starts through \r\n     * some other method */\r\n    Talk?: t_resolutionInstructionNoArgs,\r\n}\r\n\r\n/**\r\n * Generic mapping object for Controller\r\n * */\r\nexport type i_map<T> = { [key: string]: T }"],"sourceRoot":""}