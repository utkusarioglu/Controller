{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Common/c_controller.ts","webpack:///./src/Common/t_controller.ts","webpack:///./src/Controller/controller.ts","webpack:///./node_modules/@utkusarioglu/resolver/index.js","webpack:///./src/Common/separator_handler.ts","webpack:///./src/Mixins/m_controller.ts","webpack:///./src/index.ts","webpack:///./src/BaseController/base_controller.ts","webpack:///./node_modules/events/events.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/Mixins/m_controller_events.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RI","C_Controller","AllServices","GraceTime","E_AlreadyDefined","E_CalledBeforeDeclaration","E_NoScopeSelected","join","E_MultipleRequestsBeforeResponse","E_ForcedDynamic","C_BootState","ClassReady","ListenReady","TalkReady","ModulesReady","DependencyReady","ServerReady","TestReady","ModuleInstalled","LibraryAdded","C_StartupTalk","run_Listen","run_Talk","run_Requests","run_Modules","run_Server","run_Tests","send_Archive","add_Archive","e_Scope","e_ServiceGroup","Controller","SeparatorHandler","namespace","super","this","set_GlobalNamespace","scope","responding_namespace","talk","group","Standard","responding_channel","get_Separator","instruction_code","Resolution","produce_UniqueInstructionCode","is_StaticResponder","_forced_dynamic_service","_static_content_archive","sniff","dynamic_transmission","request_DynamicTransmission","set_PromisifiedStaticContent","static_transmisson","console","warn","Time","Date","getTime","Promise","resolve","recipient_namespace","get_Scopes","request","_controller_global_namespace","response_func","is_static","_static_responders","push","forEach","active_scope","respond","get_DialogueArchive","channel","static_content","then","transmission","pave","LastDynamicTime","Static","log","delay","announce","indexOf","get_AnnouncementArchive","subcribed_namespace","listen","callback","subscribe","test_callback","action_callback","count","current_count","wait","wait_set","wait_Some","local_namespace","_controller_local_namespace","create_LocalNamespace","keys","_local_controllers","global_namespace","add_Controller_ToGlobalNamespaces","BaseController","Local","_global_namespaces","list","_global_controller","length","Error","Global","e","default","a","u","Parent","with","M_Namespace","M_State","initialize_State","set_ResolutionInstruction","is_ResolutionInstruction","JSON","stringify","get_State","set_Var","extract_ExpressionTrail_FromResolutionInstruction","set_ExpressionTrail","extract_ArgumentPool_fromResolutionInstruction","set_ArgumentPool","get_Var","produce_set_ExpressionStack_FromExpressionTrail","produce_ExpressionTrail_FromExpressionStack","C_Resolver","EXPRESSION_SEPARATOR","produce_ExpressionStack_FromExpressionTrail","set_ExpressionStack","split","slice","get_ExpressionStack","get_ArgumentPool","Last","First","map","During","splice","extract_ExpressionType","e_expressionType","Key","extract_MethodName","INSTANTIATION_INDICATOR","Instantiate","METHOD_INDICATOR","Method","replace","extender_class","reduce","produce_ClassExpression","getOwnPropertyNames","getOwnPropertyDescriptor","_global_namespace","C_Namespace","get_GlobalNamespace","produce_Stack","check_NamespaceInput","_local_namespace","get_LocalNamespace","E_NoEmpty","NamespaceSeparator","_channel","_id","Math","random","toString","_states","throw_OverloadError","C_State","E_VarNotDefined","subs","parse","entries","set_Separators","Separator","Directory","Expression","Id","Dialogue","Monologue","Namespace","Extension","SEPARATOR","is_empty","_tracking_enabled","get_Channel","Channel","get_Id","Variable","Value","copy_Var","_track_stack","E_TrackingOff","filter","e_filterMode","And","find","Or","assign_Property","E_PropertyRequired","assign_Class","E_ChOverload","Array","isArray","get_Vars","State","_state","set_Vars","remove_State","Function","window","pop","is_Object","has_Function","String","toProperCase","charAt","toUpperCase","substr","toLowerCase","minify","chop","RegExp","match","RulesVarName","E_NonPotentAttempt","E_NonStringType","E_DoesNotCarry","E_DepthInconsistent","E_TooDeep","E_TooShallow","E_MinTrailDepthLimit","DISABLED_PHRASE","Null","Other","Undefined","VariableType","ResolutionInstruction","e_typeDefinition","Resolver","MinTrailDepth","MaxTrailDepth","Recursion","set_Resolution","set_Passage","is_DisabledPassage","get_MaxResolutionDepth","get_MinResolutionDepth","produce_ResolutionDepth","get_EntryPoint","build_Items","check_ItemType","build_Resolution","build_Array","build_Object","concatenate_Items","constructor","check_ResolutionDepth","get_Sources","retrieve_ResolutionRules","produce_ExecutionStepStack","check_ExpressionAvailability","build_Arguments","DoesNotCarry","every","retrieve_ItemTypeArray","concatenate_Objects","set_Separators_FromGlobal","global","separators","_SEPARATOR","separator_name","_controller","has_LocalNamespace","set_LocalNamespace","M_Controller","M_ControllerEvents","controller_scope","_monologue_emitter","EventEmitter","setMaxListeners","_dialogue_emitter","_announcement_archive","_dialogue_archive","_controller_scope","sender_namespace","service_id","create_RandomServiceId","request_channel","response_channel","request_packet","Sender","Recipient","Talk","Scope","reject","once","response_packet","archive_Dialogue","emit","responder_namespace","response_callback","listen_channel","on","requested_return_content","serve_packet","Content","catch","error","Meta","Elapsed","Request","Response","eventNames","expression_trail","announcement_channel","announcement_packet","do_announcement","archive_Announcement","setTimeout","waiter_namespace","total_count","once_callback_function","new_promise","error_content","all","wait_event","Listen","Test","Call","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","ownKeys","getOwnPropertySymbols","concat","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","emitter","onceWrapper","arguments","fired","removeListener","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","getMaxListeners","doError","er","err","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","index","spliceOne","off","removeAllListeners","rawListeners","g","subscription_list","_subscriptions","dependencies_list","_dependencies","reception_list","_receptions","_announcements","reception","services_list","_services","set_Controller","announce_ToAllServices","get_Controller","register_Dependencies","register_Subscriptions","register_Announcements","register_Services","subscription","dependency","Members","data","announcement","service","sequence_steps","manager_namespace","step_promise_stack","steps_promise_sequence","step","resolve_step_promise","List","start_message","step_talk","active_step_promise_stack","resolution_instruction","library_source_namespace"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import { i_map, t_epoch } from \"./t_controller\";\r\nimport { t_resolutionInstruction, t_resolutionInstructionNoArgs } from \"@utkusarioglu/resolver\";\r\n\r\nconst RI: \"RI\" = \"RI\";\r\n\r\nexport const C_Controller: i_map<string> = {\r\n\r\n    /** Namespace to use when a controller wants to talk to all services */\r\n    AllServices: \"App\",\r\n\r\n    /** The duration that is allowed to pass between sequence events. can\r\n     * be removed later on*/\r\n    // @ts-ignore\r\n    GraceTime: 20,\r\n\r\n    E_AlreadyDefined: \"Controller already defined\",\r\n    E_CalledBeforeDeclaration: \"Controller called before declaration\",\r\n    E_NoScopeSelected: [\"There is a problem with the scopes. \",\r\n        \"It may be due to undefiend LocalNamespace \",\r\n        \"if the code is expected to work in local scope\"].join(\"\"),\r\n    E_MultipleRequestsBeforeResponse: \"Multiple requests for the content was placed before the promise was resolved\",\r\n    E_ForcedDynamic: \"All services are forced to be dynamic\",\r\n};\r\n\r\nexport const C_BootState: i_map<t_resolutionInstructionNoArgs> = {\r\n\r\n    /** Class ready t_methodTrail for controller methods to emit/receive */\r\n    ClassReady: [RI, \"class_ready\"],\r\n\r\n    /** Listen ready t_methodTrail for controller methods to emit/receive */\r\n    ListenReady: [RI, \"listen_ready\"],\r\n\r\n    /** Talk ready t_methodTrail for controller methods to emit/receive */\r\n    TalkReady: [RI, \"talk_ready\"],\r\n\r\n    /** Fires when all modules load its content to the respective classes*/\r\n    ModulesReady: [RI, \"modules_ready\"],\r\n\r\n    /** Fires when the node has received all the dependency related service \r\n     * requests and completely ready for providing service for others\r\n     */\r\n    DependencyReady: [RI, \"dependency_ready\"],\r\n\r\n    /** Operation ready t_methodTrail for controller methods to emit/receive */\r\n    ServerReady: [RI, \"server_ready\"],\r\n\r\n    /** Test ready t_methodTrail for controller methods to emit/receive */\r\n    TestReady: [RI, \"test_ready\"],\r\n\r\n    ModuleInstalled: [RI, \"module_installed\"],\r\n\r\n    LibraryAdded: [RI, \"LibraryAdded\"],\r\n};\r\n\r\nexport const C_StartupTalk: i_map<t_resolutionInstructionNoArgs> = {\r\n\r\n    /** t_methodTrail for controller manager node to emit for the start of listen\r\n    * methods by all active nodes*/\r\n    run_Listen: [RI, \"run_listen\"],\r\n\r\n    /** t_methodTrail for controller manager node to emit for the start of talk by\r\n     * all active nodes */\r\n    run_Talk: [RI, \"run_talk\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Requests: [RI, \"run_requests\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Modules: [RI, \"run_modules\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Server: [RI, \"run_server\"],\r\n\r\n    /** t_methodTrail for controller managaer node to emit for the nodes to start\r\n     * requesting services from each other*/\r\n    run_Tests: [RI, \"run_tests\"],\r\n\r\n    /** Declares other services to send their libraries that are targeted to the sender*/\r\n    send_Archive: [RI, \"send_Archive\"],\r\n\r\n    /** Talk from the library holder to the service that is expecting libraries */\r\n    add_Archive: [RI, \"add_Archive()\"],\r\n    \r\n};\r\n\r\n\r\n","/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport { BaseController } from \"../BaseController/base_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstructionNoArgs,\r\n    t_resolutionInstruction,\r\n} from \"@utkusarioglu/resolver\";\r\n\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n/*\r\n * ========================================================================== Boundary 1 =========\r\n *\r\n *\tSTAND INS\r\n *\r\n * ===============================================================================================\r\n */\r\n\r\n/**\r\n * Number used as unix epoch\r\n */\r\nexport type t_epoch = number;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\tSCOPE\r\n */\r\n\r\n/**\r\n * Legal scopes for the controller\r\n * \r\n * Local only emits to local namespace (if defined)\r\n * Global emits to global namespace\r\n * LocalAndGlobal emits to both\r\n */\r\nexport enum e_Scope {\r\n    Local = 1,\r\n    Global = 10,\r\n    LocalAndGlobal = 11,\r\n}\r\n\r\n/**\r\n * All legal values of e_Scope\r\n */\r\nexport type t_scope = e_Scope;\r\n\r\n/**\r\n * Only single scope allowed\r\n */\r\nexport type t_singleScope = e_Scope.Local | e_Scope.Global;\r\n\r\n\r\n\r\n/**\r\n * Contains specifications for the transmission error\r\n */\r\nexport interface t_error {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Alias for string to denote channel\r\n */\r\nexport type t_channel = string;\r\n\r\n/**\r\n * Alias for string to denote the unique service id\r\n */\r\nexport type t_serviceId = string;\r\n\r\n/**\r\n * Stores specifications required for the wait method to run\r\n */\r\nexport interface t_waitSet {\r\n    /** Namespace of the target that is being waited*/\r\n    Namespace: t_namespace;\r\n    /** the resolution to listen to */\r\n    Listen: t_resolutionInstructionNoArgs;\r\n    /** callback function to determine if the emit from the awaited meets the requirements*/\r\n    Test?: (transmission: t_transmission) => boolean;\r\n    /** callback to be executed once the awaited passes the test*/\r\n    Call?: (transmission: t_transmission) => any;\r\n}\r\n\r\n/**\r\n * Alias for any to denote the content transmitted via t_transmission\r\n */\r\nexport type t_transmissionContent = any;\r\n\r\n\r\n/**\r\n * Contains keys that are expected to be transmitted by controller methods\r\n */\r\nexport interface t_transmission {\r\n    /** namespace of the sender*/\r\n    Sender: t_namespace;\r\n    /** namespace of the recipient*/\r\n    Recipient: t_namespace;\r\n    /** Redundant info for ease of access, concatenating:\r\n     * 1- recipient namespace  \r\n     * 2- method or announcement separator (whichever applies)\r\n     * 3- service group\r\n     * 4- id separator (if applies)\r\n     * 5- id (if applies)\r\n     */\r\n    Channel?: t_channel;\r\n    /** denotes the service group in service transmissions */\r\n    Group?: e_ServiceGroup;\r\n    /** Listening resolution involved with the transmission */\r\n    Listen?: t_resolutionInstructionNoArgs;\r\n    /** Talking that is involved with the transmission*/\r\n    Talk?: t_resolutionInstruction;\r\n    /** transmission content that is created by the responder */\r\n    Content?: t_transmissionContent;\r\n    /** Error content if an error occured*/\r\n    Error?: t_error;\r\n    /** Unique request code*/\r\n    Id?: t_serviceId;\r\n    /** epoch when the transmission occured */\r\n    Time: t_epoch;\r\n    Static: boolean;\r\n    LastDynamicTime?: t_epoch;\r\n    Scope: e_Scope;\r\n}\r\n\r\n\r\n/**\r\n * Datatype for instructing multiple waits followed by a call\r\n */\r\nexport interface t_dependency_group {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_singleScope;\r\n    /** Dependency members to be waited*/\r\n    Members: t_waitSet[];\r\n    /** Callback function to be executed once all the dependencies become available*/\r\n    Call: (value: any) => Promise<any>;\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel\r\n */\r\nexport interface t_subscription {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope;\r\n    /** The namespace that is being subscribed to*/\r\n    Namespace: t_namespace;\r\n    /** Resolution that is being subscribed at */\r\n    Listen: t_resolutionInstructionNoArgs;\r\n    /** Callback function to be executed when the subscription emits*/\r\n    Call: (value: any) => any;\r\n}\r\n\r\n/**\r\n * Datatype for instructing monitor of a channel followed by a call whose \r\n * return is emitted to the requester\r\n */\r\nexport interface t_service {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope;\r\n    /** Namespace that is expected to respond to the request*/\r\n    Namespace: t_namespace;\r\n    /** Specific method that is being requested*/\r\n    Listen: t_resolutionInstructionNoArgs;\r\n    /** Callback function to be executed on the response transmission*/\r\n    Call: (value: any) => any;\r\n    /** Whelther the service is static */\r\n    Static?: boolean;\r\n    /** Service group */\r\n    Group: e_ServiceGroup;\r\n}\r\n\r\n/**\r\n * Datatype for announcing a listening channel to which multiple clases can independently \r\n * send data towards, which will independently handled by the call function\r\n */\r\nexport interface t_reception {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope;\r\n    /** Namespace that is accepting the admissions */\r\n    Namespace?: t_namespace;\r\n    /** Announcement resolution */\r\n    Talk: t_resolutionInstruction;\r\n    /** Listening resolution */\r\n    Listen: t_resolutionInstructionNoArgs;\r\n    /** function that will be called when another node emits to the channel (namespace + . + method) */\r\n    Call: (value: any) => any;\r\n}\r\n\r\n/**\r\n * Datatype for instructing emit of data to a certain channel without any \r\n * following listening activity by the emitter\r\n */\r\nexport interface t_announcement {\r\n    /** 1: Local, 2 or 10: global, 3 or 11: global + local */\r\n    Scope: t_scope;\r\n    /** Namespace of the announcer*/\r\n    Namespace: t_namespace;\r\n    /** the resolution that will be processed by the target */\r\n    Talk: any;\r\n}\r\n\r\nexport enum e_ServiceGroup {\r\n    Standard,\r\n}\r\n\r\n/**\r\n * Data structure for Controller class static content archive\r\n */\r\nexport interface t_staticContentArchive {\r\n    [channel: string]: {\r\n        [unique_request_code: string]: t_transmission,\r\n    };\r\n}\r\n\r\n/**\r\n * Stores local controllers\r\n */\r\nexport interface t_localControllerStack {\r\n    [namespace: string]: BaseController;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Defines the properties necessary for executing one step\r\n */\r\nexport interface t_sequenceStep {\r\n    /** Console mesage for the start of the step if enabled */\r\n    StartMessage?: string;\r\n    /** Console mesage for the end of the step if enabled */\r\n    EndMessage?: string;\r\n    /** Instruction to be listened to for determining the services' completion of the step */\r\n    Listen: t_resolutionInstructionNoArgs;\r\n    /** List of namespaces that are required to complete the step */\r\n    List: t_namespace[];\r\n    /** Instruction to announce to listening services that the step execution is shall \r\n     * be carried out. Some steps may not require a talk as the execution starts through \r\n     * some other method */\r\n    Talk?: t_resolutionInstructionNoArgs;\r\n}\r\n\r\n/**\r\n * Generic mapping object for Controller\r\n */\r\nexport interface i_map<T> { [key: string]: T; }\r\n","\r\n/* ////////////////////////////////////////////////////////////////////////////\r\n *\r\n *\tIMPORTS\r\n *\r\n * ///////////////////////////////////////////////////////////////////////// */\r\n\r\n/*\r\n *\tDEPENDENCIES\r\n */\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\n\r\n/*\r\n *\tLOCAL CLASSES\r\n */\r\nimport { BaseController } from \"../BaseController/base_controller\";\r\nimport { SeparatorHandler } from \"../Common/separator_handler\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"../Common/c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_instructionCode,\r\n} from \"@utkusarioglu/resolver\";\r\nimport {\r\n    t_scope,\r\n    t_singleScope,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    t_staticContentArchive,\r\n    e_Scope,\r\n    t_localControllerStack,\r\n    t_channel,\r\n    t_epoch,\n} from \"../Common/t_controller\";\r\nimport { i_map } from \"@utkusarioglu/state/t_state\"; // This should be removed\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n\r\n/* ////////////////////////////////////////////////////////////////////////////\r\n *\r\n *\tEXPORTS\r\n *\r\n * ///////////////////////////////////////////////////////////////////////// */\r\n\r\n/**\r\n * Establishes local and global event emitters,\r\n * Stores the history of exchanges\r\n *\r\n * @remarks\r\n * Service: Controller\r\n */\r\nexport class Controller extends SeparatorHandler {\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tINSTANTIATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n    /** \r\n     *  Provides BaseController functionality for global scope\r\n     */\r\n    private static _global_controller = new BaseController(e_Scope.Global);\r\n\r\n    /** \r\n     *  Provides BaseContoller functionality for local scopes\r\n     */\r\n    private static _local_controllers: t_localControllerStack = {};\r\n\r\n    /** \r\n     *  List of registered classes\r\n     */\r\n    private static _global_namespaces: t_namespace[] = [];\r\n\r\n    /** \r\n     *  Global namespace for this controller instance\r\n     */\r\n    private _controller_global_namespace!: t_namespace;\r\n\r\n    /** \r\n     *  Local namespace for this controller instance\r\n     */\r\n    private _controller_local_namespace!: t_namespace;\r\n\r\n    /** \r\n     *  Holds the static content for every responder \r\n     */\r\n    private static _static_content_archive: t_staticContentArchive = {};\r\n\r\n    /** \r\n     *  Channels that respond statically \r\n     */\r\n    private static _static_responders: t_namespace[] = [];\r\n\r\n    /** \r\n     *  Boolean that states whether the static content archive \r\n     *  will be ignored \r\n     */\r\n    private static _forced_dynamic_service: boolean = false;\r\n\r\n    /**\r\n     * Establishes local and global event emitters,\r\n     * Stores the history of exchanges\r\n     * \r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    constructor(namespace: t_namespace) {\r\n        super();\r\n\r\n        this.set_GlobalNamespace(namespace);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\tRequest and Respond functions together form the \"service\" feature.\r\n *\t{@link A_Controller} class introduces include_Services method for \r\n *\tregistering responses\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from a certain channel, expects a .then response\r\n     * If the responding channel is registered the group as static, static \r\n     * response will be served\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param responding_namespace t_namespace for the recipient\r\n     * @param talk t_resolution that will be processed by the responding class\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public request(\r\n        scope: t_singleScope,\r\n        responding_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n\r\n        const responding_channel =\r\n            responding_namespace +\r\n            this.get_Separator(\"Dialogue\") + group;\r\n\r\n        const instruction_code =\r\n            Resolution.produce_UniqueInstructionCode(talk);\r\n\r\n        if (Controller.is_StaticResponder(responding_channel) &&\r\n            !Controller._forced_dynamic_service) {\r\n\r\n            return Controller._static_content_archive.sniff(\r\n                [\r\n                    responding_channel,\r\n                    instruction_code,\r\n                ],\r\n                () => {\r\n\r\n                    const dynamic_transmission =\r\n                        this.request_DynamicTransmission(\r\n                            scope,\r\n                            responding_namespace,\r\n                            talk,\r\n                            group,\r\n                        );\r\n\r\n                    Controller.set_PromisifiedStaticContent(\r\n                        responding_channel,\r\n                        instruction_code,\r\n                        dynamic_transmission,\r\n                    ); \r\n\r\n                    return dynamic_transmission;\r\n                },\r\n                (static_transmisson: t_transmission) => {\r\n\r\n                    console.warn(\"Serving static content\");\r\n\r\n                    static_transmisson.Time = (new Date()).getTime();\r\n                    return Promise.resolve(static_transmisson);\r\n                },\r\n            ); // sniff\r\n\r\n        } else {\r\n\r\n            return this.request_DynamicTransmission(\r\n                scope,\r\n                responding_namespace,\r\n                talk,\r\n                group,\r\n            );\r\n\r\n        } // if is_static_responder\r\n    }\r\n\r\n    /**\r\n     * Requests dynamic transmission from related scopes\r\n     * \r\n     * @param scope\r\n     * @param recipient_namespace\r\n     * @param talk\r\n     * @param group\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private request_DynamicTransmission(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): Promise<t_transmission> {\r\n        return this\r\n            .get_Scopes(scope)[0]\r\n            .request(\r\n                scope,\r\n                this._controller_global_namespace,\r\n                recipient_namespace,\r\n                talk, group,\r\n            );\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for \r\n     * registering responses\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param response_func (t_transmission) => Promise that will process the \r\n     * request\r\n     * @param is_static: if true, the created response will be saved for the \r\n     * controller for \r\n     * speedy re-response in future requests, if false, the response callback \r\n     * will be called \r\n     * everytime the same request is made\r\n     * @param group defines the set of methods that is available for the \r\n     * response. Used for responding to differing security clearances\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public respond(\r\n        scope: t_scope,\r\n        response_func: (t_transmission: t_transmission) => Promise<any>,\r\n        is_static: boolean = true,\r\n        group: e_ServiceGroup = e_ServiceGroup.Standard,\r\n    ): void {\r\n\r\n        if (is_static) {\r\n            Controller._static_responders.push(\r\n                this._controller_global_namespace + \r\n                this.get_Separator(\"Dialogue\") + \r\n                group,\r\n            );\r\n        }\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.respond(\r\n                this._controller_global_namespace,\r\n                response_func,\r\n                group,\r\n                scope,\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for DIALOGUE\r\n */ \r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public get_DialogueArchive(scope: t_singleScope): object {\r\n        return this.get_Scopes(scope)[0].get_DialogueArchive();\r\n    }\r\n\r\n    /**\r\n     * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    // public get_ServedChannels(scope: t_singleScope): (string | symbol)[] {\r\n    //    return this.get_Scopes(scope)[0].get_ServedChannels();\r\n    // }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE STATIC SERVICE\r\n */\r\n\r\n    /**\r\n     * Resolves the transmission promise, corrects the time of the transmission\r\n     * Saves the content as static for the given channel and code\r\n     * Warning: content served will remain to be dynamic until the promise \r\n     * is resolved\r\n     * \r\n     * @param channel\r\n     * @param instruction_code\r\n     * @param static_content\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static set_PromisifiedStaticContent(\r\n        channel: t_channel,\r\n        instruction_code: t_instructionCode,\r\n        static_content: Promise<t_transmission>,\r\n    ): void {\r\n        static_content\r\n            .then((transmission: t_transmission) => {\r\n\r\n                Controller._static_content_archive.pave(\r\n                    [\r\n                        channel,\r\n                        instruction_code,\r\n                    ],\r\n                    () => {\r\n                        console.warn(\r\n                            C_Controller.E_MultipleRequestsBeforeResponse,\r\n                        );\r\n                    },\r\n                    () => {\r\n\r\n                        transmission.LastDynamicTime = transmission.Time;\r\n                        transmission.Time = 0;\r\n                        transmission.Static = true;\r\n\r\n                        return transmission;\r\n                    },\r\n                );\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns all channels that registered static service\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public static get_AllStaticChannels(): t_namespace[] {\r\n        return Controller._static_responders;\r\n    }\r\n\r\n    /**\r\n     * Returns all the static content that is currently archived\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public static get_AllStaticContent(): t_staticContentArchive {\r\n        return Controller._static_content_archive;\r\n    }\r\n\r\n    /**\r\n     * Clears the static content archive, forcing re-build\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public static flush_StaticContentArchive(): void {\r\n        Controller._static_content_archive = {};\r\n    }\r\n\r\n    /**\r\n     * Forces all services to remain dynamic despit what the service \r\n     * provider intends\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public static force_AllDynamicService(): void {\r\n        console.log(C_Controller.E_ForcedDynamic);\r\n        Controller._forced_dynamic_service = true;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tThese methods emit or listen to a certain channel but they do not expect \r\n *\tthe other side to take any kind of action.\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *   TALK\r\n *   \r\n *   These emit locally or globally\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param recipient_namespace the namespace that is the primary target for \r\n     * the announcement\r\n     * @param talk the talk resolution for the announcement\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public announce(\r\n        scope: t_scope,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false,\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.announce(\r\n                scope as t_singleScope,\r\n                this._controller_global_namespace,\r\n                recipient_namespace,\r\n                talk,\r\n                delay,\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tDOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns true if the specified channel is registered as a static \r\n     * responder\r\n     * \r\n     * @param channel\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private static is_StaticResponder(channel: t_channel): boolean {\r\n        return this._static_responders.indexOf(channel) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the entire list of announcements since app start\r\n     */\r\n    public get_AnnouncementArchive(scope: t_singleScope): object[] {\r\n        return this.get_Scopes(scope)[0].get_AnnouncementArchive();\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n *\t\r\n *\tThese listen globally or locally\r\n */\r\n\r\n    /**\r\n     * Listens during the run of the app, it may take internal action \r\n     * but the emitter talker will not be notified of this\r\n     * \r\n     * @param scope specifies local and/or global scope\r\n     * @param subcribed_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs that will be monitored\r\n     * @param callback: (t_transmission) => void action to take when there \r\n     * is chatter\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public subscribe(\r\n        scope: t_scope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void,\r\n    ): void {\r\n\r\n        this.get_Scopes(scope).forEach((active_scope: BaseController) => {\r\n            active_scope.subscribe(\r\n                scope as t_singleScope,\r\n                subcribed_namespace,\r\n                listen,\r\n                callback);\r\n        });\r\n    }\r\n     \r\n    /**\r\n     * \r\n     * Similar to subscribe, listens to a specific channel but does not \r\n     * respond to the source, Unlike subscribe, wait quits listening after \r\n     * a certain number of occurences of the channel, default = 1\r\n     * \r\n     * @param scope Local or global\r\n     * @oaram recipient_namespace t_namespace that will be monitored\r\n     * @param listen t_resolutionNoArgs used for monitoring\r\n     * @param test_callback callback for determining whether the channel \r\n     * signal meets the wait criteria\r\n     * @param action_callback: callback to execute if the test callbak \r\n     * returns true\r\n     * @param count number of times wait function will wait for the test \r\n     * callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public wait(\r\n        scope: t_singleScope,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => true,\r\n        action_callback: (transmission: t_transmission) => void = () => { },\r\n        count: number = 1,\r\n        current_count: number = count,\r\n    ): Promise<any> {\r\n        const wait_response = this.get_Scopes(scope)[0].wait(\r\n            scope,\r\n            this._controller_global_namespace,\r\n            recipient_namespace,\r\n            listen,\r\n            test_callback,\r\n            action_callback,\r\n            count,\r\n            current_count,\r\n        );\r\n\r\n        return wait_response;\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param scope defines local and/or global scope\r\n     * @param wait_set: instructions for the wait conditions\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public wait_Some(\r\n        scope: t_singleScope,\r\n        wait_set: t_waitSet[],\r\n    ): Promise<any> {\r\n        return this\r\n            .get_Scopes(scope)[0]\r\n            .wait_Some(\r\n                scope,\r\n                this._controller_global_namespace,\r\n                wait_set,\r\n            );\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tHANDLE\r\n *\t\r\n *\tGetters, Setters, Checkers and Manipulators\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE NAMESPACE\r\n *\t\r\n *\tMethods involved with getting and setting global and local namespaces \r\n *\tfor the instance\r\n */\r\n\r\n    /**\r\n     * Sets the namespace used for listening and emitting to local\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public set_LocalNamespace(local_namespace: t_namespace): this {\r\n        this._controller_local_namespace = local_namespace;\r\n        this.create_LocalNamespace(local_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the local namespace that the class emits and listens to\r\n     */\r\n    public get_LocalNamespace(): t_namespace {\r\n        return this._controller_local_namespace;\r\n    }\r\n\r\n    /**\r\n     * Gets the entire list of registered local namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public get_LocalNamespaces(): t_namespace[] {\r\n        return Object.keys(Controller._local_controllers);\r\n        // return Controller._namespaces;\r\n    }\r\n\r\n    /**\r\n     * Sets the global namespace for this instance\r\n     * \r\n     * @param global_namespace as t_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public set_GlobalNamespace(global_namespace: t_namespace): this {\r\n        this._controller_global_namespace = global_namespace;\r\n        this.add_Controller_ToGlobalNamespaces(global_namespace);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the namespace that the class is registered as\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public get_GlobalNamespace(): t_namespace {\r\n        return this._controller_global_namespace;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a local namespace with the given name\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private create_LocalNamespace(local_namespace: t_namespace): void {\r\n        Controller._local_controllers\r\n            .pave([local_namespace],\r\n                () => {\r\n                    // console.warn(`${local_namespace} already exists`)\r\n                },\r\n                () => {\r\n                    return new BaseController(e_Scope.Local);\r\n                },\r\n            );\r\n        // Controller._local_controllers[local_namespace] = \r\n    }\r\n\r\n    /**\r\n     * Deletes the local namespace\r\n     * \r\n     * @param local_namespace\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private destroy_LocalNamespace(local_namespace: t_namespace): void {\r\n        delete Controller._local_controllers[local_namespace];\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE GLOBAL NAMESPACES\r\n */\r\n\r\n    /**\r\n     * \r\n     * @param controller_namespace\r\n     */\r\n    private add_Controller_ToGlobalNamespaces(\r\n        global_namespace: t_namespace,\r\n    ): void {\r\n        Controller._global_namespaces.push(global_namespace);\r\n    }\r\n\r\n    /**\r\n     * Returns all the controller registered global namespaces\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public get_GlobalNamespaces(): t_namespace[] {\r\n        return Controller._global_namespaces;\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE SCOPE\r\n */\r\n\r\n    /**\r\n     * Returns an array of Basecontrollers for the given scope value\r\n     * \r\n     * @param scope: number that defines the scopes \r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    private get_Scopes(scope: t_scope | t_singleScope): BaseController[] {\r\n\r\n        const list: BaseController[] = [];\r\n\r\n        if (scope & 1) {\r\n            if (this._controller_local_namespace) {\r\n                list.push(\n                    Controller\n                        ._local_controllers[this._controller_local_namespace],\n                );\n            }\r\n        }\r\n\r\n        if (scope & 2) {\r\n            list.push(Controller._global_controller);\r\n        }\r\n\r\n        if (list.length < 1) {\r\n            throw new Error(C_Controller.E_NoScopeSelected);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Returns all currently defined local controllers\r\n     *\r\n     * @remarks\r\n     * Class: Controller\r\n     * Service: Controller\r\n     */\r\n    public static get_LocalControllerStack(): t_localControllerStack {\r\n        return Controller._local_controllers;\r\n    }\r\n}\r\n\r\n\r\n\r\n","!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=6)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(1),i=r(2),o=r(3),s=r(4),a=r(5),u=\"RI\";class c extends(n.Parent().with(i.M_Namespace,o.M_State)){constructor(e){return super(),this.set_GlobalNamespace(\"App/Common/Resolver/Resolution\"),this.initialize_State(),this.set_ResolutionInstruction(e),this}set_ResolutionInstruction(e){if(!c.is_ResolutionInstruction(e)){const t=JSON.stringify(e);throw new Error(`Illegal resolution Instruction:\\n${t}`)}this.get_State().set_Var(\"ResolutionInstruction\",e);const t=c.extract_ExpressionTrail_FromResolutionInstruction(e);this.set_ExpressionTrail(t);const r=c.extract_ArgumentPool_fromResolutionInstruction(e);return this.set_ArgumentPool(r),this}get_ResolutionInstruction(){return this.get_State().get_Var(\"ResolutionInstruction\")}static is_ResolutionInstruction(e){return e[0]===u&&e.length>1}static produce_UniqueInstructionCode(e){return JSON.stringify(e)}set_ExpressionTrail(e){if(\"\"===e)throw new Error(\"ExpressionTrail cannot be empty\");return this.get_State().set_Var(\"ExpressionTrail\",e),this.produce_set_ExpressionStack_FromExpressionTrail(e),this}get_ExpressionTrail(){return this.get_State().get_Var(\"ExpressionTrail\")}produce_set_ExpressionTrail_FromExpressionStack(e){const t=c.produce_ExpressionTrail_FromExpressionStack(e);this.set_ExpressionTrail(t)}static produce_ExpressionTrail_FromExpressionStack(e){return e.join(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ExpressionTrail_FromResolutionInstruction(e){return e[1]}set_ExpressionStack(e){return this.get_State().set_Var(\"ExpressionStack\",e),this}get_ExpressionStack(){return this.get_State().get_Var(\"ExpressionStack\")}produce_set_ExpressionStack_FromExpressionTrail(e){const t=c.produce_ExpressionStack_FromExpressionTrail(e);this.set_ExpressionStack(t)}static produce_ExpressionStack_FromExpressionTrail(e){return e.split(s.C_Resolver.EXPRESSION_SEPARATOR)}static extract_ArgumentPool_fromResolutionInstruction(e){return e.length>2?e.slice(2-e.length):[]}set_ArgumentPool(e){this.get_State().set_Var(\"ArgumentPool\",e)}get_ArgumentPool(){return this.get_State().get_Var(\"ArgumentPool\")}produce_ExecutionStepStack(e){let t=0,r=this.get_ExpressionStack(),n=this.get_ArgumentPool();e.hasOwnProperty(\"Last\")&&(r=[...r,...e.Last]),e.hasOwnProperty(\"First\")&&(t+=e.First.length,r=[...e.First,...r]),e.hasOwnProperty(\"During\")&&r.map((i,o)=>{const s=o+t;if(e.During[s]){const t=e.During[s],i=r.splice(o,1,t);n.splice(o,0,i)}});let i=0;return r.map(e=>{const t=c.extract_ExpressionType(e);if(t!==a.e_expressionType.Key){const r=n[i++]||[];return[t,c.extract_MethodName(e),r]}return[t,e]})}static extract_ExpressionType(e){return e.slice(0,4)===this.INSTANTIATION_INDICATOR?a.e_expressionType.Instantiate:e.slice(-2)===this.METHOD_INDICATOR?a.e_expressionType.Method:a.e_expressionType.Key}static extract_MethodName(e){return e.replace(this.INSTANTIATION_INDICATOR,\"\").replace(this.METHOD_INDICATOR,\"\")}produce_ResolutionDepth(){return this.get_ExpressionStack().length}}t.Resolution=c,c.METHOD_INDICATOR=\"()\",c.INSTANTIATION_INDICATOR=\"new \"},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);t.Parent=n.Parent},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parent=e=>new n(e);class n{constructor(e){this.extender_class=e||class{}}with(...e){return e.reduce((e,t)=>n.produce_ClassExpression(t)(e),this.extender_class)}static produce_ClassExpression(e){return t=>{const r=class extends t{};return Object.getOwnPropertyNames(e.prototype).forEach(t=>{r.prototype.hasOwnProperty(t)||Object.defineProperty(r.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t))}),r}}}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);t.M_Namespace=n.M_Namespace},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(2);t.M_Namespace=class{get_GlobalNamespace(){if(!this._global_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._global_namespace}get_GlobalNamespaceStack(){const e=this.get_GlobalNamespace();return this.produce_Stack(e)}set_GlobalNamespace(e){if(void 0!==this._global_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);return this.check_NamespaceInput(e),this._global_namespace=e,this}get_LocalNamespace(){if(!this._local_namespace)throw new Error(n.C_Namespace.E_CalledBeforeDeclaration);return this._local_namespace}get_LocalNamespaceStack(){const e=this.get_LocalNamespace();return this.produce_Stack(e)}set_LocalNamespace(e){if(this._local_namespace)throw new Error(n.C_Namespace.E_AlreadyDefined);this.check_NamespaceInput(e),this._local_namespace=e}has_LocalNamespace(){return void 0!==this._local_namespace&&null!==this._local_namespace}check_NamespaceInput(e){if(void 0===e||0===e.length)throw new Error(n.C_Namespace.E_NoEmpty)}produce_Stack(e){return e.split(n.C_Namespace.NamespaceSeparator)}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Namespace={E_AlreadyDefined:\"%1 Namespace already defined\",E_CalledBeforeDeclaration:\"%1 Namespace called before declaration\",E_NoEmpty:\"%1 Namespace declaration cannot be empty\",NamespaceSeparator:\"/\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=2)}([function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0}),r(5),r(6);const n=r(1),i=r(7);class o{constructor(e=\"Generic\",t=null){this._channel=e,this._id=t||Math.random().toString().slice(2),o._states.pave([this._channel,this._id],()=>{this.throw_OverloadError()},()=>({}))}get_Var(e){return o._states.sniff([this._channel,this._id],()=>{console.log(n.C_State.E_VarNotDefined.subs(this._channel,this._id))},t=>t.sniff(e,()=>{},e=>e))}set_Var(e,t){return o._states[this._channel][this._id].pave(e,()=>t,()=>t),this}copy_Var(e){const t=this.get_Var(e);return t?JSON.parse(JSON.stringify(t)):void 0}has_Var(e){return o._states[this._channel][this._id].sniff(e,()=>!1,()=>!0)}set_Vars(e){return Object.entries(e).forEach(([e,t])=>{this.set_Var(e,t)}),this}get_Vars(){return o._states[this._channel][this._id]}static get_AllStates(e=!0){if(e){let e={};return Object.entries(this._states).forEach(([t,r])=>{const n=Object.keys(r);n.length<2?e[t]=r[n[0]]:e[t]=r}),e}return o._states}get_Id(){return this._id}get_Channel(){return this._channel}set_Separators_FromGlobal(){e.hasOwnProperty(\"Separator\")?this.set_Separators(e.Separator):this.set_Separators({Directory:\"/\",Expression:\".\",Id:\"-\",Dialogue:\"?\",Monologue:\":\",Namespace:\"/\",Extension:\".\"})}set_Separators(e){o.SEPARATOR=e}remove_State(){delete o._states[this._channel][this._id],o._states[this._channel].is_empty()&&delete o._states[this._channel]}static remove_AllStates(){o._states={}}track_Variable(e,t,r=(()=>!0)){if(!o._tracking_enabled)return;const n=this.get_Channel(),i={Time:(new Date).getTime(),Channel:n,Namespace:n.split(\":\")[0].split(\"?\")[0],Id:this.get_Id(),Variable:e,Value:void 0===t?this.copy_Var(e):t};r(i)&&o._track_stack.push(i)}static track_Variable(e,t,r){if(!o._tracking_enabled)return;const n={Time:(new Date).getTime(),Channel:e,Namespace:e.split(\":\")[0].split(\"?\")[0],Id:\"-\",Variable:t,Value:r};o._track_stack.push(n)}static get_AllTrackRecords(){return o._tracking_enabled?o._track_stack:n.C_State.E_TrackingOff}static get_AllTrackedChannels(){return o._tracking_enabled?o._track_stack.map(e=>e.Channel).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_AllTrackedNamespaces(){return o._tracking_enabled?o._track_stack.map(e=>e.Namespace).filter((e,t,r)=>r.indexOf(e)===t):n.C_State.E_TrackingOff}static get_SomeTrackRecords(e,t=!0,r=i.e_filterMode.And){if(!o._tracking_enabled)return n.C_State.E_TrackingOff;let s=o._track_stack.filter(t=>{const n=e.sniff(\"Time\",()=>!0,([e,r])=>(void 0===e||t.Time>=e)&&(void 0===r||t.Time<=r)),o=e.sniff(\"Channels\",()=>!0,e=>void 0!==e.find(e=>t.Channel===e)||0===e.length),s=e.sniff(\"Namespaces\",()=>!0,e=>void 0!==e.find(e=>t.Namespace===e)||0===e.length);return[n,o,e.sniff(\"Variables\",()=>!0,e=>void 0!==e.find(e=>t.Variable===e)||0===e.length),e.sniff(\"Call\",()=>!0,e=>e(t)),s].reduce((e,t)=>{switch(e=void 0===e||e,r){case i.e_filterMode.And:return e&&t;case i.e_filterMode.Or:return e||t}})});return t&&(s=s.map(e=>(delete e.Channel,delete e.Time,delete e.Id,e))),s}set_OptionalProperties(e,t){return e.forEach(e=>{this.assign_Property(e,t)}),this}set_RequiredProperties(e,t){return e.forEach(e=>{if(!this.assign_Property(e,t))throw new Error(n.C_State.E_PropertyRequired.subs(e))}),this}assign_Property(e,t){let r=e.split(o.SEPARATOR.Expression).slice(-1)[0];return t.sniff(r,()=>!1,()=>(this.set_Var(e,t[r]),!0))}set_OptionalClasses(e,t){return Object.keys(e).forEach(r=>{this.assign_Class(e,r,t)}),this}set_RequiredClasses(e,t){return Object.keys(e).forEach(r=>{if(!this.assign_Class(e,r,t))throw new Error(n.C_State.E_PropertyRequired.subs(r))}),this}throw_OverloadError(e=[\"empty\"]){throw new Error(n.C_State.E_ChOverload.subs(this._channel,this._id,JSON.stringify(e)))}assign_Class(e,t,r){let n=t.split(o.SEPARATOR.Expression),i=n.slice(-1)[0];if(r.hasOwnProperty(i)){const o=Array.isArray(r[i])?r[i]:[r[i]];return this.get_Vars().pave(n,()=>{this.throw_OverloadError(n)},()=>o.map(r=>new e[t](r))),!0}return!1}}t.State=o,o._states={},o._track_stack=[],o._tracking_enabled=!0}).call(this,r(4))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_State={E_VarNotDefined:\"Instance %0/%1 is not defined\",E_TrackingOff:\"Tracking Disabled\",E_PropertyRequired:\"Property '%0' is required\",E_ChOverload:\"Channel overload occured at: %0.%1\\n%2\",E_AlreadyDefined:\"State already defined\",E_CalledBeforeDeclaration:\"State called before declaration\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3);t.M_State=n.M_State;var i=r(0);t.State=i.State},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(0),i=r(1);t.M_State=class{initialize_State(e){if(void 0!==this._state)throw new Error(i.C_State.E_AlreadyDefined);const t=this.get_GlobalNamespace();return this._state=new n.State(t),void 0!==e&&this._state.set_Vars(e),this}get_State(){if(!(this._state instanceof n.State))throw new Error(i.C_State.E_CalledBeforeDeclaration);return this._state}remove_State(){this._state.remove_State()}}},function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var i=this,o=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);o<s.length;o++){var a=s[o];if(void 0===i[a])return t(i);i=i[a]}return r(i)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var i=Array.isArray(e)?e:e.split(n.Separator.Expression),o=i.pop(),s=this,a=function(e){if(void 0===e[o])return e[o]=r()||{},!0;var n=t();return n&&(e[o]=n),!1};if(!(i.length>0))return a(s);s.sniff(i,(function(){for(var e=0,t=i;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),String.prototype.toProperCase=function(){return this.replace(/\\w\\S*/g,e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase())},String.prototype.minify=function(){return this.replace(/\\s/g,\"\")},String.prototype.chop=function(e=50){const t=new RegExp(`.{1,${e}}`,\"g\");return this.match(t)||[]},String.prototype.subs=function(...e){return e.reduce((e,t,r)=>e.replace(`%${r}`,t),this)}}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.And=0]=\"And\",e[e.Or=1]=\"Or\"}(t.e_filterMode||(t.e_filterMode={}))}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.C_Resolver={RulesVarName:\"RESOLUTION_RULES\",E_NonPotentAttempt:\"Attempt to enable string that isn't a disabled passage\",E_NonStringType:\"Non-string type given to enable_Passage\",E_DoesNotCarry:\"Base does not carry expression '%1'\\n\",E_DepthInconsistent:\"MinDepth cannot be larger than MaxDepth\",E_TooDeep:\"Resolution is deeper than the max allowed depth\",E_TooShallow:\"Resolution is shallower than the min allowed depth\",E_MinTrailDepthLimit:\"min trail depth cannot be smaller than 1\",DISABLED_PHRASE:\"<<DISABLED>>\",EXPRESSION_SEPARATOR:\".\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.Instantiate=0]=\"Instantiate\",e[e.Method=1]=\"Method\",e[e.Key=2]=\"Key\"}(t.e_expressionType||(t.e_expressionType={})),function(e){e[e.Null=0]=\"Null\",e[e.Object=1]=\"Object\",e[e.Array=2]=\"Array\",e[e.Other=3]=\"Other\",e[e.Undefined=4]=\"Undefined\",e[e.VariableType=5]=\"VariableType\",e[e.Resolution=6]=\"Resolution\",e[e.ResolutionInstruction=7]=\"ResolutionInstruction\"}(t.e_typeDefinition||(t.e_typeDefinition={}))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.Resolution=n.Resolution;var i=r(7);t.Resolver=i.Resolver},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),r(8);const n=r(3),i=r(2),o=r(1),s=r(0),a=r(4),u=r(5),c=\"RI\";class l extends(o.Parent().with(n.M_State,i.M_Namespace)){constructor(e){super(),this.set_GlobalNamespace(e).initialize_State({MinTrailDepth:1,MaxTrailDepth:100,Recursion:!1})}get_EntryPoint(){return this.get_State().get_Var(\"EntryPoint\")}set_ExpressionTrail(e){const t=[c,e];return this.set_Resolution(new s.Resolution(t)),this}set_ExpressionStack(e){const t=[c,s.Resolution.produce_ExpressionTrail_FromExpressionStack(e)];return this.set_Resolution(new s.Resolution(t)),this}set_ResolutionInstruction(e){return this.set_Resolution(new s.Resolution(e)),this}set_Resolution(e){return this.set_Passage(e),this}remove_Resolution(){}set_Passage(e){return this.get_State().set_Var(\"EntryPoint\",e),this}static disable_Passage(e){return a.C_Resolver.DISABLED_PHRASE+JSON.stringify(e)}static enable_Passage(e){const t=a.C_Resolver.DISABLED_PHRASE;if(this.is_DisabledPassage(e))return JSON.parse(e.slice(t.length));throw new Error(a.C_Resolver.E_NonStringType+\"\\n\"+JSON.stringify(e))}static is_DisabledPassage(e){const t=a.C_Resolver.DISABLED_PHRASE;return\"string\"==typeof e&&e.slice(0,t.length)===t}set_Sources(e){return this.get_State().set_Var(\"Sources\",e),this}get_Sources(){return this.get_State().get_Var(\"Sources\")}set_MaxResolutionDepth(e){return this.get_State().set_Var(\"MaxTrailDepth\",e),this}get_MaxResolutionDepth(){return this.get_State().get_Var(\"MaxTrailDepth\")}set_MinResolutionDepth(e){if(e<1)throw new Error(a.C_Resolver.E_MinTrailDepthLimit);return this.get_State().set_Var(\"MinTrailDepth\",e),this}get_MinResolutionDepth(){return this.get_State().get_Var(\"MinTrailDepth\")}check_ResolutionDepth(e){const t=this.get_MaxResolutionDepth(),r=this.get_MinResolutionDepth();let n=[];if(r>t&&n.push(a.C_Resolver.E_DepthInconsistent),e.produce_ResolutionDepth()>=t&&n.push(a.C_Resolver.E_TooDeep),e.produce_ResolutionDepth()<r&&n.push(a.C_Resolver.E_TooShallow),0!==n.length)throw new Error(n.join(\"\\n\")+JSON.stringify(e))}set_Recursion(e){return this.get_State().set_Var(\"Recursion\",e),this}get_Recursion(){return this.get_State().get_Var(\"Recursion\")}produce_Resolute(){const e=this.get_EntryPoint(),t=this.build_Items(e);return this.remove_State(),t}build_Items(e){switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:e=new s.Resolution(e);case u.e_typeDefinition.Resolution:return this.build_Resolution(e);case u.e_typeDefinition.Array:return this.build_Array(e);case u.e_typeDefinition.Object:return this.build_Object(e);default:return e}}build_Array(e){if(e.length>0){const t=e.map(e=>this.build_Items(e));return l.concatenate_Items(t)}}build_Object(e){let t={};return\"function\"==typeof e||\"Promise\"===e.constructor.name?t=e:Object.entries(e).forEach(([e,r])=>{switch(l.check_ItemType(r)){case u.e_typeDefinition.ResolutionInstruction:const n=new s.Resolution(r);t[e]=this.build_Resolution(n);break;case u.e_typeDefinition.Array:t[e]=this.build_Array(r);break;case u.e_typeDefinition.Object:t[e]=this.build_Object(r);break;default:t[e]=r}}),t}build_Resolution(e){this.check_ResolutionDepth(e);let t=this.get_Sources();const r=this.retrieve_ResolutionRules(e),n=e.produce_ExecutionStepStack(r);return n.forEach(e=>{const r=e[1],i=e[0];if(this.check_ExpressionAvailability(t,r,n),i===u.e_expressionType.Key)t=t[r];else{const n=this.build_Arguments(e[2]);t=i===u.e_expressionType.Instantiate?new t[r](...n):t[r](...n)}}),this.build_Items(t)}check_ExpressionAvailability(e,t,r){void 0===e[t]&&console.warn(a.C_Resolver.DoesNotCarry.replace(\"%1\",t),r)}build_Arguments(e){return void 0!==e?e.map(e=>{switch(l.check_ItemType(e)){case u.e_typeDefinition.ResolutionInstruction:const t=new s.Resolution(e);return this.build_Resolution(t);case u.e_typeDefinition.Object:return this.build_Object(e);case u.e_typeDefinition.Array:return this.build_Array(e);default:return e}}):[]}static check_ItemType(e){return null===e?u.e_typeDefinition.Null:void 0===e?u.e_typeDefinition.Undefined:e instanceof s.Resolution?u.e_typeDefinition.Resolution:s.Resolution.is_ResolutionInstruction(e)?u.e_typeDefinition.ResolutionInstruction:Array.isArray(e)?u.e_typeDefinition.Array:e.is_Object()?u.e_typeDefinition.Object:u.e_typeDefinition.Other}static retrieve_ItemTypeArray(e){const t=l.check_ItemType(e[0]);return e.every(e=>t===l.check_ItemType(e))?t:u.e_typeDefinition.VariableType}static concatenate_Items(e){let t={};switch(l.retrieve_ItemTypeArray(e)){case u.e_typeDefinition.Object:t=l.concatenate_Objects(e);break;case u.e_typeDefinition.Array:break;default:t=e}return t}static concatenate_Objects(e){let t={};return e.reduce((e,r)=>(Object.keys(r).forEach(n=>{let i=r[n],o=e.sniff(n);switch(l.check_ItemType(i)){case u.e_typeDefinition.Array:t[n]=[...o?e[n]:[],...i];break;case u.e_typeDefinition.Object:t[n]=o?l.concatenate_Items([e[n],i]):i;break;default:t[n]=o?e[n]+i:i}}),t))}retrieve_ResolutionRules(e){const t=this.get_Sources(),r=e.get_ExpressionStack()[0],n=a.C_Resolver.RulesVarName;return t.sniff([s.Resolution.extract_MethodName(r),n],()=>({}),e=>e)}}t.Resolver=l},function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(1);Object.prototype.sniff=function(e,t,r){void 0===t&&(t=function(){return!1}),void 0===r&&(r=function(){return!0});for(var i=this,o=0,s=Array.isArray(e)?e:e.split(n.Separator.Expression);o<s.length;o++){var a=s[o];if(void 0===i[a])return t(i);i=i[a]}return r(i)},Object.prototype.pave=function(e,t,r){void 0===t&&(t=function(){return Object}),void 0===r&&(r=function(){return Object});var i=Array.isArray(e)?e:e.split(n.Separator.Expression),o=i.pop(),s=this,a=function(e){if(void 0===e[o])return e[o]=r()||{},!0;var n=t();return n&&(e[o]=n),!1};if(!(i.length>0))return a(s);s.sniff(i,(function(){for(var e=0,t=i;e<t.length;e++){var r=t[e];s[r]=s[r]?s[r]:{},s=s[r]}return a(s)}),(function(e){return a(e)}))},Object.prototype.is_empty=function(){for(var e in this)if(this.hasOwnProperty(e))return!1;return!0},Object.prototype.is_Object=function(){return this===Object(this)},Object.prototype.has_Function=function(e){return\"function\"==typeof this[e]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Separator={Expression:\".\"}}]))}]));\r\n//# sourceMappingURL=index.js.map","import { i_map } from \"./t_controller\";\r\n\r\n/**\r\n * Handles getting and setting of separator strings\r\n */\r\nexport abstract class SeparatorHandler {\r\n\r\n    protected static _SEPARATOR: i_map<string>;\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tINSTANTIATION\r\n *\r\n * ============================================================================\r\n */\r\n    /**\r\n     * Handles setting and getting of separator strings\r\n     */\r\n    constructor() {\r\n        this.set_Separators_FromGlobal();\r\n    }\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tHANDLE SEPARATORS\r\n */\r\n\r\n    /**\r\n     * Imports separators if they are available globally\r\n     */\r\n    protected set_Separators_FromGlobal(): void {\r\n        if (global.hasOwnProperty(\"Separator\")) {\r\n            this.set_Separators(\r\n                // @ts-ignore\r\n                global.Separator,\r\n            );\r\n        } else {\r\n            this.set_Separators({\r\n                Directory: \"/\",\r\n                Expression: \".\",\r\n                Id: \"-\",\r\n                Dialogue: \"?\",\r\n                Monologue: \":\",\r\n                Namespace: \"/\",\r\n                Extension: \".\",\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets internal separators for Controller class\r\n     * \r\n     * @param separators\r\n     */\r\n    protected set_Separators(separators: i_map<string>): void {\r\n        SeparatorHandler._SEPARATOR = separators;\r\n    }\r\n\r\n    /**\r\n     * Returns the separator string for the specified name\r\n     * \r\n     * @param separator_name\r\n     */\r\n    protected get_Separator(separator_name: string): string {\r\n        return SeparatorHandler._SEPARATOR[separator_name];\r\n    }\r\n}\r\n","/// <reference path=\"../Controller/controller.ts\" />\r\n/*\r\n *\tDEPENDENCIES\r\n */\r\nimport { M_Namespace } from \"@utkusarioglu/namespace\";\r\n\r\n/*\r\n *\tLOCALS\r\n */\r\nimport { Controller } from \"../Controller/controller\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"../Common/c_controller\";\r\n\r\n/**\r\n * Provides autocorrect for M_Controller\r\n * \r\n * @remarks\r\n * Class: M_Controller\r\n * Service: Controller\r\n */\r\nexport interface M_Controller extends M_Namespace {}\r\n\r\n\r\n\r\n/**\r\n * Provides Controller functionality\r\n * \r\n * @requires M_Namespace\r\n * \r\n * @remarks\r\n * Service: Controller\r\n */\r\nexport abstract class M_Controller {\r\n\r\n    private _controller!: Controller;\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n    /**\r\n     * Sets or overwrites the controller for the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Controller\r\n     * Service: Controller\r\n     */\r\n    protected set_Controller(): void {\r\n\r\n        if (this._controller) {\r\n            throw new Error(C_Controller.E_AlreadyDefined);\r\n        }\r\n\r\n        this._controller = new Controller(this.get_GlobalNamespace());\r\n\r\n        if (this.has_LocalNamespace()) {\r\n            this._controller.set_LocalNamespace(this.get_LocalNamespace());\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns the controller for the class\r\n     *\r\n     * @remarks\r\n     * Class: M_Controller\r\n     * Service: Controller\r\n     */\r\n    protected get_Controller(): Controller {\r\n\r\n        if (!(this._controller instanceof Controller)) {\r\n            throw new Error(C_Controller.E_CalledBeforeDeclaration);\r\n        }\r\n\r\n        return this._controller;\r\n    }\r\n\r\n}\r\n","/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tEXPORTS\r\n *\r\n * ============================================================================\r\n */\r\n\r\nexport { Controller } from \"./Controller/controller\";\r\nexport { M_Controller } from \"./Mixins/m_controller\";\r\nexport { M_ControllerEvents } from \"./Mixins/m_controller_events\";\r\n\r\nexport {\r\n    C_Controller,\r\n    C_StartupTalk,\r\n    C_BootState,\r\n} from \"./Common/c_controller\";\r\n\r\nexport {\r\n    e_Scope,\r\n    t_transmission,\r\n    t_subscription,\r\n    t_sequenceStep,\r\n    t_dependency_group,\r\n    t_service,\r\n    t_reception,\r\n    t_channel,\r\n    t_waitSet,\r\n} from \"./Common/t_controller\";\r\n","\r\n/*\r\n *\tCOMMON CLASSES\r\n */ \r\nimport { EventEmitter } from \"events\";\r\nimport { Resolution } from \"@utkusarioglu/resolver\";\r\nimport { SeparatorHandler } from \"../Common/separator_handler\";\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport { C_Controller } from \"../Common/c_controller\";\r\n\r\n/*\r\n *\tDATATYPES\r\n */\r\nimport {\r\n    t_serviceId,\r\n    t_waitSet,\r\n    t_transmission,\r\n    e_ServiceGroup,\r\n    e_Scope,\r\n    t_singleScope,\r\n    t_channel,\r\n    t_epoch,\r\n} from \"../Common/t_controller\";\r\nimport {\r\n    t_resolutionInstruction,\r\n    t_resolutionInstructionNoArgs,\r\n    t_expressionTrail,\r\n} from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\n\r\n\r\n\r\n/**\r\n * Extends event emitter to include specific send and receive functions for \r\n * a single scope. Controller class introduces local and global scopes using \r\n * this class\r\n * \r\n * @remarks\r\n * Service: Controller\r\n */\r\nexport class BaseController extends SeparatorHandler {\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\r\n * ============================================================================\r\n */\r\n\r\n    /** \r\n     *  Event emitter for talk and listen use cases\r\n     */\r\n    private _monologue_emitter = new EventEmitter().setMaxListeners(20); // this increase may have some speed cost\r\n\r\n    /**\r\n     *  Event emitter for services\r\n     */\r\n    private _dialogue_emitter = new EventEmitter().setMaxListeners(20); // this increase may have some speed cost;\r\n\r\n    /**\r\n     *  Stores runtime announcements\r\n     */\r\n    private _announcement_archive: object[] = [];\r\n\r\n    /**\r\n     *  Stores runtime requests and responds\r\n     */\r\n    private _dialogue_archive: object[] = [];\r\n\r\n    /**\r\n     * Scope that the basecontroller is currently working on\r\n     */\r\n    private _controller_scope: t_singleScope; // BaseController doesn't use this, but it's useful for debuging\r\n\r\n/*\r\n *\tThese will be used in future feature expansions\r\n */\r\n    // private static _static_reserve = {};\r\n    // private _open_requests: object[] = [];\r\n    // private _open_annuncements: object[] = [];\r\n    // private _open_subscriptions: object[] = [];\r\n    // private _open_waits: object[] = [];\r\n    // private _open_wait_dependencies: object[] = [];\r\n\r\n    /**\r\n     * Extends event emitter to include specific send and receive functions \r\n     * for a single scope. Controller class introduces local and global scopes \r\n     * using this class\r\n     * \r\n     * @param controller_scope\r\n     * \r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    constructor(controller_scope: t_singleScope) {\r\n        super();\r\n        this._controller_scope = controller_scope;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDIALOGUE\r\n *\t\r\n *\t2 way data transfer between nodes\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tREQUEST\r\n */\r\n\r\n    /**\r\n     * Requests data from the given channel\r\n     * \r\n     * @remarks \r\n     * this method is a part of the Controller subsystem.\r\n     * Works in tandem with  {@link BaseController.(serve:instance)}\r\n     * \r\n     * \r\n     * @param sender_namespace namespace of the requesting class\r\n     * @param recipient_namespace namespace that is intended to receive the \r\n     * request\r\n     * @param talk the resolution that the responder will process\r\n     * @param group defines the set of methods that will be used for the service\r\n     * \r\n     * @returns Requested data inside the transmission wrapper object as \r\n     * Promise<t_transmission>\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public request(\r\n        scope: e_Scope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        group: e_ServiceGroup,\r\n    ): Promise<any> {\r\n\r\n        const service_id: t_serviceId = BaseController.create_RandomServiceId();\r\n        const request_channel: t_channel = recipient_namespace +\r\n            this.get_Separator(\"Dialogue\") +\r\n            group;\r\n        const response_channel: t_channel = request_channel +\r\n            this.get_Separator(\"Id\") +\r\n            service_id;\r\n        const request_packet: t_transmission = {\r\n            Channel: response_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Id: service_id,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._dialogue_emitter\r\n                .once((response_channel), (response_packet: t_transmission) => {\r\n\r\n                response_packet.sniff(\"Error\",\r\n                    resolve.bind(null, response_packet),\r\n                    reject.bind(null, response_packet),\r\n                );\r\n\r\n                this.archive_Dialogue(request_packet, response_packet);\r\n            });\r\n\r\n            this._dialogue_emitter.emit(\r\n                request_channel,\r\n                request_packet as t_transmission,\r\n            );\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tRESPOND\r\n */\r\n\r\n    /**\r\n     * Responds to controller requests\r\n     * {@link A_Controller} class introduces include_Services method for \r\n     * registering responses\r\n     *\r\n     * @param responder_namespace\r\n     * @param listen the resolution that the respond method will be \r\n     * listening to\r\n     * @param requester_namespace the namespace that is intended to receive \r\n     * the message\r\n     * @param response the callback function that will create the response \r\n     * for the request\r\n     * @param is_static if true, the created response will be saved for the \r\n     * controller for\r\n     * speedy re-response in future requests, if false, the response callback \r\n     * will be called\r\n     * everytime the same request is made\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public respond(\r\n        responder_namespace: t_namespace,\r\n        response_callback: (transmission: t_transmission) => Promise<any>,\r\n        group: e_ServiceGroup,\r\n        scope: e_Scope,\r\n    ): void {\r\n\r\n        const listen_channel: t_channel =\r\n            responder_namespace +\r\n            this.get_Separator(\"Dialogue\") +\r\n            group;\r\n\r\n        this._dialogue_emitter.on(listen_channel,\r\n            (transmission: t_transmission) => {\r\n\r\n                response_callback(transmission)\r\n                    .then((requested_return_content: any) => { \r\n\r\n                        const serve_packet: t_transmission = {\r\n                            Sender: transmission.Recipient,\r\n                            Recipient: transmission.Sender,\r\n                            Talk: transmission.Talk,\r\n                            Content: requested_return_content,\r\n                            Time: (new Date()).getTime(),\r\n                            Static: false,\r\n                            Scope: scope,\r\n                        };\r\n\r\n                        this._dialogue_emitter\r\n                            .emit(\r\n                                transmission.Channel as t_channel,\r\n                                serve_packet,\r\n                            );\r\n\r\n                    }) // then\r\n                    .catch((error) => {\r\n                        console.log(\"serve error:\", error);\r\n                    });\r\n\r\n            }); // dialogue emitter\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for DIALOGUE\r\n */\r\n\r\n    /**\r\n     * Archives the given dialogue data\r\n     * \r\n     * @param request_packet\r\n     * @param response_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Dialogue(\r\n        request_packet: t_transmission,\r\n        response_packet: t_transmission,\r\n    ): void {\r\n\r\n        this._dialogue_archive.push({\r\n            Meta: {\r\n                Elapsed: (new Date()).getTime() - request_packet.Time,\r\n                State: response_packet.hasOwnProperty(\"Error\")\r\n                    ? \"Fail\"\r\n                    : \"Success\",\r\n            },\r\n            Request: request_packet,\r\n            Response: response_packet,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates a random service Id for the service channel to be unique\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private static create_RandomServiceId(): t_serviceId {\r\n        return Math.random().toString().slice(2);\r\n    }\r\n\r\n    /**\r\n     * Returns the entire history of dialogues since the App run\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public get_DialogueArchive() {\r\n        return this._dialogue_archive;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Returns all the channels that are being served\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public publicget_ServedChannels() {\r\n        return this._dialogue_emitter.eventNames();\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tMONOLOGUE\r\n *\t\r\n *\tTransmission during which the emitter or listener do not acknowledge \r\n *\teach other\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tTALK\r\n */\r\n\r\n    /**\r\n     * Declares to a channel and doesnt expect a response\r\n     * \r\n     * @param sender_namespace namespace of the class that is making the \r\n     * announcement\r\n     * @param recipient_namespace namespace that is the main subject of the \r\n     * announcement\r\n     * @param talk the content us being transmitted\r\n     * @param scope Scope of the message. Scope does not have any part in \r\n     * emittance, \r\n     * it's required for archiving\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public announce(\r\n        scope: t_singleScope,\r\n        sender_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        talk: t_resolutionInstruction,\r\n        delay: boolean | t_epoch = false,\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(talk);\r\n\r\n        const announcement_channel: string = recipient_namespace +\r\n            this.get_Separator(\"Monologue\") +\r\n            expression_trail;\r\n\r\n        const announcement_packet: t_transmission = {\r\n            Channel: announcement_channel,\r\n            Sender: sender_namespace,\r\n            Recipient: recipient_namespace,\r\n            Talk: talk,\r\n            Time: (new Date()).getTime(),\r\n            Static: false,\r\n            Scope: scope,\r\n        };\r\n\r\n        const do_announcement = () => {\r\n\r\n            this._monologue_emitter.emit(\r\n                announcement_channel,\r\n                announcement_packet,\r\n            );\r\n\r\n            this.archive_Announcement(\r\n                sender_namespace,\r\n                announcement_channel,\r\n                announcement_packet,\r\n            );\r\n        };\r\n\r\n        if (delay) {\r\n\r\n            if (delay === true) {\r\n                delay = C_Controller.GraceTime as unknown as t_epoch;\r\n            }\r\n\r\n            setTimeout(do_announcement, delay as t_epoch);\r\n\r\n        } else {\r\n            do_announcement();\r\n        }\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *   DOCUMENT and REPORT for TALK\r\n */\r\n\r\n    /**\r\n     * Returns entire announcement archive since the start of the app\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public get_AnnouncementArchive(): object[] {\r\n        return this._announcement_archive;\r\n    }\r\n\r\n    /**\r\n     * Archives the given announcement data\r\n     * \r\n     * @param sender_namespace\r\n     * @param announcement_channel\r\n     * @param announcement_packet\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    private archive_Announcement(\r\n        sender_namespace: t_namespace,\r\n        announcement_channel: t_channel,\r\n        announcement_packet: any = null,\r\n    ): void {\r\n\r\n        this._announcement_archive.push({\r\n            Namespace: sender_namespace,\r\n            Channel: announcement_channel,\r\n            Content: announcement_packet,\r\n            Time: (new Date()).getTime(),\r\n        });\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tLISTEN\r\n */\r\n\r\n    /**\r\n     * Listens to the specified channel. The talkers are not notified of who's \r\n     * listening\r\n     * \r\n     * @param sender_namespace: namespace of the class that is listening\r\n     * @param subcribed_namespace the target that is being subscribed to\r\n     * @param listen  resolution that will be listened for\r\n     * @param callback: function that will be executed when there is a new \r\n     * signal at the \r\n     * specified channel\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public subscribe(\r\n        scope: t_singleScope,\r\n        subcribed_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        callback: (transmission: t_transmission) => void,\r\n    ): void {\r\n\r\n        const expression_trail: t_expressionTrail =\r\n            Resolution.extract_ExpressionTrail_FromResolutionInstruction(listen);\r\n\r\n        const channel: t_channel = subcribed_namespace +\r\n            this.get_Separator(\"Monologue\") +\r\n            expression_trail;\r\n\r\n        this._monologue_emitter.on(\r\n            channel,\r\n            callback as (transmission: t_transmission) => void,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * \r\n     *  Similar to subscribe, listens to a specific channel but does not respond\r\n     *  to the source, Unlike subscribe, wait quits listening after a certain \r\n     *  number of occurences of the  channel, default = 1 also, wait has the \r\n     *  built in capacity to check whether the received emit meets the expected \r\n     *  criteria through the test callback\r\n     *\r\n     * @param waiter_namespace namespace of the class that is waiting\r\n     * @param recipient_namespace namespace that is being awaited \r\n     * @param listen method or announcement to listen to\r\n     * @param test_callback callback for determining whether the channel signal \r\n     * meets \r\n     * the wait criteria\r\n     * @param action_callback callback to execute if the test callbak returns true\r\n     * @param total_count number of times wait function will wait for the test \r\n     * callback to return true\r\n     * @param current_count current iteration count of the wait\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public wait(\r\n        scope: t_singleScope,\r\n        waiter_namespace: t_namespace,\r\n        recipient_namespace: t_namespace,\r\n        listen: t_resolutionInstructionNoArgs,\r\n        test_callback: (transmission: t_transmission) => boolean = () => true ,\r\n        action_callback: (transmission: t_transmission) => any =\r\n            (transmission) => transmission,\r\n        total_count: number = 1,\r\n        current_count: number = total_count,\r\n    ): Promise<any> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const once_callback_function = (transmission: t_transmission) => {\r\n\r\n                if (test_callback(transmission)) {\r\n                    current_count--;\r\n                    resolve(action_callback(transmission));\r\n                } else {\r\n\r\n                    const new_promise = this.wait(\r\n                            scope,\r\n                            waiter_namespace,\r\n                            recipient_namespace,\r\n                            listen,\r\n                            test_callback,\r\n                            action_callback,\r\n                            total_count,\r\n                            current_count,\r\n                        );\r\n\r\n                    resolve(new_promise);\r\n                }\r\n            }; \r\n\r\n            if (current_count > 0) {\r\n\r\n                const expression_trail: t_expressionTrail =\r\n                    Resolution.extract_ExpressionTrail_FromResolutionInstruction(\r\n                        listen,\r\n                    );\r\n\r\n                const channel: t_channel = recipient_namespace +\r\n                    this.get_Separator(\"Monologue\") +\r\n                    expression_trail;\r\n\r\n                return this._monologue_emitter.once(\r\n                    channel,\r\n                    once_callback_function,\r\n                );\r\n            }\r\n\r\n        }) // return new promise\r\n            .catch((error_content: any) => {\r\n                console.error(\r\n                    \"BaseController.wait.Promise.catch:\\n\", error_content,\r\n                );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Waits multiple conditions and returns promise when all of them are met\r\n     * \r\n     * @param waiter_namespace: namespace of the class that is waiting\r\n     * @param wait_set: set of wait conditions to be met\r\n     *\r\n     * @remarks\r\n     * Class: Basecontroller\r\n     * Service: Controller\r\n     */\r\n    public wait_Some(\r\n        scope: t_singleScope,\r\n        waiter_namespace: t_namespace,\r\n        wait_set: t_waitSet[],\r\n    ): Promise<t_transmission[]> {\r\n        return Promise.all(wait_set.map((wait_event: t_waitSet) => {\r\n            return this.wait(\r\n                scope,\r\n                waiter_namespace,\r\n                wait_event.Namespace,\r\n                wait_event.Listen,\r\n                wait_event.Test,\r\n                wait_event.Call,\r\n            );\r\n        }));\r\n    }\r\n}\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\r\n/* ////////////////////////////////////////////////////////////////////////////\r\n *\r\n *\tIMPORTS\r\n *\r\n * ///////////////////////////////////////////////////////////////////////// */\r\n\r\n/*\r\n *\tDEPENDENCIES\r\n */\r\nimport { M_State } from \"@utkusarioglu/state\";\nimport { M_Namespace } from \"@utkusarioglu/namespace\";\r\n\r\n/*\r\n *\tLOCALS\r\n */\r\nimport { M_Controller } from \"./m_controller\";\r\n\r\n/*\r\n *\tCONSTANTS\r\n */\r\nimport {\r\n    C_Controller,\r\n    C_BootState,\r\n    C_StartupTalk,\r\n} from \"../Common/c_controller\";\r\n\r\n/*\r\n *\tDATA TYPES\r\n */\r\nimport {\r\n    t_subscription,\r\n    t_reception,\r\n    t_dependency_group,\r\n    t_service,\r\n    t_announcement,\r\n    e_Scope,\r\n    e_ServiceGroup,\r\n    t_transmission,\r\n    t_singleScope,\r\n    t_sequenceStep,\r\n} from \"../Common/t_controller\";\r\nimport {\r\n    t_resolutionInstructionNoArgs,\r\n    t_resolutionInstruction,\r\n} from \"@utkusarioglu/resolver\";\r\nimport { t_namespace } from \"@utkusarioglu/namespace\";\r\nimport { t_epoch } from \"@utkusarioglu/state/t_state\";\r\n\r\n\r\n\r\n/* ////////////////////////////////////////////////////////////////////////////\r\n *\r\n *\tEXPORTS\r\n *\r\n * ///////////////////////////////////////////////////////////////////////// */\r\n\r\n/**\r\n * Provides autocorrect for the class\r\n * \r\n * @requires M_Controller\r\n *\r\n * @remarks\r\n * Class: M_ControllerEvents\r\n * Service: Controller\r\n */\r\nexport interface M_ControllerEvents extends\r\n    M_Controller,\r\n    M_State,\r\n    M_Namespace { }\r\n\r\n\r\n\r\n/**\r\n * Introduces methods for registering subscriptions, dependencies, \r\n * announcements, and services for the extending class Handles the order of \r\n * operations for the controller  to run smoothly\r\n * The associated controller needs to be run by the child class \r\n * Global (and if needed, Local) namespaces need to be set before the \r\n * initializer is run Needs @link State function to be defined in the \r\n * parent to determine the local namespace\r\n * \r\n * @remarks\r\n * Service: Controller\r\n */\r\nexport abstract class M_ControllerEvents extends M_Controller {\r\n\r\n/*\r\n *\tLOGS\r\n */\r\n    private _subscriptions!: Array<t_subscription>;\r\n    private _announcements!: Array<t_announcement>;\r\n    private _receptions!: Array<t_reception>; // this isn't emitted, it's only for archiving\r\n    private _dependencies!: Array<t_dependency_group>;\r\n    private _services!: Array<t_service>;\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tDECLARATION\r\n *\t\r\n *\tDeclaration of controls by the instantiating class\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tINCLUDE CONTROLS\r\n */\r\n\r\n    /**\r\n     * Includes the given array items among the subscriptions for the set local \r\n     * or global namespace\r\n     * \r\n     * @param subscription_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    public include_Subscriptions(\r\n        subscription_list: Array<t_subscription>,\r\n    ): this {\r\n\r\n        if (!this._subscriptions) {\r\n            this._subscriptions = [];\r\n        }\r\n\r\n        this._subscriptions.push(...subscription_list);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among the dependencies for the set local \r\n     * or global namespace\r\n     * \r\n     * @param dependencies_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    public include_Dependencies(\r\n        dependencies_list: t_dependency_group[],\r\n    ): this {\r\n\r\n        if (!this._dependencies) {\r\n            this._dependencies = [];\r\n        }\r\n\r\n        this._dependencies.push(...dependencies_list);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among announcement and subscriptions.\r\n     * Unlike other methos, this registers 2 different events\r\n     * \r\n     * @param reception_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    public include_Receptions(reception_list: t_reception[]): this {\r\n\r\n        if (!this._receptions) {\r\n            this._receptions = [];\r\n        }\r\n\r\n        if (!this._subscriptions) {\r\n            this._subscriptions = [];\r\n        }\r\n\r\n        if (!this._announcements) {\r\n            this._announcements = [];\r\n        }\r\n\r\n        this._receptions.push(...reception_list);\r\n\r\n        reception_list.forEach((reception: t_reception) => {\r\n\r\n            this._subscriptions.push({\r\n                Scope: reception.Scope,\r\n                Namespace: reception.Namespace || this.get_GlobalNamespace(),\r\n                Listen: reception.Listen,\r\n                Call: reception.Call,\r\n            } as t_subscription);\r\n\r\n            this._announcements.push({\r\n                Scope: reception.Scope,\r\n                Namespace: reception.Namespace,\r\n                Talk: reception.Talk,\r\n            } as t_announcement);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Includes the given array items among the services for the set local or \r\n     * global namespace\r\n     * \r\n     * @param services_list\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    public include_Services(services_list: t_service[]): this {\r\n\r\n        if (!this._services) {\r\n            this._services = [];\r\n        }\r\n\r\n        this._services.push(...services_list);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n/*\r\n * ======================================================= Boundary 1 =========\r\n *\r\n *\tIMPLEMENTATION\r\n *\t\r\n *\tRegistration of controls\r\n *\tAnnouncement of startup states\r\n *\r\n * ============================================================================\r\n */\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tINITIALIZE CONTROLS\r\n */\r\n\r\n    /**\r\n     * Runs listen and talk operations in the order and times that they are \r\n     * supposed to be run\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    public initialize_Controller(): this {\r\n\r\n        this.set_Controller();\r\n\r\n        this.announce_ToAllServices.bind(this, C_BootState.ClassReady, 1000),\r\n\r\n        // Listens\r\n        this.get_Controller()\r\n            .wait(\r\n                e_Scope.Global,\r\n                C_Controller.AllServices,\r\n                C_StartupTalk.run_Listen,\r\n                undefined,\r\n                () => {\r\n\r\n                    this.register_Dependencies();\r\n                    this.register_Subscriptions();\r\n\r\n                    this.announce_ToAllServices(C_BootState.ListenReady);\r\n                },\r\n            );\r\n\r\n        // Talks\r\n        this.get_Controller()\r\n            .wait(\r\n                e_Scope.Global,\r\n                C_Controller.AllServices,\r\n                C_StartupTalk.run_Talk,\r\n                undefined,\r\n                () => {\r\n\r\n                    this.register_Announcements();\r\n                    this.register_Services();\r\n\r\n                    this.announce_ToAllServices(C_BootState.TalkReady);\r\n                },\r\n            );\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tREGISTER CONTROLS\r\n *\t\r\n *  These are used by the method {@link initialize_Controller} to register \r\n *  included controls\r\n */\r\n\r\n    /**\r\n     * Excetutes controller for the subscriptions that were registered by the\r\n     * include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    private register_Subscriptions(): void {\r\n        if (this._subscriptions) {\r\n            this._subscriptions.forEach((subscription: t_subscription) => {\r\n                this.get_Controller().subscribe(\r\n                    subscription.Scope,\r\n                    subscription.Namespace,\r\n                    subscription.Listen,\r\n                    subscription.Call,\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the dependencies that were registered by the \r\n     * include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    private register_Dependencies(): void {\r\n        if (this._dependencies && this._dependencies.length > 0) {\r\n            this._dependencies\r\n                .forEach((dependency: t_dependency_group) => {\r\n                    this.get_Controller().wait_Some(\r\n                        dependency.Scope,\r\n                        dependency.Members,\r\n                    )\r\n                        .then((data) => {\r\n                            return dependency.Call(data);\r\n                        })\r\n                        .then(\r\n                            this.announce_ToAllServices.bind(\r\n                                this,\r\n                                C_BootState.DependencyReady,\r\n                            ),\r\n                        );\r\n            });\r\n        } else {\r\n            this.announce_ToAllServices(C_BootState.DependencyReady);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the announcements that were registered by the\r\n     * include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    private register_Announcements(): void {\r\n        if (this._announcements) {\r\n            this._announcements.forEach((announcement: t_announcement) => {\r\n                this.get_Controller().announce(\r\n                    announcement.Scope,\r\n                    announcement.Namespace,\r\n                    announcement.Talk,\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Excetutes controller for the services that were registered by the \r\n     * include method\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    private register_Services(): void {\r\n        if (this._services) {\r\n            this._services.forEach((service: t_service) => {\r\n                this.get_Controller().respond(\r\n                    service.Scope,\r\n                    service.Call,\r\n                    service.Static || false,\r\n                    e_ServiceGroup.Standard,\r\n                );\r\n            }); \r\n        }\r\n    }\r\n\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tMANAGE CONTROLLER SEQUENCES\r\n */\r\n\r\n    /**\r\n     * Executes the provided Controller talks and listens in sequence\r\n     * \r\n     * @param sequence_steps\r\n     * @param scope\r\n     * @param manager_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected manage_ControllerSequence(\r\n        sequence_steps: Array<t_sequenceStep>,\r\n        scope: t_singleScope,\r\n        manager_namespace: t_namespace,\r\n    ): Promise<void> {\r\n\r\n        const step_promise_stack:\r\n            Array<Promise<t_resolutionInstructionNoArgs>> = [];\r\n\r\n        let steps_promise_sequence: Promise<void> = Promise.resolve();\r\n\r\n        sequence_steps.forEach((step, index) => {\r\n\r\n            step_promise_stack[index] = new Promise((resolve_step_promise) => {\r\n\r\n                return this.get_Controller().wait(\r\n                    scope,\r\n                    manager_namespace,\r\n                    step.Listen,\r\n                    (transmission: t_transmission) => {\r\n\r\n                        step.List = step.List.filter((value: string) => {\r\n                            return value !== transmission.Sender;\r\n                        });\r\n\r\n                        return step.List.length < 1;\r\n\r\n                        console.log(`remaining list: \\n ${JSON.stringify(step.List)}`)\r\n                    },\r\n                    () => {\r\n                        return resolve_step_promise(step.Listen);\r\n                    },\r\n                ); // return this.get_Controller().wait\r\n\r\n            }); // step_promise_stack[index]\r\n\r\n            steps_promise_sequence = steps_promise_sequence\r\n                .then(() => {\r\n\r\n                    step.sniff([\"StartMessage\"], undefined,\r\n                        (start_message: string) => {\r\n                            console.log(start_message);\r\n                        });\r\n\r\n                    step.sniff([\"Talk\"], undefined,\r\n                        (step_talk: t_resolutionInstructionNoArgs) => {\r\n                            this.get_Controller().announce(\r\n                                scope,\r\n                                manager_namespace,\r\n                                step_talk,\r\n                            );\r\n                        });\r\n\r\n                    return step_promise_stack.sniff([(index).toString()],\r\n                        () => {\r\n                            throw new Error(`Active step requires ${index} members`);\r\n                        },\r\n                        () => {\r\n                            const active_step_promise_stack =\r\n                                step_promise_stack.slice(0, index + 1);\r\n                            return Promise.all(active_step_promise_stack);\r\n                        });\r\n\r\n                }); // steps_promise_sequence.then\r\n\r\n        }); // sequence_steps.forEach\r\n\r\n        return steps_promise_sequence;\r\n\r\n    }\r\n\r\n\r\n/* --------------------------------------------------------- Use Case ---------\r\n *\tANNOUNCE STATES \r\n */\r\n\r\n    /**\r\n     * Standardized method for announcing to all services\r\n     * \r\n     * @param resolution_instruction\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected announce_ToAllServices(\r\n        resolution_instruction: t_resolutionInstruction,\r\n        delay: t_epoch = 0,\r\n    ): void {\r\n        this.get_Controller().announce(\r\n            e_Scope.Global,\r\n            C_Controller.AllServices,\r\n            resolution_instruction,\r\n            delay,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Standardized method for library adding\r\n     * \r\n     * @param library_source_namespace\r\n     *\r\n     * @remarks\r\n     * Class: M_ControllerEvents\r\n     * Service: Controller\r\n     */\r\n    protected announce_LibraryAdded(\r\n        library_source_namespace: t_namespace,\r\n    ): void {\r\n        this.get_Controller().announce(\r\n            e_Scope.Global,\r\n            C_Controller.AllServices,\r\n            [\r\n                ...C_BootState.LibraryAdded,\r\n                [library_source_namespace],\r\n            ] as t_resolutionInstruction,\r\n            true,\r\n        );\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}